<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
 <head> 
  <meta http-equiv="Cache-Control" content="no-cache"> 
  <meta http-equiv="Pragma" content="no-cache"> 
  <meta http-equiv="Expires" content="-1"> 
  <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
  <meta http-equiv="Content-Language" content="en-us"> 
  <!-- Start USER_V2 SE --> 
  <!-- The server is oma-tkt1.xosn.com/10.3.8.92--> 
  <!-- The time is 03/02/2015 11:33:27 AM EST--> 
  <meta http-equiv="X-UA-Compatible" content="IE=7"> 
  <title>Official Site of UC Riverside Ticketing</title> 
  <meta name="DESCRIPTION" content="neulion360,News, scores, schedules, stats, live video, live audio, on-demand video"> 
  <meta name="KEYWORDS" content="Wrestling,Donor Management,Women's Golf,Men's Ice Hockey,Women's Ice Hockey,Football,Soccer,Rally Squad,Gymnastics,Swimming and Diving,Track and Field,Softball,Men's Golf,Men's Tennis,Women's Tennis,Volleyball,Baseball,Administration,None,Men's Basketball,Women's Basketball,Athletics,Development,Ticketing,Event Registration,Men's Lacrosse,Women's Lacrosse,Guest Management,Boxing,Venues,Schedule,Archives,Staff Directory,Roster,news,Facility,Welcome,Schedule &amp; Results,Coaching Staff,Promotions,Media Guide,News,Camps,Statistics,"> 
  <meta name="robots" content="noindex,nofollow"> 
  <meta name="google-site-verification" content="+EK4QCKWnDhsRahChpa2ij4rjPpW5LGkdSRihOBvS4g="> 
  <script type="text/javascript" src="/oemjs/mootools_packed.js"></script> 
  <script type="text/javascript" src="/oemjs/0/popupBox.js"></script> 
  <script type="text/javascript" src="/oemjs/0/seatmapSelect.js"></script> 
  <link rel="stylesheet" href="/css/0/TktPayflow.css"> 
  <link rel="stylesheet" href="/css/0/TktSeatMap.css"> 
  <link rel="stylesheet" href="/css/0/quickReg.css"> 
  <script type="text/javascript" src="/oemjs/0/quickReg.js"></script> 
  <!-- start jquery --> 
  <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.4/jquery.min.js"></script> 
  <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.7/jquery-ui.min.js"></script> 
  <script type="text/javascript" src="/oemjs/jquery/plugins/jquery.cycle.all.js"></script> 
  <script type="text/javascript">jQuery.noConflict();</script> 
  <!-- end jquery -->
  <!-- Start List Menu --> 
  <!-- End List Menu --> 
  <!-- Google Analytics --> 
  <link rel="stylesheet" href="/css/0/global-user-v2.css" media="screen"> 
  <!-- End USER_V2 SE --> 
  <base href="https://tkt.xosn.com/"> 
  <link rel="P3Pv1" href="https://tkt.xosn.com/TermsAndConditions.dbml?DB_OEM_ID=25000"> 
  <link rel="stylesheet" href="/css/0/Tickets.css"> 
  <link rel="stylesheet" href="/css/0/Style.css"> 
  <link rel="stylesheet" href="/css/25000/Custom.css"> 
  <link rel="stylesheet" href="/css/25000/Menu.css"> 
  <script language="JAVASCRIPT" type="text/javascript" src="/js/overlib.js"></script> 
  <script language="JAVASCRIPT" type="text/javascript" src="/js/overlib_hideform.js"></script> 
 </head> 
 <body class="ticketing"> 
  <div id="site-overlay"> 
   <div id="site-container"> 
    <div id="header"> 
     <a href="/HomePage.dbml?&amp;DB_OEM_ID=25000"><img border="0" src="http://image.cdnllnwnl.xosnetwork.com/fls/25000/UCRTicketingWebsiteHeader2.jpg"></a> 
    </div> 
    <div id="site-menu"> 
     <!-- list-menu start --> 
     <div id="menu-container"> 
      <ul id="list-menu" class="horizontal ticketing" style="z-index:1001;" delayhover="0" slidedowntime="fast"> 
       <li id="lm-parent-1" class="parent first custom odd" style="http://www.gohighlanders.com"> <a style="" onmouseout="" class="top-menu-link" target="" onmouseover="" href="http://www.gohighlanders.com?DB_OEM_ID=25000">Athletics Home</a> </li> 
       <li class="divider"></li> 
       <li id="lm-parent-2" class="parent custom even" style=""> <a style="" onmouseout="" class="top-menu-link" target="" onmouseover="" href="/tickets/TicketLanding.dbml?DB_OEM_ID=25000&amp;">Ticket Sales</a> </li> 
       <li class="divider"></li> 
       <li id="lm-parent-3" class="parent ticket-eventcalendar odd" style=""> <a style="" onmouseout="" class="top-menu-link" target="" onmouseover="" href="https://tkt.xosn.com//tickets/EventCalendar.dbml?DB_OEM_ID=25000">Calendar</a> </li> 
       <li class="divider"></li> 
       <li id="lm-parent-4" class="parent ticket-venue even" style=""> <a style="" onmouseout="" class="top-menu-link" target="" onmouseover="" href="https://tkt.xosn.com//tickets/TicketHome.dbml?DB_OEM_ID=25000&amp;_MODE_=VENUEINFO">Venue Information</a> </li> 
       <li class="divider"></li> 
       <li id="lm-parent-5" class="parent ticket-cart odd" style=""> <a style="" onmouseout="" class="top-menu-link" target="" onmouseover="" href="https://tkt.xosn.com//tickets/TicketHome.dbml?DB_OEM_ID=25000&amp;_MODE_=DISPLAYCART">Ticket Cart</a> </li> 
       <li class="divider"></li> 
       <li id="lm-parent-6" class="parent ticket-myaccount even" style=""> <a style="" onmouseout="" class="top-menu-link" target="" onmouseover="" href="https://tkt.xosn.com//tickets/MyAccount.dbml?DB_OEM_ID=25000">My Account</a> </li> 
       <li class="divider"></li> 
       <li class="divider"></li> 
       <li id="lm-parent-8" class="parent custom even" style="http://ucrathleticsassociation.com/index.aspx"> <a style="" onmouseout="" class="top-menu-link" target="" onmouseover="" href="http://ucrathleticsassociation.com/index.aspx?DB_OEM_ID=25000">Donate</a> </li> 
       <li class="divider"></li> 
       <li id="lm-parent-9" class="parent last custom odd" style="http://www.gohighlanders.com/sports/2012/7/11/GEN_0711121650.aspx?id=1541"> <a style="" onmouseout="" class="top-menu-link" target="" onmouseover="" href="http://www.gohighlanders.com/sports/2012/7/11/GEN_0711121650.aspx?DB_OEM_ID=25000&amp;id=1541">FAQ</a> </li> 
      </ul> 
     </div> 
     <!-- list-menu end --> 
    </div> 
    <div id="main-content"> 
     <table cellpadding="0" cellspacing="0" border="0" width="100%"> 
      <tbody>
       <tr> 
        <td class="" valign="top"> 
         <div id="tkt_content"> 
          <div id="ticketAddModeDiv"></div> 
          <script language="JAVASCRIPT" type="text/javascript">
var TKTCookieHook = document.cookie;

function getCookie(name) {
        var index = TKTCookieHook.indexOf(name + "=");
        if (index == -1) return null;
        index = TKTCookieHook.indexOf("=", index) + 1;
        var endstr = TKTCookieHook.indexOf(";", index);
        if (endstr == -1) endstr = TKTCookieHook.length;
        return unescape(TKTCookieHook.substring(index, endstr));
}
function setCookie(name, value, hours) {
        var today = new Date();
        var expiry = new Date(today.getTime() + hours * 60 * 60 * 1000);
        if (value != null && value != "")
              document.cookie=name + "=" + escape(value) + "; expires=" + expiry.toGMTString() + "; path=/";
        TKTCookieHook = document.cookie; // update TKTCookieHook
}
</script> 
          <script language="JAVASCRIPT" type="text/javascript">
setCookie('LAST_OP_TOTAL_SECS', '', 1);
</script> 
          <script language="JAVASCRIPT" type="text/javascript">
function mustEnter(el, name) {
	  var tmpString
	  var status = true;
	  tmpString =rtrim(el.value);
	  
	  //it is for tinymce fix
	  if (el.tagName.toUpperCase() == 'TEXTAREA' && typeof(tinyMCE) != 'undefined' && tinyMCE)
	  {
	  		tinyMCE.triggerSave();
	  		tmpString =rtrim(el.value);
	  		tmpString = tmpString.replace(/\w+\s*=\s*".*?"|<br mce_bogus="1">|&nbsp;|<br\s*(\/)*>/g, "");
			  tmpString = tmpString.replace(/<\w*\s*>|<\/\w*\s*>/g, "");
	  		//alert(tmpString);
	  }
	  
	  if (tmpString.length <= 0)
		{
			alert("You must enter: " + name);
			if(el.enabled && el.visible)
			{
				el.focus();
			}
			return false;
		}
		return true;
}
function isValueEntered(theValue) {
        var tmpString
        var status = true
        tmpString =rtrim(theValue)
        if (tmpString.length <= 0)
        {
                status = false;
        }
        return status
}
function isStringFilled(theValue,errMsg) {
        var tmpString
        var status = true
        tmpString =rtrim(theValue)
        if (tmpString.length <= 0)
        {
                status = false;
		alert(errMsg);
        }
        return status
}

function rtrim(theString) {
        var outString
        var thelength
        var status = true

        thelength = theString.length
        trimlength = theString.length
        for (var i=(thelength-1); i >= 0; i--)
        {
                var thischar = theString.charAt(i)
                if (thischar == " ")
                        trimlength--
                else
                        break
        }
        outString = theString.substring(0,trimlength)
        return outString
}
function getNumbersOnly(theString) {
        var thelength
        var status = true
	var outString = "";
 
        thelength = theString.length
        for (var i=(thelength-1); i >= 0; i--)
        {
                var thischar = theString.charAt(i)
                if (isdigit(thischar) != 0)
                {
        		outString = thischar + outString;
                }
        }
        return outString;
}

function isNumericCheckFilled(theString, errMsg, mustfill) {
        var thelength
        var status = true

        thelength = theString.length
        for (var i=(thelength-1); i >= 0; i--)
        {
                var thischar = theString.charAt(i)
                if (isdigit(thischar) == 0)
                {
                        status = false
                }
        }
	if (thelength <= 0 && mustfill == true)
	{
		status = false;
	}
	if (status == false && errMsg.length)
	{
                alert(errMsg);
	}
        return status;
}
function isNumeric(theString, errMsg) {
	return isNumericCheckFilled(theString, errMsg, true);
}

function getMoneyNumbersOnly(theString) {
	return getMoneyNumbersOnly(theString, false);
}
function getMoneyNumbersOnly(theString, allow_neg) {
        var thelength
        var status = true
        var outString = "";
	var have_dot = 0;
	var after_dot_cnt = 0;

        thelength = theString.length
        for (var i= 0; i < thelength; i++)
        {
                var thischar = theString.charAt(i)
                if (isdigit(thischar) != 0)
                {
			if(after_dot_cnt < 2)
			{
				outString = outString + thischar;
			}
			if(have_dot == 1)
			{
				after_dot_cnt++;
			}
                }
		else if (thischar == ".")
                {
			have_dot = 1;
                        outString = outString + thischar;
                }
		else if (thischar == "-" && allow_neg == true)
                {
                        outString = outString + thischar;
                }
        }
        return outString;
}

function isMoneyNumericCheckFilled(theString, errMsg, mustfill) {
	return isMoneyNumericCheckFilled(theString, errMsg, mustfill, false);
}
function isMoneyNumericCheckFilled(theString, errMsg, mustfill, allow_neg) {
        var thelength
        var status = true
	var digitFound = false;

        thelength = theString.length
        for (var i=(thelength-1); i >= 0; i--)
        {
                var thischar = theString.charAt(i)
                if (isdigit(thischar) == 0)
                {
			if (thischar != ".")
			{
				if (thischar == "-")
				{
					if(allow_neg == false)
					{
						status = false
					}
				}
				else
				{
					status = false
				}
			}
                }
		else 
		{
			digitFound = true;
		}
        }
	if (mustfill == false && thelength > 0 && digitFound == false)
	{
		status = false;
	}
	if (mustfill == true && digitFound == false)
	{
		status = false;
	}
	if (thelength <= 0 && mustfill == true)
	{
		status = false;
	}
	if (status == false && errMsg.length)
	{
                alert(errMsg);
	}
        return status;
}

function isMoneyNumeric(theString, errMsg) {
	return isMoneyNumericCheckFilled(theString, errMsg, true);
}
function isAlphanumeric(alphane)
{
	var numaric = alphane;
	for(var j=0; j<numaric.length; j++)
		{
		  var alphaa = numaric.charAt(j);
		  var hh = alphaa.charCodeAt(0);
		  if((hh > 47 && hh<59) || (hh > 64 && hh<91) || (hh > 96 && hh<123))
		  {
		  }
		else	{
			 return false;
		  }
		}
 return true;
}


function isdigit(val) {
        var theval

        if (val == "0")
                return 1
        else
        {
                theval = parseInt(val,10)
                if (isNaN(theval))
                        return 0
                else
                {
                        if (theval == 0)
                                return 0
                        else
                                return 1
                }
        }

}

function getStringMonth(num_month) {
	var returnString = "";
	if (num_month == 0) { returnString = "January"; }
	if (num_month == 1) { returnString = "February"; }
	if (num_month == 2) { returnString = "March"; }
	if (num_month == 3) { returnString = "April"; }
	if (num_month == 4) { returnString = "May"; }
	if (num_month == 5) { returnString = "June"; }
	if (num_month == 6) { returnString = "July"; }
	if (num_month == 7) { returnString = "August"; }
	if (num_month == 8) { returnString = "September"; }
	if (num_month == 9) { returnString = "October"; }
	if (num_month == 10) { returnString = "November"; }
	if (num_month == 11) { returnString = "December"; }

	return returnString;
}

//****** Month must be passed in as number from 0 to 11	***********//
function takeYear(theDate)
{
	x = theDate.getYear();
	var y = x % 100;
	y += (y < 38) ? 2000 : 1900;
	return y;
}

function checkForValidDate(month,day,year) {
        var status = false;
        var dateObject;
        var stringMonth;
        var startDayString;
	var outDay, outMonth, outYear;
        dateObject = new Date(
                                year,
                                month,
                                day);
        outMonth = dateObject.getMonth(); 
        outYear = takeYear(dateObject);
        outDay = dateObject.getDate(); 

	if (
		(outMonth == month) &&
		(outDay == day) &&
		(outYear == year)) 
	{
		status = true;
	}
//	confirm ("check for valid date:" + status + ":" + "\n" +
//		outMonth + ":" + month + "\n" +
//		outDay + ":" + day + "\n" +
//		outYear + ":" + year + "");
        return status;
}

function valFormDate(monthEl, dayEl, yearEl) {
        var mon = monthEl.options[monthEl.selectedIndex].value;
        mon = mon - 1;
        var day = dayEl.options[dayEl.selectedIndex].value;
        var year = yearEl.options[yearEl.selectedIndex].value;
        if(checkForValidDate(mon, day, year) == false)
        {
                return false;
        }
        return true;
}

</script> 
          <script language="JAVASCRIPT" type="text/javascript">

function valRoutingNumber(rnum) {
	//  Electronic Funds Transfer Routing Number Check    
	if(rnum == null)
	{
		return false;
	}
	if(rnum.length != 9)
	{
		return false;
	}
	if(rnum.substring(5, 6) == '-')
	{
		// Canadian Transit Number  XXXXX-YYY http://en.wikipedia.org/wiki/Routing_transit_number
		return true;
	}
	var modval = 3 * new Number(rnum.substring(0, 1)) + 7 * new Number(rnum.substring(1, 2)) + new Number(rnum.substring(2, 3));
	modval += 3 * new Number(rnum.substring(3, 4)) + 7 * new Number(rnum.substring(4, 5)) + new Number(rnum.substring(5, 6));
	modval += 3 * new Number(rnum.substring(6, 7)) + 7 * new Number(rnum.substring(7, 8)) + new Number(rnum.substring(8, 9));
	var endval = (modval % 10);
	if((modval % 10) !=  0)
	{
		return false;
	}
	return true;
}
function domod10(field_to_validate,silent) {

        var card = ""
        var thelength = 0
        var f
        var NewNumber = ""
        thelength = field_to_validate.value.length;
        var a_msg = "\nThe credit card number is invalid."

        var status = false
        var firstdigit = -1

        if (thelength > 10)
        {
                f = field_to_validate.value;

                var firstdigit = -1
                firstdigit = parseInt(f.charAt(0),10)

                for (var i=(thelength-1); i >= 0; i--)
                {
                        var thischar = f.charAt(i)
                        if (isdigit(thischar))
                        {
                                card = card + thischar
                                NewNumber = thischar + NewNumber
                        }
                }

                var sum = 0
                var digit
                var num

                if ((card.length > 10) && (firstdigit > 0))
                {
                        for(var j = 0; j < card.length; j++)
                        {
                                digit = card.substring(j, j+1)
                                num = parseInt(digit,10)
                                if ((j % 2) > 0)
                                {
                                        num *= 2
                                        var num_str = "" + num
                                        var d1 = parseInt(num_str.substring(0,1),10)
                                        var d2 = 0
                                        if (num_str.length > 1)
                                        {
                                                d2 = parseInt(num_str.substring(1,2),10)
                                        }
                                        num = d1 + d2
                                }
                                sum =  sum + num
                        }
                }
                else
                        sum = 1

                if ((sum % 10) == 0)
                {
                        a_msg = "\nThe credit card number is valid."
                        status = true
                }
        }
 
        if (!silent)
        {
                confirm(a_msg)
        }
        if (status)
        {
                field_to_validate.value = NewNumber
        }
        return status
}

function validate_exp_date(in_month, in_year, silent, must_be_in_future) {

        var card = ""
        var themonthlength = 0
        var theyearlength = 0
        var f
        var THE_MONTH = eval("in_month.value")
        var THE_YEAR = eval("in_year.value")
        var msg = "The credit card expiration month is invalid."
        var focus_var = in_month
        var isvalid = true
        var cnt
        var outvar
        outvar = ""

        for (cnt=THE_MONTH.length; cnt<2; cnt++)
        {
                outvar = outvar + "0"
        }
        outvar = outvar + THE_MONTH
        THE_MONTH = outvar
        in_month.value = outvar

        outvar = ""
        for (cnt=THE_YEAR.length; cnt<2; cnt++)
        {
                outvar = outvar + "0"
        }
        outvar = outvar + THE_YEAR
        THE_YEAR = outvar
        in_year.value = outvar

        isvalid = isNumeric(THE_MONTH,"")
        if (isvalid)
        {
                isvalid = isNumeric(THE_YEAR,"")
                if (!isvalid)
                {
                        msg = "The credit card expiration year is invalid."
                        focus_var = in_year
                }
        }

        if (isvalid)
        {
                var intMonth
                var intYear
                intMonth = parseInt(THE_MONTH,10)
                intYear = parseInt(THE_YEAR,10)
                if ((intMonth <= 0) || (intMonth > 12))
                {
                        isvalid = false
                }

                if (must_be_in_future)
                {               
                        var CurYear
                        if (isvalid)
                        {
                                TheDate = new Date()
                                CurYear = parseInt(TheDate.getYear(),10)
                                if (CurYear < 1999)
                                {
                                        CurYear += 1900
                                }
                                var diffyear = Math.abs(CurYear-intYear)
                                if (diffyear > 12)
                                {
                                        intYear += 100
                                        diffyear = Math.abs(CurYear-intYear)
                                        if (diffyear > 12)
                                        {
                                                msg = "The credit card expiration year is invalid."
                                                focus_var = in_year
                                                isvalid = false
                                        }
                                }
                                if (isvalid)
                                {
                                        if (intYear < CurYear)
                                        {
                                                msg = "The credit card expiration year is invalid."
                                                focus_var = in_year
                                                isvalid = false
                                        }
                                        else
                                        {
                                
                                                if (intYear == CurYear)
                                                {
                                                        var CurMonth = parseInt(TheDate.getMonth(),10) + 1
                 
                                                        if (intMonth < CurMonth)
                                                                isvalid = false
                                                }
                                        }
                                }
                        }
                }
        }
        if (isvalid == false)
        {
                if (!silent)
                {
                      alert(msg)
                }
        }
        return isvalid;
}

function validateCard(form) {
        var status = true

        var verifyNumber = ""
        var errorMsg = "The credit card number is invalid."

//*****************************************************
//      Removed, trl;
//*****************************************************
//        var verifyMonth= ""
//        var verifyYear = ""
//*****************************************************

        if (verifyNumber.length > 0)
        {
                if (form.EDIT_CARD_NUMBER.value != verifyNumber)
                {
                        status = false
                        errorMsg = "The credit card information does not match."
                }
        }

//*****************************************************
//      Removed, trl;
//*****************************************************
//      if (status && verifyMonth.length > 0)
//      {
//              if (form.EDIT_CREDIT_CARD_MONTH.options[form.EDIT_CREDIT_CARD_MONTH.selectedIndex].value !=
//                      verifyMonth)
//              {
//                      status = false
//                      errorMsg = "The credit card information does not match."
//              }
//      }
//      if (status && verifyYear.length > 0)
//      {
//              if (form.EDIT_CREDIT_CARD_YEAR.options[form.EDIT_CREDIT_CARD_YEAR.selectedIndex].value !=
//                      verifyYear)
//              {
//                      status = false
//                      errorMsg = "The credit card information does not match."
//              }
//      }
//*****************************************************
 
        if (status)
        {
                if (form.EDIT_CARD_NUMBER.value.length < 13)
                        status = false
                else
                        status = domod10(form.EDIT_CARD_NUMBER,1)
        }
 
        if (status)
        {
                status = validate_exp_date(form.EDIT_CREDIT_CARD_MONTH.options[form.EDIT_CREDIT_CARD_MONTH.selectedIndex],
                form.EDIT_CREDIT_CARD_YEAR.options[form.EDIT_CREDIT_CARD_YEAR.selectedIndex] , false, true)
        }
        else
        if (!status)
        {
                confirm(errorMsg)
        }
        return status
}

function CCGetCardType(cardnumber) { 
	var l_sub1 = new Number(cardnumber.substring(0, 1));
	var l_sub2 = new Number(cardnumber.substring(0, 2));
	var l_sub3 = new Number(cardnumber.substring(0, 3));
	var l_sub4 = new Number(cardnumber.substring(0, 4));
        if(l_sub1 == 4)  // Visa
	{
                return 1;
	}
        else if(l_sub4 == 6011) // Discover
	{
                return 4;
	}
        else if(l_sub2 >= 51 && l_sub2 <= 55) // MasterCard
	{
                return 2; 
	}
        else if(l_sub2 == 34 || l_sub2 == 37) // American Express
	{
                return 3;
	}
        else if(l_sub2 == 36 || l_sub2 == 38 || (l_sub3 >= 300 && l_sub3 <= 305)) // Diners Club
	{
                return 5;
	}
	return 0;
}

function CCIsSupportedType(cardnumber, types, notifytypes) { 
	var card_type_id = CCGetCardType(cardnumber);
	var type_arr = types.split(",");
	for(var i = 0; i < type_arr.length; i++)
	{
		if(type_arr[i] == card_type_id)
		{
			return true;
		}
	}
	if(notifytypes == true)
	{
		var str = "The only supported card types are:\n\n";
		for(var i = 0; i < type_arr.length; i++)
		{
			if(type_arr[i] == "1")
				str += "Visa\n";
			else if(type_arr[i] == "2")
				str += "MasterCard\n";
			else if(type_arr[i] == "3")
				str += "American Express\n";
			else if(type_arr[i] == "4")
				str += "Discover\n";
			else if(type_arr[i] == "5")
				str += "Diners Club\n";
		}
		str += "\nWe appologize for any inconvenience.";
		alert(str);
	}
	return false;
}

</script> 
          <script language="JAVASCRIPT" type="text/javascript">
</script> 
          <script language="JAVASCRIPT" type="text/javascript">
var NS4 = (document.layers) ? true : false; 

function checkEnterKey(event, mode, extra) {
	var code = 0; 
	if (NS4) 
	{ 
		code = event.which; 
	} 
	else 
	{ 
		code = event.keyCode; 
	} 
	if(code == 13) 
	{
		SetModInfoSubmit(mode, extra);
	} 
}

function CashPurchase(form) {
	form._MODE_.value = "CASHPURCHASE";
	form.submit();
}
function FormVerify(form) {
	if(!validateWillCall())
	{
		return false;
	}
	if(form._MODE_.value == "CREDITCARDPURCHASE")
	{
		return valCCform(form);
	}
	return true;
}
function validateWillCall() {
	var el = document.getElementById('EL_FRM_WILL_CALL_INFO');
	var ckel = document.getElementById('EL_FRM_IS_WILL_CALL');
	var retval = true;
	if(el != null && ckel != null)
	{
		if(el.value.length > 0 && ckel.checked == false)
		{
			var res = confirm("Is this a Will Call Order?");
			if(res == true)
			{
				ckel.checked = true;
				retval = false;
			}
		}
		if(el.value.length == 0 && ckel.checked == true)
		{
			alert("Please enter Will Call Information\n\nThe order is marked as a Will Call order,\nbut there is no Will Call information entered.");
			retval = false;
		}
	}
	return retval;
}
function CheckWillCallInfo() {
	var el = document.getElementById('EL_FRM_WILL_CALL_INFO');
	var ckel = document.getElementById('EL_FRM_IS_WILL_CALL');
	if(el != null && ckel != null)
	{
		if(el.value.length > 0 && ckel.checked == false)
		{
			var res = confirm("Is this a Will Call Order?");
			if(res == true)
			{
				ckel.checked = true;
			}
		}
	}
}
function SetModInfoSubmit(mode, extra) {
	var form = document.RESCONFIRM;
	if(form != null)
	{
		if(mode == "ABORTRESERVATION")
		{
			if(confirm('Cancel this Reservation?'))
			{
				form._MODE_.value = mode;
				form.submit();
			}
		}
		else if(mode == "REMOVEINVOICE")
		{
			if(confirm("Delete this entire order?"))
			{
				form._MODE_.value = mode;
				form.submit();
			}
		}
		else
		{
			form._MODE_.value = mode;
			form.submit();
		}
	}
}
function RemoveTicket(ticket_id) {
	var form = document.RESCONFIRM;
	if(form != null)
	{
		if(confirm('Delete this ticket?'))
		{
			form._MODE_.value = "DELETETICKET";
			form.DEL_TKT_EVENT_TICKET_ID.value = ticket_id;
			form.submit();
		}
	}
}
function RemoveOrder(invoice_part_id) {
	var form = document.RESCONFIRM;
	if(form != null)
	{
		if(confirm('Delete this Order?'))
		{
			form._MODE_.value = "REMOVEINVOICEPART";
			form.DEL_TKT_INVOICE_PART_ID.value = invoice_part_id;
			form.submit();
		}
	}
}
function valCCform(form) {
	var scanval = document.getElementById('EL_FRM_CARD_NUMBER');
	var has_checkbox = false;
	var i = 0;
	var check_count = 0;
	var ship_check_count = 0;
	if(scanval.value.substring(0, 2) == "%B")
	{
		var arr = scanval.value.split("^");
		if(arr.length > 1)
		{       
			var cc_num = arr[0].substring(2);
			var cc_name = arr[1];
			var cc_exp = arr[2];
			var cc_exp_yr = cc_exp.substring(0, 2);
			var cc_exp_mo = cc_exp.substring(2, 4);
			document.getElementById('EL_FRM_CARD_NUMBER').value = cc_num;
			document.getElementById('EL_FRM_CARD_NAME').value = cc_name;
			document.getElementById('EL_FRM_CARD_NAME').value = cc_name;
			if(cc_exp_yr < 50)
			{
				cc_exp_yr = "20" + cc_exp_yr;
			}
			else
			{
				cc_exp_yr = "19" + cc_exp_yr;
			}
			document.getElementById('EL_FRM_CARD_EXP_DATE_YYYY').value = cc_exp_yr;
			document.getElementById('EL_FRM_CARD_EXP_DATE_MM').value = cc_exp_mo;
		}       
	}
	for(i = 0; i < AccountCCIds.length; i++)
	{
		var el = document.getElementById(AccountCCIds[i].id);
		if(el != null)
		{
			if(el.checked == true)
			{
				has_checkbox = true;
				check_count++;
			}
		}
	}
	for(i = 0; i < AccountBillSAIds.length; i++)
	{
		var el = document.getElementById(AccountBillSAIds[i].id);
		if(el != null)
		{
			if(el.checked == true)
			{
				ship_check_count++;
			}
		}
	}
	if(check_count > 1)
	{
		alert("Only ONE Credit Card may be checked.");
		return false;
	}
	if(ship_check_count > 1)
	{
		alert("Only ONE Shipping Address may be checked for Credit Cards.");
		return false;
	}
	if(has_checkbox == true && document.getElementById('EL_FRM_CARD_NUMBER').value.length > 0)
	{
			alert("Please uncheck the credit card information checkbox if you are entering a credit card number manually.");
			return false;
	}
	if(has_checkbox == false)
	{
		if(domod10(document.getElementById('EL_FRM_CARD_NUMBER'), true) == false)
		{
			alert("Invalid Credit Card Number");
			document.getElementById('EL_FRM_CARD_NUMBER').focus();
			document.getElementById('EL_FRM_CARD_NUMBER').select();
			return false;
		}
		fel = document.getElementById('EL_FRM_CARD_EXP_DATE_MM');
		if(!isNumeric(fel.value, "Card Expiration Month must be only numbers"))
			{ fel.focus(); fel.select(); return false; }
		fel = document.getElementById('EL_FRM_CARD_EXP_DATE_YYYY');
		if(!isNumeric(fel.value, "Card Expiration Year must be only numbers"))
			{ fel.focus(); fel.select(); return false; }
	}
	return true;
}
function valCashform(form, sale_amount) {
        fel = document.getElementById('EL_FRM_AMOUNT_TENDERED');
        if(!isMoneyNumericCheckFilled(fel.value, "Amount Tendered:" + fel.value + "\n\nMust be a number with an optional decimal point.", true))
                { fel.focus(); fel.select(); return false; }
	if(sale_amount != null)
	{
		if(sale_amount.length > 0)
		{
			var tamt = new Number(sale_amount);
			var tend = new Number(fel.value);
			if(tamt > tend)
			{
				alert("The amount tendered is less that the Ticket Charges\n\n$" + tend.toFixed(2) + " is not enough to pay for $" + tamt.toFixed(2) + " of ticket charges");
				return false;
			}
		}
	}
	else
	{
		alert("No Sale Amount");
	}
	return true;
}

function tktIDObj(id) {
	this.id = id;
}
var AccountCCIds = new Array();
var AccountBillSAIds = new Array();
var AccountSAIds = new Array();

function valInvoiceform(form) {
	var has_checkbox = false;
	var check_count = 0;
	for(i = 0; i < AccountSAIds.length; i++)
	{
		var el = document.getElementById(AccountSAIds[i].id);
		if(el != null)
		{
			if(el.checked == true)
			{
				has_checkbox = true;
				check_count++;
			}
		}
	}
	if(check_count > 1)
	{
		alert("Only ONE Shipping Address may be checked");
		return false;
	}
	var fn_el = document.getElementById('EL_FRM_SHIP_FIRST_NAME');
	var ln_el = document.getElementById('EL_FRM_SHIP_LAST_NAME');
	var addr_el = document.getElementById('EL_FRM_SHIP_ADDRESS1');
	var city_el = document.getElementById('EL_FRM_SHIP_CITY');
	var state_el = document.getElementById('EL_FRM_SHIP_STATE_PROV');
	var zip_el = document.getElementById('EL_FRM_SHIP_POSTAL_CODE');
	if(has_checkbox == true && 
		(
		fn_el.value.length > 0 
		||
		ln_el.value.length > 0 
		||
		addr_el.value.length > 0 
		||
		city_el.value.length > 0 
		||
		state_el.value.length > 0 
		||
		zip_el.value.length > 0 
		)
	)
	{
		alert("Please uncheck the shipping information checkbox if you are entering a shipping address manually.");
		return false;
	}
	if(has_checkbox == false)
	{
		if(!mustEnter(fn_el, "First Name"))
			{ fn_el.focus(); return false; }
		if(!mustEnter(ln_el, "Last Name"))
			{ ln_el.focus(); return false; }
		if(!mustEnter(addr_el, "Address"))
			{ addr_el.focus(); return false; }
		if(!mustEnter(city_el, "City"))
			{ city_el.focus(); return false; }
		if(!mustEnter(state_el, "State"))
			{ state_el.focus(); return false; }
		if(!mustEnter(zip_el, "Zip"))
			{ zip_el.focus(); return false; }

	}
	return true;
}
function valCheckform(form, sale_amount) {
        fel = document.getElementById('EL_FRM_AMOUNT_TENDERED');
        if(!isMoneyNumericCheckFilled(fel.value, "Amount Tendered:" + fel.value + "\n\nMust be a number with an optional decimal point.", true))
                { fel.focus(); fel.select(); return false; }
	if(sale_amount != null)
	{
		if(sale_amount.length > 0)
		{
			var tamt = new Number(sale_amount);
			var tend = new Number(fel.value);
			if(tamt > tend)
			{
				alert("The amount tendered is less that the Ticket Charges\n\n$" + tend.toFixed(2) + " is not enough to pay for $" + tamt.toFixed(2) + " of ticket charges");
				return false;
			}
		}
	}
	else
	{
		alert("No Sale Amount");
	}
	return true;
}
</script> 
          <form onsubmit="return FormVerify(this);" name="RESCONFIRM" method="POST" action="/tickets/TicketHome.dbml">
           <input type="HIDDEN" name="ATCLID" value="">
           <input type="HIDDEN" name="SPSID" value="">
           <input type="HIDDEN" name="SPID" value="">
           <input type="HIDDEN" name="DB_LANG" value="C">
           <input type="HIDDEN" name="DB_OEM_ID" value="25000"> 
           <input type="HIDDEN" name="_MODE_" value="CREDITCARDPURCHASE"> 
           <input type="HIDDEN" name="SALE_RES_ID" value=""> 
           <input type="HIDDEN" name="SALE_TKT_EVENT_ID" value="0"> 
           <input type="HIDDEN" name="DEL_TKT_EVENT_TICKET_ID" value=""> 
           <input type="HIDDEN" name="DEL_TKT_INVOICE_PART_ID" value=""> 
           <input type="HIDDEN" name="DEL_TKT_INVOICE_ID" value=""> 
           <table cellpadding="2" cellspacing="2" border="0" width="100%"> 
            <tbody>
             <tr> 
              <td align="CENTER" class="error"> ORDER NOT FOUND - 0: (DisplayInvoiceAll) </td> 
             </tr> 
            </tbody>
           </table> 
          </form> 
          <hr noshade> 
          <div id="get_account"> 
           <form name="ECOMLOGIN" method="POST" action="https://tkt.xosn.com//tickets/TicketHome.dbml"> 
            <input type="HIDDEN" name="NC" value="1"> 
            <input type="HIDDEN" name="FN" value="LOGIN"> 
            <input type="HIDDEN" name="TICKETKEY.25000" value="LLMQOJSSRQVHATS.20150302163327"> 
            <input type="HIDDEN" name="DMCARTKEY.25000" value="KDZAWPSOWDIOSPU.20150302163327"> 
            <input type="HIDDEN" name="CARTKEY.25000" value=""> 
            <input type="HIDDEN" name="SHRCARTKEY.25000" value="ZUBTLGOWEOEKGCR.20150302163327"> 
            <input type="HIDDEN" name="STORE_MODE" value=""> 
            <input type="HIDDEN" name="PG" value="/tickets/TicketHome.dbml"> 
            <input type="HIDDEN" name="DB_OEM_ID" value="25000"> 
            <input type="HIDDEN" name="DB_LANG" value="C"> 
            <input type="HIDDEN" name="PG_BAD" value="/tickets/BadLogin.inc"> 
            <input type="HIDDEN" name="DB_ACCOUNT_TYPE" value="user"> 
            <input type="HIDDEN" name="ACCT_LOGIN_MODE" value="VERIFY"> 
            <input type="HIDDEN" name="_MODE_" value="VERIFY"> 
            <input type="HIDDEN" name="POST_LOGIN_TARGET" value=""> 
            <input type="HIDDEN" name="SALE_RES_ID" value=""> 
            <input type="HIDDEN" name="SALE_TKT_SO_ID" value=""> 
            <input type="HIDDEN" name="mips_group_id" value=""> 
            <input type="hidden" name="sale_tkt_sale_categories_id" value=""> 
            <input type="HIDDEN" name="SALE_TKT_PERFORMER_ID" value=""> 
            <input type="HIDDEN" name="TS_SALE_PARTS_ID" value=""> 
            <input type="HIDDEN" name="FRM_TKT_SHIPPING_METHOD_ID" value=""> 
            <input type="HIDDEN" name="SALE_TKT_SEASON_ID" value=""> 
            <input type="HIDDEN" name="SALE_TKT_EVENT_ID" value="0"> 
            <input type="HIDDEN" name="SALE_TKT_ORDER_REQUEST_ID1" value=""> 
            <input type="HIDDEN" name="SALE_TKT_ORDER_REQUEST_TEXT1" value=""> 
            <input type="HIDDEN" name="DB_SLK" value="YES"> 
            <input type="HIDDEN" name="SHOW_HEAD_ROW" value="NO"> 
            <input type="HIDDEN" name="HIDDEN_VALUES_CARRY" value=""> 
            <div id="tkt_login"> 
             <div class="table_row"> 
              <div class="table_cell title"></div> 
              <div class="table_cell main">
               I Have an Account
              </div> 
             </div> 
             <div class="table_row"> 
              <div class="table_cell title">
               Login
              </div> 
              <div class="table_cell"> 
               <input type="TEXT" size="35" maxlength="128" name="ACCT_NUM_25000" value=""> 
              </div> 
             </div> 
             <div class="table_row"> 
              <div class="table_cell title">
               Password
              </div> 
              <div class="table_cell"> 
               <input type="PASSWORD" size="35" maxlength="30" name="PASSWD" value=""> 
              </div> 
             </div> 
             <div class="table_row"> 
              <div class="table_cell title"></div> 
              <div class="table_cell"> 
               <a onclick="$('forgot_login').style.display='block'">Do I Have an Account?</a> 
              </div> 
             </div> 
             <div class="table_row"> 
              <div class="table_cell title"></div> 
              <div class="table_cell content_off" id="forgot_login"> 
               <a href="/ForgotLogin.dbml?DB_OEM_ID=25000">Forgot Login?</a> 
              </div> 
             </div> 
             <div class="clear_table"></div> 
             <div> 
              <input type="submit" class="btn" id="signin" value=""> 
             </div> 
            </div> 
           </form> 
           <form method="POST" action="/tickets/TicketHome.dbml">
            <input type="HIDDEN" name="ATCLID" value="">
            <input type="HIDDEN" name="SPSID" value="">
            <input type="HIDDEN" name="SPID" value="">
            <input type="HIDDEN" name="DB_LANG" value="C">
            <input type="HIDDEN" name="DB_OEM_ID" value="25000">
            <input type="HIDDEN" name="HIDDEN_VALUES_CARRY" value=""> 
            <input type="HIDDEN" name="_MODE_" value="NEWCUSTOMER"> 
            <input type="HIDDEN" name="POST_LOGIN_TARGET" value=""> 
            <input type="HIDDEN" name="SALE_TKT_SEASON_ID" value=""> 
            <input type="HIDDEN" name="SALE_TKT_EVENT_ID" value="0"> 
            <div class="table_row"> 
             <div class="table_cell title"></div> 
             <div class="table_cell main">
              I Need an Account
             </div> 
            </div> 
            <div class="table_row"> 
             <div class="table_cell title">
              Email
             </div> 
             <div class="table_cell"> 
              <input type="TEXT" name="EDIT_ACCOUNT_NUM" value="" size="35"> 
             </div> 
            </div> 
            <div class="clear_table"></div> 
            <div>
             <input type="submit" id="continue" class="btn" value="">
            </div> 
           </form> 
           <div align="right">
            <input type="BUTTON" id="order_more_g" class="btn" onclick="SetModInfoSubmit('ORDERMORE', '');">
           </div> 
           <div align="right">
            <input type="BUTTON" id="cancel_order_g" class="btn" onclick="SetModInfoSubmit('REMOVEINVOICE', '');">
           </div> 
          </div> 
          <script language="javascript">
			document.getElementById("ticketAddModeDiv").innerHTML = '';
		</script> 
          <div id="checkout_serv">
            NeuLion Checkout Services - © Copyright 2015 
          </div> 
         </div> </td> 
       </tr> 
       <tr> 
        <td> </td> 
       </tr> 
      </tbody>
     </table> 
    </div>
    <!-- end div main-content --> 
   </div> 
   <!-- end div site-container --> 
  </div> 
  <!-- end div site-overlay --> 
  <!-- Start USER_V2 VB --> 
  <!-- Begin comScore Tag --> 
  <script type="text/javascript">
	var _comscore = _comscore || [];
	_comscore.push({ c1: "2", c2: "6035349", c3: "", c4: "http://tkt.xosn.com/tickets/TicketHome.dbml" });

	(function() {
		var s = document.createElement("script"), el = document.getElementsByTagName("script")[0]; s.async = true;
		s.src = (document.location.protocol == "https:" ? "https://sb" : "http://b") + ".scorecardresearch.com/beacon.js";
		el.parentNode.insertBefore(s, el);
	})();
	</script> 
  <noscript> 
   <img src="http://b.scorecardresearch.com/p?c1=2&amp;c2=6035349&amp;c3=&amp;c4=http%3A%2F%2Ftkt.xosn.com%2Ftickets%2FTicketHome.dbml&amp;c5=&amp;c6=&amp;c15=&amp;cv=2.0&amp;cj=1"> 
  </noscript> 
  <!-- End comScore Tag --> 
  <script type="text/javascript">
		
var page_LIVEEVENTVIEWERSCROLLBARS = 'no';	
					
var page_MP_EXTRA_SPORTONLY = 'N';	
				
var page_MP_GAMECENTER_VERSION = '2';	
				
var page_MP_EXTRA_SPORTONLY_SPORTKEYLIST = '';
					
var page_ON_DEMAND_VIEWER_HEIGHT = 640;	
			
var page_ON_DEMAND_VIEWER_WIDTH = 860;	
			
var page_ONDEMANDVIEWERSCROLLBARS = 'no';	
					
var page_MP_MEDIAPLAYER = 'JTVS_FLEX_WM';	
				
var page_MP_TAB = 'vod';	
				
var page_DB_OEM_ID = '25000';	
					
var page_SPSID = '';
					
var page_KEY = '';
					
var page_DB_KEY = '';
					
var page_DB_ACCOUNT_TYPE = 'USER';	
					
var page_IS_HOME_PAGE = 'NO';	
					
var page_SPID = '';
					
var page_HTTP_REQUEST_PATH = '/tickets/TicketHome.dbml';	
					
var page_SAVE_TEMPLATE = '';
					
var page_TMPL_PAGE_NAME = '';
					
var page__MODE_ = 'DISPLAYCART';	
					
var page_SHOW_ALL_OEMS = '';
					
var page_PRIMARY_COLOR = '';
					
var page_SECONDARY_COLOR = '';
					
var page_frm_show_injected_video = '';
					
var page_DBREWRITEVARS = '&ATCLID=&SPSID=&SPID=&DB_LANG=C&DB_OEM_ID=25000';	
				
var page_GOOGLE_ANALYTICS = '';
					
var page_SITE_BASE_SERVER = 'http://www.nmnathletics.com/';	
				
var page_SECURE_BASE_SERVER = 'https://www.nmnathletics.com/';	
				
var page_GOOGLE_ROLL_UP_ANALYTICS = 'https://www.nmnathletics.com/';	
				
var page_INJECT_VIDS_IN_ARTICLES = 'N';	
				
var page_HTTP_IMAGE_CACHE_SERVER = 'http://image.cdnllnwnl.xosnetwork.com';	
				
var page_HTTPS_IMAGE_CACHE_SERVER = '';
					
</script> 
  <script type="text/javascript" src="/oemjs/0/Menu.js"></script> 
  <script type="text/javascript" src="/oemjs/0/global-user-v2.js"></script> 
  <script type="text/javascript" src="/js/overlib.js"></script> 
  <script type="text/javascript" src="/js/overlib_hideform.js"></script> 
  <!-- Start DeepWidgets Manual --> 
  <script type="text/javascript">
				var dwOemId = 25000;
				var dwCountdownDataPath = 'http://image.cdnllnwnl.xosnetwork.com/xmlCache/25000/countdown.json';
			</script> 
  <script src="/DeepWidgets/javascripts/dwmswi.js" type="text/javascript"></script> 
  <!-- End USER_V2 VB -->   
 </body>
</html>