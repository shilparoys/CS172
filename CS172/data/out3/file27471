<!DOCTYPE html>
<html lang="ko">
 <head> 
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"> 
  <meta charset="utf-8"> 
  <title>Firejune - The Web is still changing.</title> 
  <meta name="geo.position" content="37.5;126.9"> 
  <meta name="geo.placename" content="Seoul, Korea Republic of"> 
  <meta name="geo.region" content="KO-KR"> 
  <meta name="author" content="파이어준"> 
  <meta name="description" content="이 사이트는 자바스크립트 프로그래밍을 중심으로 웹 애플리케이션 개발에 대한 내용을 주로 다룹니다."> 
  <meta name="keywords" content="자바스크립트, JavaScript, Ajax, Prototype, Scriptaculous, HTML, PHP, Node.JS, Web 2.0, UX, UI, DHTML, CSS, HTML5, CSS3, WebODF, ViewerJS, ODF, KO GmbH, 그래도 일년에 한번은 써야지..., Struct, 자바스크립트, C/C++, GitHub, ArrayBuffer, DataView, HTML5, 프로젝트, struct.js, 배포, 자바스크립트, Unsigned, Signed, 차이점, C, Uint8, Int8, ArrayBuffer, HTML5"> 
  <meta property="og:type" content="blog"> 
  <meta property="og:title" content="Firejune - The Web is still changing."> 
  <meta property="og:site_name" content="Firejune"> 
  <meta property="og:url" content="http://firejune.com"> 
  <meta property="og:description" content="이 사이트는 자바스크립트 프로그래밍을 중심으로 웹 애플리케이션 개발에 대한 내용을 주로 다룹니다."> 
  <meta name="viewport" content="width=809"> 
  <meta name="apple-mobile-web-app-capable" content="yes"> 
  <meta name="apple-mobile-web-app-status-bar-style" content="black"> 
  <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub"> 
  <link rel="alternate" type="application/rss+xml" title="rss" href="http://firejune.com/rss"> 
  <link rel="canonical" href="http://firejune.com"> 
  <link rel="prev" title="빅엔디안과 리틀엔디안 개념" href="http://firejune.com/page/2"> 
  <link rel="apple-touch-startup-image" href="/apple-touch-startup-image.png"> 
  <link rel="stylesheet" href="/styles/master,article,prism.css?rev=2.21" media="screen"> 
  <link rel="stylesheet" href="/styles/mobile.css?rev=2.21" media="only screen and (min-device-width : 320px) and (max-device-width : 480px)"> 
  <link rel="stylesheet" href="/styles/print.css?rev=2.21" media="print"> 
  <!--[if IE 8]><link rel="stylesheet" href="/styles/ie8.css?rev=2.21" media="screen"><![endif]--> 
  <!--[if IE 7]><link rel="stylesheet" href="/styles/ie7.css?rev=2.21" media="screen"><![endif]--> 
  <!--[if IE 6]><link rel="stylesheet" href="/styles/ie6.css?rev=2.21" media="screen"><![endif]--> 
  <!--[if lt IE 9]><script src="/javascripts/lib/html5shiv.min.js"></script><![endif]--> 
 </head>
 <body class="home" itemscope itemtype="http://schema.org/Blog"> 
  <hgroup id="logo"> 
   <h1><a href="/" itemprop="url name" rel="home">Firejune</a></h1> 
   <h2 itemprop="description">The Web is still changing.</h2> 
  </hgroup> 
  <p class="version" id="revision">Rev. <span itemprop="version">2.21</span></p> 
  <div id="content" role="main">
   <script>(function(b,c,d,a){b!=parent&&!c.referrer.match(/firejune\.com/)&&(parent.location.href=location);b.console={log:a,info:a,warn:a,error:a}})(window,document,navigator.userAgent,function(){})</script>
   <script src="/javascripts/libraries.min.js?rev=2.21" type="text/javascript"></script>
   <script src="/javascripts/application.min.js?rev=2.21" type="text/javascript"></script>
   <div id="s_t3" class="hfeed"> 
    <ul id="navigation" role="navigation"> 
     <li id="nav-home"><a href="/">Home</a></li> 
     <li id="nav-archives"><a href="/entries">Archives</a></li> 
     <li id="nav-labs"><a href="/labs">Labs</a></li> 
     <li id="nav-projects"><a href="/projects">Projects</a></li> 
     <li id="nav-author"><a href="#author">Author</a></li> 
     <li id="nav-rss"><a href="/rss" rel="nofollow"><abbr title="Really Simple Syndication">RSS</abbr></a></li> 
     <li id="search"> 
      <form method="get" action="/search/"> 
       <a class="reset" id="reset">x</a> 
       <input type="text" name="q" class="text switcheroo" value="Search…"> 
       <input type="submit" class="submit" value="Go"> 
      </form> </li> 
    </ul> 
    <article id="post-1793" class="tab-article hentry" itemprop="blogPost" itemscope itemtype="http://schema.org/BlogPosting"> 
     <header class="meta entry-meta"> 
      <h2> <time class="published updated" datetime="2014-12-22" itemprop="datePublished">22 <em>2014/12</em></time> <a href="/1793/%EC%9B%B9%EC%97%90%EC%84%9C+%EC%82%AC%EB%AC%B4%EC%9A%A9+%EB%AC%B8%EC%84%9C+%EB%8B%A4%EB%A3%A8%EA%B8%B0+-+WebODF" itemprop="name url" rel="bookmark" class="entry-title">웹에서 사무용 문서 다루기 - WebODF</a> </h2> 
      <p class="author vcard">by <a class="url fn" href="https://plus.google.com/102152273024163398799?rel=author" itemprop="author" rel="author">파이어준</a></p> 
      <ul class="tabs"> 
       <li class="goto-article"> <a href="/1793/%EC%9B%B9%EC%97%90%EC%84%9C+%EC%82%AC%EB%AC%B4%EC%9A%A9+%EB%AC%B8%EC%84%9C+%EB%8B%A4%EB%A3%A8%EA%B8%B0+-+WebODF#article-1793">Article</a> </li> 
       <li class="goto-comments"> <a href="/1793/%EC%9B%B9%EC%97%90%EC%84%9C+%EC%82%AC%EB%AC%B4%EC%9A%A9+%EB%AC%B8%EC%84%9C+%EB%8B%A4%EB%A3%A8%EA%B8%B0+-+WebODF#comments-1793" itemprop="interactionCount">Reactions<strong>1</strong></a> </li> 
       <li class="goto-pdf"> <a href="/1793.pdf">Export</a> </li> 
      </ul> 
     </header> 
     <section class="article entry-content" id="article-1793" itemprop="articleBody"> 
      <p> <a href="http://kogmbh.com/">KO GmbH</a>에 의해서 시작된 <a href="http://www.webodf.org/">WebODF</a>는 <a href="http://www.opendocumentformat.org/">OpenDocument Format</a>(ODF)를 웹사이트에서 사용할 수 있도록 CSS와 HTML을 이용하여 문서를 출력하거나 생성할 수 있게 하는 자바스크립트 라이브러리입니다. 실시간 협업 편집 서비스인 <a href="http://owncloud.org/">ownCloud</a>와 문서를 손쉽게 웹페이지에 추가할 수 있게 하는 <a href="http://viewerjs.org/">ViewerJS</a> 등에서 WebODF를 사용하고 있습니다.</p> 
      <p>ODF는 여러 업무용 애플리케이션에서 사용할 수 있도록 고안되었습니다. XML기반의 파일 포맷이고 스프레드시트, 차트, 프리젠테이션 그리고 워드 프로세싱 등의 사무용 문서를 저장할 수 있습니다. 이 파일 포맷은 Microsoft의 오피스에서 지원되며, <a href="http://en.wikipedia.org/wiki/Sun_Microsystems">선 마이크로스시템즈</a>의 <a href="http://blogs.office.com/">OpenOffice</a>에서 사용었고 지금은 순수 웹 브라우저만으로도 다룰 수 있게 된 것입니다.</p> 
      <p>이 라이브러리는 뷰어와 에디터로 구분하여 사용할 수 있는데, 단순히 ODF 파일을 보여주기만 할 것이라면 <a href="http://webodf.org/download/webodf.js-0.5.4.zip">webodf.js</a>를 로드하고 다음과 같이 코드를 작성하면 됩니다.</p>
      <pre class="html"><code class="html">&lt;html&gt;
 &lt;head&gt;
  &lt;script src="webodf.js" type="text/javascript" charset="utf-8"&gt;&lt;/script&gt;
  &lt;script type="text/javascript" charset="utf-8"&gt;
function init() {
  var odfelement = document.getElementById("odf"),
      odfcanvas = new odf.OdfCanvas(odfelement);
  odfcanvas.load("myfile.odt");
}
window.setTimeout(init, 0);
  &lt;/script&gt;
 &lt;/head&gt;
 &lt;body&gt;
  &lt;div id="odf"&gt;&lt;/div&gt;
 &lt;/body&gt;
&lt;/html&gt;</code></pre>
      <p>webodf.js는 여러 개의 자바스크립트가 하나로 합쳐져 만들어진 것입니다. 소스는 <a href="https://github.com/kogmbh/WebODF/">GitHub 리파지토리</a>에서 확인하거나 <a href="https://github.com/kogmbh/WebODF/archive/master.zip">다운로드</a> 할 수 있으며, <a href="http://webodf.org/tools/index.html#cmake">CMake</a>를 이용하여 빌드하는 방법은 다음과 같습니다.</p>
      <pre class="command"><code class="command">git clone https://github.com/kogmbh/WebODF.git webodf
mkdir build
cd build
cmake ../webodf
make webodf.js-target</code></pre>
      <p>에디터는 일반 편집과 협업 편집모드를 제공하며, <a href="http://webodf.org/download/wodotexteditor-0.5.4.zip">Wodo.TextEditor</a>라는 컴포넌트를 필요로 합니다. Wodo.TextEditor는 <a href="http://dojotoolkit.org/">Dojo</a>를 기반으로 작성되었으며, webodf.js를 포함하고 있습니다. 다음과 같은 코드로 페이지에 추가할 수 있습니다.</p>
      <pre class="html"><code class="html">&lt;head&gt;
&lt;!-- ... --&gt;

&lt;script src="wodotexteditor/wodotexteditor.js" type="text/javascript" charset="utf-8"&gt;&lt;/script&gt;

&lt;!-- ... --&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;!-- ... --&gt;

&lt;div id="editorContainer" style="width: 600px;height: 600px;"&gt;&lt;/div&gt;

&lt;!-- ... --&gt;

&lt;script type="text/javascript"&gt;
// ...

Wodo.createTextEditor('editorContainer', {
    allFeaturesEnabled: true,
    userData: {
        fullName: "Tim Lee",
        color:    "blue"
    }
}, function (err, editor) {
    if (err) {
        // something failed unexpectedly, deal with it (here just a simple alert)
        alert(err);
        return;
    }
    editor.openDocumentFromUrl("document.odt", function(err) {
        if (err) {
            // something failed unexpectedly, deal with it (here just a simple alert)
            alert("There was an error on opening the document: " + err);
        }
    });
});

// ...
&lt;/script&gt;

&lt;!-- ... --&gt;

&lt;/body&gt;</code></pre>
      <p><a href="http://www.nodejs.org/">Node.js</a>용 프로젝트인 <a href="http://etherpad.org/">Etherpad</a>에서 제공하는 것과 같은 협업모드 편집은 웹소켓을 이용한 것으로 서버 컴포넌트가 필요하지만 서버-사이드의 소스코드는 공개되어 있지 않습니다. 단, "programs/editor/backend/pullbox"에 클라이언트-사이드에서 데이터 송/수신을 위한 구현한 코드가 포함했으니 참고하라고 하네요. 이 과정은100% 클라이언트(브라우저)에서 발생하며, 데이터를 서버로 전송하지는 않는다고 합니다.</p> 
      <footer class="domore"> 
       <ul class="tags"> 
        <li><a href="/entries/8-42" rel="tag" itemprop="keywords">자료 - 웹개발</a></li> 
        <li><a href="/tag/WebODF" rel="tag" itemprop="keywords">WebODF</a></li> 
        <li><a href="/tag/ViewerJS" rel="tag" itemprop="keywords">ViewerJS</a></li> 
        <li><a href="/tag/ODF" rel="tag" itemprop="keywords">ODF</a></li> 
        <li><a href="/tag/KO+GmbH" rel="tag" itemprop="keywords">KO GmbH</a></li> 
        <li><a href="/tag/%EA%B7%B8%EB%9E%98%EB%8F%84+%EC%9D%BC%EB%85%84%EC%97%90+%ED%95%9C%EB%B2%88%EC%9D%80+%EC%8D%A8%EC%95%BC%EC%A7%80..." rel="tag" itemprop="keywords">그래도 일년에 한번은 써야지...</a></li> 
       </ul> 
       <h3>Read 140,473 times, Like what you read?</h3> 
       <ul> 
        <li class="tweetthis"> <a href="http://twitter.com/?status=%EC%9B%B9%EC%97%90%EC%84%9C+%EC%82%AC%EB%AC%B4%EC%9A%A9+%EB%AC%B8%EC%84%9C+%EB%8B%A4%EB%A3%A8%EA%B8%B0+-+WebODF+http://firejune.com/1793+via+@firejune">Tweet this article</a> </li> 
        <li>or</li> 
        <li class="goto-newcomment"> <a href="/1793/%EC%9B%B9%EC%97%90%EC%84%9C+%EC%82%AC%EB%AC%B4%EC%9A%A9+%EB%AC%B8%EC%84%9C+%EB%8B%A4%EB%A3%A8%EA%B8%B0+-+WebODF#newcomment-1793">Leave a comment</a> </li> 
       </ul> 
      </footer> 
     </section> 
     <section class="comments" id="comments-1793"> 
      <h3>Comments</h3> 
     </section> 
    </article> 
    <article id="post-1792" class="tab-article hentry" itemprop="blogPost" itemscope itemtype="http://schema.org/BlogPosting"> 
     <header class="meta entry-meta"> 
      <h2> <time class="published updated" datetime="2013-08-02" itemprop="datePublished">02 <em>2013/08</em></time> <a href="/1792/%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8+%EB%B0%94%EC%9D%B4%EB%84%88%EB%A6%AC+%EB%8D%B0%EC%9D%B4%ED%84%B0+%EC%8A%A4%ED%8A%B8%EB%9F%AD%EC%B3%90+-+struct.js" itemprop="name url" rel="bookmark" class="entry-title">자바스크립트 바이너리 데이터 스트럭쳐 - struct.js</a> </h2> 
      <p class="author vcard">by <a class="url fn" href="https://plus.google.com/102152273024163398799?rel=author" itemprop="author" rel="author">파이어준</a></p> 
      <ul class="tabs"> 
       <li class="goto-article"> <a href="/1792/%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8+%EB%B0%94%EC%9D%B4%EB%84%88%EB%A6%AC+%EB%8D%B0%EC%9D%B4%ED%84%B0+%EC%8A%A4%ED%8A%B8%EB%9F%AD%EC%B3%90+-+struct.js#article-1792">Article</a> </li> 
       <li class="goto-comments"> <a href="/1792/%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8+%EB%B0%94%EC%9D%B4%EB%84%88%EB%A6%AC+%EB%8D%B0%EC%9D%B4%ED%84%B0+%EC%8A%A4%ED%8A%B8%EB%9F%AD%EC%B3%90+-+struct.js#comments-1792" itemprop="interactionCount">Reactions<strong>8</strong></a> </li> 
       <li class="goto-pdf"> <a href="/1792.pdf">Export</a> </li> 
      </ul> 
     </header> 
     <section class="article entry-content" id="article-1792" itemprop="articleBody"> 
      <p> 일반적으로 C언어에서 struct에 의해 구조화된 바이너리 데이터를 자바스크립트에서 사용할 수 있게 변환하고 이를 다시 조작하여 바이너리로 생성하는 과정이 엘레강스(?)하지가 않아서 C의 struct와 유사하게 자바스크립트에서도 구조체를 사용할 수 있도록 작은 유틸리티를 만들었습니다. 만들고 보니, 다른 곳에서도 유용하게 사용될 수 있을 것 같아 공개합니다.</p> 
      <p>우선, 자바스크립트만으로 ArrayBuffer를 다루어 보겠습니다. 예제에 사용되는 바이너리 데이터는 0번째 번지에 Uint8 유형의 정수, 1번째 번지에 Int8 유형의 정수, 3번째 번지에는 Uint16 유형의 2바이트짜리 정수이며, 이를 쓰고 다시 읽어내는 것입니다:</p>
      <pre class="javascript"><code class="javascript">// define struct
var struct = {
  foo: 255,
  bar: 127,
  baz: {
    qux: 65535
  }
};

// write arraybuffer from javascript object
var ab = new ArrayBuffer(4);
var dv = new DataView(ab);
dv.setUint8(0, struct.foo);
dv.setInt8(1, struct.bar);
dv.setUint16(2, struct.baz.qux, true);

console.log(dv.buffer);
// =&gt; ArrayBuffer {byteLength: 4, slice: function}

// read data from arraybuffer
var dv2 = new DataView(dv.buffer);
var data = {
  foo: dv2.getUint8(0),
  bar: dv2.getInt8(1),
  baz: {
    qux: dv2.getUint16(2, true)
  }
};

console.log(data);
// =&gt; Obejct {foo: 255, bar: 127, baz: {qux: 65535}}}</code></pre>
      <p>옵셋을 손으로 패딩해야하며 형식이 동일한 구조의 데이터를 읽고 생성하려 했지만 도저히 같다고는 느껴지지 않습니다. 그리고 버퍼의 크기가 크면 클수록 사용성이 떨어지는 문제도 있습니다. struct.js를 사용하면 다음과 같이 코드를 작성할 수 있습니다:</p>
      <pre class="javascript"><code class="javascript">// define struct
var struct = new Struct({
  foo: ['uint8', 255],
  bar: ['int8', 127], 
  baz: {
    qux: ['uint16', 65535]
  }
}, 0, true);

// write arraybuffer from javascript object
var ab = struct.write();
console.log(ab);
// =&gt; ArrayBuffer {byteLength: 4, slice: function}

// read data from arraybuffer
var data = struct.read(ab);
console.log(data);
// =&gt; Obejct {foo: 255, bar: 127, baz: {qux: 65535}}</code></pre>
      <p>옵셋을 자동으로 카운트하고, 자바스크립트 형식으로 작성한 데이터 구조체를 재활용하여 새로운 arraybuffer를 생성하거나 반대로 자바스립트에서 읽을 수 있는 데이터로 만들어 사용하기가 수월합니다. 이는 마치 C에서 생성하는 구조체를 사용하는 느낌입니다.</p> 
      <p>속성(키)/[유형(타입), 값(밸류)]로 구조를 작성해야 하며 '속성/유형'만 지정하면 버퍼를 작성하는 경우 기본값이 할당됩니다. 즉, '밸류'는 <code>write</code> 메서드를 이용하여 ArrayBuffer를 생성하는 곳에만 사용되며, 단순히 <code>read</code> 메서드로 데이터를 읽기만 한다거나, 속성마다 특정한 값을 설정할 필요가 없는 경우라면 타입만 지정해도 된다는 의미입니다. 다음은 <code>read</code> 메서드의 두 번째 인자에 사용자 지정 옵셋을 입력하여 동일한 형식의 데이터가 복수로 담긴 청크를 처리하는 모습입니다.</p>
      <pre class="javascript"><code class="javascript">/**
 * read multiple data with custom offset
 */

var struct = new Struct({
  sig: 'uint8',
  mimeType: 'uint8',
  id: 'uint16',
  byteLength: 'uint32'
});

...

function parseBinary(chunk, count, callback) {
  var offset = 0;
  for (var index = 0; index &lt; count; index++) {
    var meta = struct.read(chunk, offset)
      , buffer = chunk.slice(
        offset += struct.byteLength,
        offset += meta.byteLength
      );

    callback(meta, new Uint8Array(buffer));
  }
}</code></pre>
      <p><code>write</code> 메서드에 변경할 내용이 담긴 객체를 인자로 전달하여 복수의 값을 갱신할 수 있도 있습니다. 입력 객체는 하위 구조의 값까지 모두 비교하여 값을 할당하기 때문에 다음과 같이 작성해도 무방합니다.(jquery의 $.extend와는 개념이 다름)</p>
      <pre class="javascript"><code class="javascript">// define struct
var struct = new Struct({
  foo: ['uint8', 255],
  bar: 'int8', 
  baz: {
    qux: ['uint16', 65535],
    quux: ['uint32', 0]
  }
}, 1, true);

// update values and write arraybuffer
var ab = struct.write({
  foo: 0,
  baz: {
    quux: 4294967295
  }
});
// write =&gt; ArrayBuffer {byteLength: 8, slice: function}
// read =&gt; Obejct {foo: 0, bar: 1, baz: {qux: 65535, quux: 4294967295}}</code></pre>
      <p>끝으로, 하나의 속성에 멀티-바이트 타입 배열을 지정할 수 있도록 했습니다. 각각의 번지마다 연속된 값(문자열 또는 배열)을 지정할 수 있으며, 속성에 지정되는 배열의 마지막에 버퍼의 크기를 지정하거나 생략한 경우 그 크기를 자동으로 계산하합니다. 그리고 문자열 형식으로 선언된 속성은 버퍼에서 값을 읽어 올 때 정수들을 모두 문자열로 자동 변환하여 반환합니다.</p>
      <pre class="javascript"><code class="javascript">/**
 * create struct with multi-byte value
 */

var struct = new Struct({
  foo: ['uint16', [0xffff, 4095]],
  bar: ['uint8', 'firejune', 8]
});

var ab = struct.write();
// =&gt; ArrayBuffer {byteLength: 12, slice: function}

var obj = struct.read(ab);
// =&gt; Object {bar: [65535, 4095], qux: "firejune"}</code></pre>
      <p>처음 구성한 구조의 크기(유형)는 변경될 수 없으며, 값만 갱신할 수 있는 규칙을 가집니다. 이 작은 유틸리티의 이름은 거창하게도 <a href="https://github.com/firejune/struct.js/blob/master/struct.js">struct.js</a>이며, MIT 라이센스를 따릅니다. 대략적인 사용법과 소스코드를 <a href="https://github.com/firejune/struct.js">GitHub에 올려</a> 두었으니 필요하신 분은 맘껏 사용하세요.</p> 
      <footer class="domore"> 
       <ul class="tags"> 
        <li><a href="/entries/8-42" rel="tag" itemprop="keywords">자료 - 웹개발</a></li> 
        <li><a href="/tag/Struct" rel="tag" itemprop="keywords">Struct</a></li> 
        <li><a href="/tag/%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8" rel="tag" itemprop="keywords">자바스크립트</a></li> 
        <li><a href="/tag/C%252FC%2B%2B" rel="tag" itemprop="keywords">C/C++</a></li> 
        <li><a href="/tag/GitHub" rel="tag" itemprop="keywords">GitHub</a></li> 
        <li><a href="/tag/ArrayBuffer" rel="tag" itemprop="keywords">ArrayBuffer</a></li> 
        <li><a href="/tag/DataView" rel="tag" itemprop="keywords">DataView</a></li> 
        <li><a href="/tag/HTML5" rel="tag" itemprop="keywords">HTML5</a></li> 
        <li><a href="/tag/%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8" rel="tag" itemprop="keywords">프로젝트</a></li> 
        <li><a href="/tag/struct.js" rel="tag" itemprop="keywords">struct.js</a></li> 
        <li><a href="/tag/%EB%B0%B0%ED%8F%AC" rel="tag" itemprop="keywords">배포</a></li> 
       </ul> 
       <h3>Read 1,096,923 times, Like what you read?</h3> 
       <ul> 
        <li class="tweetthis"> <a href="http://twitter.com/?status=%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8+%EB%B0%94%EC%9D%B4%EB%84%88%EB%A6%AC+%EB%8D%B0%EC%9D%B4%ED%84%B0+%EC%8A%A4%ED%8A%B8%EB%9F%AD%EC%B3%90+-+struct.js+http://firejune.com/1792+via+@firejune">Tweet this article</a> </li> 
        <li>or</li> 
        <li class="goto-newcomment"> <a href="/1792/%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8+%EB%B0%94%EC%9D%B4%EB%84%88%EB%A6%AC+%EB%8D%B0%EC%9D%B4%ED%84%B0+%EC%8A%A4%ED%8A%B8%EB%9F%AD%EC%B3%90+-+struct.js#newcomment-1792">Leave a comment</a> </li> 
       </ul> 
      </footer> 
     </section> 
     <section class="comments" id="comments-1792"> 
      <h3>Comments</h3> 
     </section> 
    </article> 
    <article id="post-1791" class="tab-article hentry" itemprop="blogPost" itemscope itemtype="http://schema.org/BlogPosting"> 
     <header class="meta entry-meta"> 
      <h2> <time class="published updated" datetime="2013-08-01" itemprop="datePublished">01 <em>2013/08</em></time> <a href="/1791/Signed%EC%99%80+Unsigned+%EC%B0%A8%EC%9D%B4" itemprop="name url" rel="bookmark" class="entry-title">Signed와 Unsigned 차이</a> </h2> 
      <p class="author vcard">by <a class="url fn" href="https://plus.google.com/102152273024163398799?rel=author" itemprop="author" rel="author">파이어준</a></p> 
      <ul class="tabs"> 
       <li class="goto-article"> <a href="/1791/Signed%EC%99%80+Unsigned+%EC%B0%A8%EC%9D%B4#article-1791">Article</a> </li> 
       <li class="goto-comments"> <a href="/1791/Signed%EC%99%80+Unsigned+%EC%B0%A8%EC%9D%B4#comments-1791" itemprop="interactionCount">Reactions<strong>3</strong></a> </li> 
       <li class="goto-pdf"> <a href="/1791.pdf">Export</a> </li> 
      </ul> 
     </header> 
     <section class="article entry-content" id="article-1791" itemprop="articleBody"> 
      <p> 자바스크립트에서 버퍼를 읽거나 쓰는 예문들을 볼때 C에서 사용되는 'signed'와 'unsigned'라는 키워드에 비유하는 내용을 자주 접하게 됩니다. 이게 무엇이고 왜 구분을 해야 하는 것인지를 몰라서 우리 팀장님께 커피 한 잔 사드리고 특강을 받았습니다. 제가 이해하기 쉽게 '음수를 표현하느냐 안 하느냐의 차이'라고 알려 주셨고, 메모리에 비트를 기록하는 방식이 다르다고 했습니다. "더 자세히 설명해 주세요~"했더니 CPU가 어쩌니 어셈블리가 저쩌니 한 귀로 듣고 흘려 버릴수 밖에 없는 내용이어서... 나중을 대비해 나름 이해한 내용을 정리합니다.</p> 
      <p>예를 들어 C언어에서는 다음과 같이 8비트 정수 타입을 선언할 수 있습니다.</p>
      <pre class="javascript"><code class="javascript">signed char
unsigned char</code></pre>
      <p>unsigned char는 비트를 투명하게 볼 수 있는 특성이 있으며, 임의의 메모리에 바이트 단위로 접근해서 값을 다룰 수 있습디다. 이 경우에는 unsigned char를 사용하는 것이 강제됩니다. 그리고 signed char는 unsigned char와 값이 같아도 같지 않은 경우가 발생할 수도 있습니다. 왜냐하면 signed는 음수 표현을 위해 2의 보수 체계를 사용하고 부호 비트(MSB)가 필요하기 때문입니다.(0 이면 양수 1 이면 음수) 그래서 부호 비트가 없는 unsigned는 양수 범위를 두 배로 늘리는 역활을 한답디다. 즉, char 형식은 8비트이므로 signed char은 -128~127의 범위를 표현할 수 있고 unsigned chare은 0~255의 표현범위를 가지는 것입니다.</p> 
      <p>조금더 이해하기 쉽게 그림으로 예를 들어봅시다. 정수 3인 1바이트(8비트)를 2진수로 기록하면 <span style="color:#d10">0</span><span style="color:#d10">0</span><span style="color:#f00">0</span><span style="color:#f00">0</span><span style="color:#f73">0</span><span style="color:#f73">0</span><span style="color:#f90">1</span><span style="color:#f90">1</span>이 됩니다. Unsigned에서는 다음과 같이 부호가 할당되겠죠.</p> 
      <table class="grid border" style="font-size: 13px;"> 
       <tbody>
        <tr> 
         <td><span style="color:#d10">0</span></td> 
         <td><span style="color:#d10">0</span></td> 
         <td><span style="color:#f00">0</span></td> 
         <td><span style="color:#f00">0</span></td> 
         <td><span style="color:#f73">0</span></td> 
         <td><span style="color:#f73">0</span></td> 
         <td><span style="color:#f90">1</span></td> 
         <td><span style="color:#f90">1</span></td> 
        </tr> 
       </tbody>
      </table> 
      <p>Signed는 음수를 표현하기 위해 제일 앞 하나의 비트를 소비한다고 했습니다. 그럼 정수 3은 이렇게 되겠군요.<br> </p>
      <table class="grid border" style="font-size: 13px;"> 
       <tbody>
        <tr> 
         <td style="background: #aaa">0</td> 
         <td><span style="color:#d10">0</span></td> 
         <td><span style="color:#f00">0</span></td> 
         <td><span style="color:#f00">0</span></td> 
         <td><span style="color:#f73">0</span></td> 
         <td><span style="color:#f73">0</span></td> 
         <td><span style="color:#f90">1</span></td> 
         <td><span style="color:#f90">1</span></td> 
        </tr> 
       </tbody>
      </table>
      <p></p> 
      <p><a href="http://www.binaryconvert.com/index.html">온라인 이진수-정수 변환기</a>를 사용해 보면 금방 이해할 수 있습니다.</p> 
      <p><del>(나도 언젠가는 CPU의 마음과 메모리의 정신을 이해할 수 있겠...)</del><style>
  .grid {
    width: 100%; border-top: 1px solid #aaa; border-bottom: 1px solid #aaa; background: #fff;
  }
  .grid td, .grid th { padding: 5px; border-top: 1px solid #ccc; border-bottom: 1px solid #ccc; text-align: center; }
  .grid th { background: #FAFAFA; padding: 3px 5px; }
  .grid th small { font-weight: normal; }
  .grid.border td,  .grid.border th { border-left: 1px solid #ccc; border-right: 1px solid #ccc; }
  .grid .tags { background: #FAFAFA; }
</style></p> 
      <footer class="domore"> 
       <ul class="tags"> 
        <li><a href="/entries/8-42" rel="tag" itemprop="keywords">자료 - 웹개발</a></li> 
        <li><a href="/tag/%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8" rel="tag" itemprop="keywords">자바스크립트</a></li> 
        <li><a href="/tag/Unsigned" rel="tag" itemprop="keywords">Unsigned</a></li> 
        <li><a href="/tag/Signed" rel="tag" itemprop="keywords">Signed</a></li> 
        <li><a href="/tag/%EC%B0%A8%EC%9D%B4%EC%A0%90" rel="tag" itemprop="keywords">차이점</a></li> 
        <li><a href="/tag/C" rel="tag" itemprop="keywords">C</a></li> 
        <li><a href="/tag/Uint8" rel="tag" itemprop="keywords">Uint8</a></li> 
        <li><a href="/tag/Int8" rel="tag" itemprop="keywords">Int8</a></li> 
        <li><a href="/tag/ArrayBuffer" rel="tag" itemprop="keywords">ArrayBuffer</a></li> 
        <li><a href="/tag/HTML5" rel="tag" itemprop="keywords">HTML5</a></li> 
       </ul> 
       <h3>Read 1,115,239 times, Like what you read?</h3> 
       <ul> 
        <li class="tweetthis"> <a href="http://twitter.com/?status=Signed%EC%99%80+Unsigned+%EC%B0%A8%EC%9D%B4+http://firejune.com/1791+via+@firejune">Tweet this article</a> </li> 
        <li>or</li> 
        <li class="goto-newcomment"> <a href="/1791/Signed%EC%99%80+Unsigned+%EC%B0%A8%EC%9D%B4#newcomment-1791">Leave a comment</a> </li> 
       </ul> 
      </footer> 
     </section> 
     <section class="comments" id="comments-1791"> 
      <h3>Comments</h3> 
     </section> 
    </article> 
    <nav id="pagination"> 
     <h3>Pagination</h3> 
     <p><a href="#" title="다음 페이지로 이동합니다. 단축키(s)" class="blackout">Newer : 마지막 페이지입니다.</a></p> 
     <p><a href="/page/2" title="이전 페이지로 이동합니다. 단축키(a)" class="blackout">Older : 빅엔디안과 리틀엔디안 개념</a></p> 
    </nav> 
    <aside id="calendar"> 
     <div id="year"> 
      <h3>Year</h3> 
      <ul> 
       <li><a href="/archive/2005">2005</a></li>
       <li><a href="/archive/2006">2006</a></li>
       <li><a href="/archive/2007">2007</a></li>
       <li><a href="/archive/2008">2008</a></li>
       <li><a href="/archive/2009">2009</a></li>
       <li><a href="/archive/2010">2010</a></li>
       <li><a href="/archive/2011">2011</a></li>
       <li><a href="/archive/2012">2012</a></li>
       <li><a href="/archive/2013">2013</a></li>
       <li class="current"><a href="/archive/2014">2014</a></li>
       <li>2015</li>
       <li>2016</li>
       <li>2017</li>
       <li>2018</li>
       <li>2019</li>
       <li>2020</li>
       <li>2021</li>
       <li>2022</li>
       <li>2023</li>
       <li>2024</li>
       <li>2025</li>
       <li>2026</li>
       <li>2027</li>
       <li>2028</li> 
      </ul> 
     </div> 
     <div id="month"> 
      <h3>Month</h3> 
      <a href="/archive/2014-12">12</a> 
     </div> 
     <div id="day"> 
      <h3>Day</h3> 
      <ul> 
       <li class="wed">31</li>
       <li class="tue">30</li>
       <li class="mon">29</li>
       <li class="sun">28</li>
       <li class="sat">27</li>
       <li class="fri">26</li>
       <li class="thu">25</li>
       <li class="wed">24</li>
       <li class="tue">23</li>
       <li class="mon current"><a href="/archive/2014-12-22">22</a></li>
       <li class="sun">21</li>
       <li class="sat">20</li>
       <li class="fri">19</li>
       <li class="thu">18</li>
       <li class="wed">17</li>
       <li class="tue">16</li>
       <li class="mon">15</li>
       <li class="sun">14</li>
       <li class="sat">13</li>
       <li class="fri">12</li>
       <li class="thu">11</li>
       <li class="wed">10</li>
       <li class="tue">09</li>
       <li class="mon">08</li>
       <li class="sun">07</li>
       <li class="sat">06</li>
       <li class="fri">05</li>
       <li class="thu">04</li>
       <li class="wed">03</li>
       <li class="tue">02</li>
       <li class="mon">01</li> 
      </ul> 
     </div> 
    </aside> 
   </div> 
   <aside itemscope itemtype="http://www.data-vocabulary.org/Person/" class="about vcard" id="author" itemprop="author"> 
    <h2>About the author</h2> 
    <img itemprop="photo" class="photo" src="/attach/image/272778.jpeg" alt="Firejune"> 
    <p> <strong itemprop="name" class="fn">Joon Kyoung</strong>(a.k.a <span class="nickname" itemprop="nickname">Firejune</span>) is a <span itemprop="role" class="role">web front-end development</span> journeyman, and passionate about <strong>JavaScript</strong>. Sometimes he is a buster in interface design. Making a better web place is his ongoing mission and he is currently working with the best engineers of the industry at <span itemprop="affiliation" class="org">Spark &amp; Associates Corp</span>. He loves coffee, cola and kimchi(what a fantastic combination?!). You can find him on Twitter <a href="http://twitter.com/firejune" itemprop="url" rel="me">@firejune</a> or <a href="http://firejune.com" class="url" itemprop="url" rel="me">Blog</a>. </p> 
    <p class="more"><a href="/author" itemprop="url" rel="me">More information</a></p> 
   </aside> 
   <ul id="footer"> 
    <li>Designed by <a href="mailto:to(at)firejune.com" rel="me">firejune</a>.</li> 
    <li>Grab my <a href="http://firejune.com/rss" rel="me">RSS feed</a></li> 
    <li>and follow me on <a href="http://twitter.com/firejune" rel="me">Twitter</a>,</li> 
    <li><a href="http://www.facebook.com/firejune" rel="me">Faceboock</a></li> 
    <li>or <a href="https://plus.google.com/102152273024163398799" rel="me">Goole+</a>.</li> 
    <li style="display: none;">The Life Hub <a href="https://mobizen.com">Mobizen</a>.</li> 
    <li>Built on <a href="http://prototypejs.org/" class="prototype bold">Prototype</a> and</li> 
    <li><a href="http://script.aculo.us/" class="scriptaculous bold">Script.aculo.us</a> JavaScript libraries.</li> 
    <li>This website is valid <a href="http://validator.w3.org/check?uri=referer" class="bold" title="">HTML 5</a>,</li> 
    <li><a href="http://jigsaw.w3.org/css-validator/validator?uri=www.firejune.com/styles/master,article.css" class="bold" title="http://jigsaw.w3.org/css-validator/images/vcss">CSS 3</a></li> 
    <li>and <a href="http://validator.w3.org/feed/check.cgi?url=http%3A%2F%2Ffirejune.com%2Frss.xml" class="bold" title="http://validator.w3.org/feed/images/valid-rss.png">RSS 2.0</a></li> 
    <li>follow <a href="http://www.w3.org/" class="bold">W3C</a> standards.</li> 
    <li> Copyleft © 2004 - 2013 <a href="http://firejune.com" rel="me">FIREJUNE.COM</a> <a href="http://creativecommons.org/licenses/by-nc-sa/2.0/kr/" title="http://creativecommons.org/images/public/somerights20.png" rel="license">All Wrongs Reserved.</a> </li> 
   </ul> 
   <div id="unnecessary"></div> 
  </div> 
  <script>
    (function() {
            
      var pkBaseURL = 'http://analytics.firejune.com/';
      new Include(pkBaseURL + 'piwik.js', {cacheable: false}, function() {
        var piwikTracker = Piwik.getTracker(pkBaseURL + "piwik.php", 1);
        piwikTracker.trackPageView();
        piwikTracker.enableLinkTracking();
      });

      new Include('http://countly.firejune.io/javascripts/api.js?ver=1', {cacheable: false}, function() {
        countly('2.21');
      });

    })();
  </script>
  <noscript>
   <p><img src="http://analytics.firejune.com/piwik.php?idsite=1" style="border:0" alt=""></p>
  </noscript>
  <script>Firejune.onload(2.21);</script> 
  <!--
	  __ _           _
	 / _(_)_ __ ___ (_)_   _ _ __   ___
	| |_| | '__/ _ \| | | | | '_ \ / _ \
	|  _| | | |  __/| | |_| | | | |  __/
	|_| |_|_|  \___|/ |\__,_|_| |_|\___|
	              |__/

	Session Init  : 0.014967918396
	Skin Setup    : 0.00086784362793
	Total Excuted : 0.242300033569
-->
 </body>
</html>