<!DOCTYPE html>
<html>
 <!--  Setting necessary tmParam values for TagMan container -->
 <!--  These parameters are meant for the Commission Junction and Zanox tags -->
 <!--  TagMan container code - Start -->
 <head>
  <script>
(function (w) {
	w.tm2BootPosition = 0;
	w.tm2BootAsync = true;
	w.tmPageId = 1;
		
	w.tmParam = {
		track_confirmation_number : '',
		track_room_price : '',
		track_sob_code : '',
		track_corporate_id : '',
		track_check_out_date : '2015-03-03',

		track_city : 'Carpinteria',
		track_check_in_date : '2015-03-02',
		track_state : 'CA',
		track_oneday_amount : '',
		track_reservation_amount : '',
		tm_reservation_amount_in_usd : '',
		track_number_of_rooms : '1',

		track_hotel_name : 'BEST WESTERN PLUS Carpinteria Inn',
		track_fx_rate : 'no',
		track_rate_plan : '',
		track_partner_id : '',
		levrev : '',
		
		track_promocode : '',
		track_reservation_currency : '',
		track_guest_email_id : '',
		track_tax_amount : '',
		levordref : '',
		
		track_hotel_code : '05425',
		track_number_of_nights : '1',
		track_room_type : '',
		track_country : 'United States',
		track_iata_number : '',
		track_pageType : 'SelectRoom',
		
		track_rates_from_rate_plan : '',
		track_best_western_rewards_number : '',
		track_reward_club_tier : '',
		track_adults : '1',
	    track_children : '0',
	    track_occupancy : '1'};
	    
	
	var conf = { host: 'tagman.bestwestern.com',
		account: 'bestwestern',
		version: '3',
		async: true,
		cdn: (location.protocol === 'https:') ? 'sec.levexis.com' : 'res.levexis.com',
		waitService: 'wt.tagman.com',
		waitTest: false,
		bootstrap: true,
		param: w.tmParam || {} };
	// do not change values below this line
	function ap(sr , ol) {
	     var e = document.createElement('script'); 
	     e.src = sr;
	     e.async = true;
	     if (ol) {
	    	e.onload = e.onerror = function() { if (!this.loaded) { ol(); this.loaded = true; } };
		e.onreadystatechange = function() { if (this.readyState === 'complete' || this.readyState === 'loaded') { this.onload(); } };
	     }
	     var s = document.getElementsByTagName('script')[0];
	     s.parentNode.insertBefore( e , s);
	}	
	w.TMAN = w.TMAN || {};	
     	w.TMAN.startTime = +new Date();
	w.TMAN.asyncLoader = function() {
	      TMAN.addContainer( new TMAN.Container(conf.account, w.tmPageId, conf) );
	};
	var tm = '//' + conf.cdn + '/clientfiles/v' + conf.version + '/' + conf.account + '.js'; 
	if (conf.waitService && conf.waitTest) ap ( '//' + conf.waitService + '/wait/0/' + Math.random() , function() { TMAN.waitLatency=new Date() - TMAN.startTime; } );
	if (conf.async) {
	     w.TMAN.position = {};
	     w.TMAN.doTags = function(p) { TMAN.currentPosition = p; };
	     w.TMAN.addParam = function(n,v) {
		w.tmParam[n]=v;
	     };
	     ap(tm);	
	} else {
	     document.write('<script src="' + tm + '"><\/script>');
	}
})(window);
</script> 
  <!--  TagMan container code - End --> 
  <script> TMAN.doTags(TMAN.position.PRE_HEAD); </script>  
  <script> TMAN.doTags(TMAN.position.TOP_HEAD); </script> 
  <title>
					Bestwestern.com, the World's Biggest Hotel FamilyÂ®
				</title> 
  <meta http-equiv="pragma" content="no-cache"> 
  <link rel="StyleSheet" href=" /bestwestern/css/style.css?v=01262015115721" type="text/css"> 
  <link rel="shortcut icon" href="/bestwestern/images/favicon.ico"> 
  <script type="text/javascript" src="/bestwestern/javascript/global.js?v=01262015115721"> </script> 
  <script type="text/javascript" src="/bestwestern/javascript/dateutil.js?v=01262015115721"> </script> 
  <script language="JavaScript" src="/bestwestern/javascript/globalfunc.js?v=01262015115721" type="text/javascript"></script> 
  <script src="https://www.google.com/recaptcha/api.js?onload=onloadCallback&amp;render=explicit"></script> 
  <link rel="canonical" href="/bestwestern/selectRoom.do"> 
  <script> TMAN.doTags(TMAN.position.BOTTOM_HEAD); </script> 
 </head> 
 <body onresize="" onkeypress="pressEscapeKey();">
  <div id="interstitialLayer" class="modalpopup" style="background-color:#FFFFFF; vertical-align:top;display:none;" align="center"> 
   <div class="hd" id="hd" style="text-align:left;display:none;" align="left"> 
   </div> 
   <div class="bd" id="bd" style="vertical-align:center;display:none;" align="center">
     Please do not close this window; your payment is being processed. 
   </div> 
  </div> 
  <!-- Start: $Workfile$ --> 
  <!-- AR0907: SJ: calling positionLayer() onresize  of page to display Behavioral PopUp at page center. -->  
  <!-- AR1001:Phase II - TagMan code - Top body - Start --> 
  <script> 
		TMAN.doTags(TMAN.position.TOP_BODY); 
	</script> 
  <!-- AR1001:Phase II - TagMan code - Top body - End --> 
  <script type="text/javascript">

function pressEscapeKey()
{
	if (window.event.keyCode == 27)
		doubleClick = false;
}

function secureUrl()
{
	window.name="parentWindow";
}

function reviewReservePopup(urlname, target)
{	
    window.open(urlname,target,"toolbar=no,location=no,status=yes,menubar=no,scrollbars=yes,resizable=yes,width=800,height=600");
}

function returnFromPopup(path)
{
    window.opener.location.href=path;
    window.close();
}
/*AR0872: DS: This  function display Interstitial Layer on Add room page for supressSSLPopup functionality 
if settlement flag true.*/
 
function callParent()
{
   	YAHOO.com.thecodecentral.dialog1.render();
	YAHOO.com.thecodecentral.dialog1.show();
   	var compareRemove = document.getElementById('interstitialLayer');	
   	compareRemove.style.display='block';
   	document.getElementById('hd').style.display='block';
	document.getElementById('bd').style.display='block';
   
}

</script> 
  <!-- End: $Workfile$ --> 
  <div id="container" style="display:block"> 
   <!-- Start: $Workfile$ --> 
   <script type="text/javascript">
var selectRoomSubmitUrl; 
var nonModalOpenFlag=false;
var modalOpenFlag=false;

	
		

</script> 
   <!-- 
jsession id for the tracking purposes:
jsessionid=+AKzBAxYqYymWsSsHXIdtg__.h422c 
--> 
   <!-- header start --> 
   <script>
	var headerDivider="headerDividerPlus";
	var secureLoginURL="https://book.bestwestern.com:443/bestwestern/jsp/secureLogin.jsp?pageType=SelectRoom";
	var arrSSLPages = ',' + 'reservationSummaryDisplay.do,createAccountAction.do,editBillingInfoAction.do,editAccountAction.do,myProfilessl.do,reservationRetrievessl.do,reservationRetrieveActionssl.do,reservationSummary.do,addBillingAction.do,myAccount.do,editPI.do,editMyAccountPreferences.do,myFavoriteAction.do,profileThanks.do,myRewardsActivityAction.do,createProfile.do,updateMyAccountPreferences.do,doEdit.do,reservationView.do,reservationEmailAction.do,attachBwrNumberAction.do,reservationCancelAction.do,myProfile.do,reservationChange.do' + ',';
	/***
	***This methods validate SSL actions
	**/
	function validateSSLAction()
	{
		var currURL = window.location.href;
		var blnReload = false;
		var arrURL = currURL.split('/');
		var currProtocol = arrURL[0];
		var currAction = ',' + arrURL[4].split('.')[0] + ".do,";
		
		if(arrSSLPages.indexOf(currAction)== -1){
			blnReload = (currProtocol!="http:");
			arrURL[0] = "http:";
		}else{
			blnReload = (currProtocol!="https:");
			arrURL[0] = "https:";
		}
		
		if(blnReload){
			currURL = arrURL.join('/');
			if(currAction != ",selectHotel.do,"){
				window.location.href = currURL;
			} else{
				document.forms["selectHotelForm"].action=currURL;
				document.forms["selectHotelForm"].submit();
			}
		}
	}
</script> 
   <input name="behIATA" type="hidden" value="00168630" id="behIATA"> 
   <input name="displayBehPopUp" type="hidden" value="true" id="displayBehPopUp"> 
   <!--AR0850 Added to change the URL --> 
   <script language="JavaScript" type="text/javascript">
			var emailEmpty = 'Please enter a value for the Email or Member# field.';
			var msgValidationDigit = 'Invalid  Best Western Rewards membership number.  Membership numbers must be 16 digits.';
			var msgValidationEmail = 'Email address format is incorrect, please re-enter and try again.';
			var passwordEmpty = 'Please enter a password.';
			var msgPasswordLength = 'Password is not 8-15 characters in length, please change and re-submit.';
		</script> 
   <div id="preheader"> 
   </div> 
   <div id="headerPlus"> 
    <a href="http://www.bestwestern.com/index.asp?nonav=1&amp;suppressSSLPopup=true&amp;language=en_US&amp;gp=false&amp;tp=false&amp;cp=false"><h1 class="ir">Best Western</h1></a> 
    <div id="headerBar"> 
     <ul class="nav"> 
      <li><a href="#headerSignIn" class="headerExpandLink mainNavExpandLink" rel=".mainNavExpandLink">My Account<span> - Sign In</span></a></li> 
      <div id="headerSignIn" style="width:350px"> 
       <script language="JavaScript" type="text/javascript">
	var txtMyAccount = 'My Account';
	var txtSignIn = '<span> - Sign In</span>';
	
		var propertyList = new Array();
		var loginData =false;
		var blnLoginSuccess =false;	
		var addAnEmail = false;
		var fatal = false;
		var failure = false;	
	
</script> 
       <div style="display: none;"> 
        <input type="hidden" id="loginSSLURl" value="javascript:updateAndClose('http://book.bestwestern.com/bestwestern/loginAjax.do')"> 
        <input type="hidden" name="url"> 
       </div> 
       <form method="post" name="nonSecureLoginForm" id="nonSecureLoginForm" action="https://book.bestwestern.com:443/bestwestern/memberLogin.do" target="SSLPopup"> 
        <input type="hidden" name="redirectURL" id="redirectURL"> 
        <input type="hidden" name="isModal" value="false"> 
        <input type="hidden" name="url"> 
        <div class="inner clearfix"> 
         <div class="leftCol"> 
          <div class="formField"> 
           <label for="memberUser" id="userName" class="headerInlineLabel" style="display:none;">Email or Member # </label> 
           <input id="memberUser" type="text" onkeypress="if (SubmitEnter(this,event)){document.getElementById('expSignIn').click();return false;}" name="userName" maxlength="80"> 
           <span id="userNameSPN" class="errorLogin" style="display:none;"></span> 
          </div> 
          <div class="formField"> 
           <label for="memberPass" id="passwordlbl" class="headerInlineLabel" style="display:none;">Password</label> 
           <input id="memberPass" type="password" autocomplete="off" onkeypress="if (SubmitEnter(this,event)){document.getElementById('expSignIn').click();return false;}" maxlength="20" size="12" name="password"> 
           <span id="passwordSPN" class="errorLogin" style="display:none;"></span> 
          </div> 
          <div id="loginRecaptcha" class="captcha"></div> 
          <a id="expSignIn" class="headersigninbutton" name="signinsm12">Sign In</a> 
         </div> 
         <div class="rightCol"> 
          <div class="hyperlinks"> 
           <a href="#" id="forgotPassword">Password Help</a>
           <br> 
           <a href="https://book.bestwestern.com:443/bestwestern/createAccount.do" target="SSLPopup">Create Account</a> 
          </div> 
         </div> 
         <div id="loginAjaxImg" class="rightCol loadingSpinner"> 
          <img src="/bestwestern/images/ajaxSpinner.gif" alt="Please Wait........."> 
         </div> 
        </div> 
       </form> 
       <script language="JavaScript" type="text/javascript">


	var redirectURL = document.getElementById("redirectURL"); 
	redirectURL.value=location.href;	
	
</script> 
      </div> 
     </ul> 
     <a class="signOutLink" id="headerSignOut" href="/bestwestern/logout.do;jsessionid=+AKzBAxYqYymWsSsHXIdtg__.h422c?logout=logout" style="display:none">Sign Out</a> 
     <!-- Start: $Workfile$ --> 
     <script language="JavaScript" type="text/javascript">

var emptyMsg = 'Please enter Email Address or Rewards number.';
var msgValidationDigit = 'Invalid  Best Western Rewards membership number.  Membership numbers must be 16 digits.';
var msgValidationEmail = 'Email address format is incorrect, please re-enter and try again.';

</script> 
     <div id="forgottenPassword" style="display:none"> 
      <div id="main"> 
       <div class="formRow clearfix"> 
        <span></span> 
        <div id="leftColAcct"> 
         <form name="passwordHelp"> 
          <h2>&nbsp;&nbsp;&nbsp;<strong>PASSWORD HELP</strong></h2>
          <br> 
          <div id="infoMessage"></div> 
          <div> 
           <div class="inner"> 
            <p>If you have forgotten your password please enter your email address or Rewards number below and submit. </p> 
            <p>Your password will be emailed to the email address on file. </p> 
            <br> 
            <div class="formField checkBoxField"> 
             <p> <label class="error">*</label> indicates required field</p>
             <br> 
             <label for="emailPrimary" id="emailLabelLBL"><strong class="error">* </strong><strong>Email Address</strong>&nbsp;or <strong>Rewards Number</strong>: </label> 
             <a href="#" class="button" id="passwordSubmit" style="float:right;">SUBMIT</a> 
             <input class="bwFieldDefaultValue" id="emailPrimary" name="emailLabel" type="text" size="30" maxlength="80" onkeypress="if (SubmitEnter(this,event)){document.getElementById('passwordSubmit').click();return false;}"> 
            </div> 
            <div class="formField"> 
             <span id="emailLabelSPN" class="error" style="display:none;float:right;"></span> 
            </div> 
            <br>
            <p> If you have a membership number but do not have a password and /or wish to add an email address to your profile, please contact Best Western RewardsÂ® Customer Service by <a href="http://www.bestwestern.com/rewards/customer-service/call-us.asp?m=1&amp;nonav=1&amp;suppressSSLPopup=true&amp;language=en_US" class="loadDialog">phone</a>. </p>
           </div> 
          </div> 
         </form> 
        </div> 
       </div> 
      </div> 
     </div> 
     <!--End workfile profileLogin.jsp--> 
     <div id="headerSignInModal" style="display:none; margin-left:10px"> 
      <div class="inner clearfix"> 
       <h6>Sign In</h6> 
       <div id="secureLoginModalFrame" style="height:400px; width:345px; float:left"></div> 
       <div class="rightCol" style="float:right;"> 
        <div class="hyperlinks"> 
         <a id="forgotPasswordModal">Password Help</a>
         <br> 
         <a href="https://book.bestwestern.com:443/bestwestern/createAccount.do" target="SSLPopup">Create Account</a> 
        </div> 
       </div> 
      </div> 
     </div> 
    </div> 
    <!-- TOP NAVIGATION START --> 
    <!-- TOP NAVIGATION END --> 
    <!--AR0850 Ankit:Start: Information Below Blue Bar  --> 
    <div id="headerDividerPlus"> 
    </div> 
    <!--AR0850 Ankit:End: Information Below Blue Bar  --> 
   </div> 
   <!-- header End --> 
   <div id="main" class="clearfix"> 
    <!--AR1103:12202013:kumarm:start here --> 
    <!--AR1103:12202013:kumarm:end here --> 
    <div id="mainTopBar"> 
     <div style="float:left"> 
      <div id="errorMsg" class="ajaxError" style="display:none;"></div> 
     </div> 
    </div> 
    <div id="roomSelect" class="clearfix"> 
     <div class="leftCol"> 
      <div class="sectionTop"></div> 
      <div class="section"> 
       <form name="selectHotelForm" method="post" action="/bestwestern/selectRoom.do;jsessionid=+AKzBAxYqYymWsSsHXIdtg__.h422c"> 
        <input type="hidden" name="readOnlySearchFlag" value="true"> 
        <!-- Start $Workfile$ --> 
        <script language="javascript" type="text/javascript">

   var doubleClick = false;
   var dontChangeWindow = false;  // for R&R page

   /**
    ****************************************************************************
    * AR0850[AK] the main validation method START
    ****************************************************************************
    */
    function validateForm(thisForm, currBtn)
    {
        var  soundexStatus="";
        var validateFormStatus=true;
		if(currBtn=="searchBtn" ){
			soundexStatus=beforeValidation();
			thisForm.jsCheck.value = "true";
			if(!(soundexStatus)){ // Soundex is not invoked
				validateSelectHotelFormAll(thisForm);
				blnToggleProcessing = true;
				validateFormStatus=true;
				}
			else{// Soundex is  invoked
				validateFormStatus=false;
				}
		}else if(currBtn=="chgDestinationBtn" ){
			soundexStatus=beforeValidation();
			thisForm.jsCheck.value = "true";
			if(!(soundexStatus)){ // Soundex is not invoked
				validateSelectHotelFormAll(thisForm);
				blnToggleProcessing = true;
				validateFormStatus=true;
				}
			else{// Soundex is  invoked
				validateFormStatus=false;
				}
			if(validateFormStatus){				
				thisForm.action=appContext+"/" +"selectHotel.do";				
				}				
		}else if(currBtn=="findReservation"){
			validateFormStatus = validateReservationRetrieveFormAll(thisForm);
		}else if(currBtn=="listReservation"){
			validateFormStatus = validateReservationRetrieveForSignIn(thisForm);
		}else if(currBtn=="createReservation"){
			validateFormStatus = reservationFormValidation(thisForm);
		}else if(currBtn=="reviewReserveSignIn"){
			validateFormStatus = reservationLoginFormValidation(thisForm);
		}else if(currBtn=="attachBwrNumberEditReservation"){
			attachBwrNumberFormvalidation(thisForm);
		}else if(currBtn=="createAccount"){
				formvalidation(thisForm);
		}else if(currBtn=="pwdValidateID"){
				validateDuplicateUser(thisForm);
		}else if(currBtn=="findGroup"){  //AR1103:10232013:kumarm: condition for group search validation start here
			validateGroupId(thisForm);
			//AR1103:10232013:kumarm: condition for group search validation end here
			}
		return 	validateFormStatus;
    }
    //AR0850[AK] the main validation method END


   /**
    ****************************************************************************
    * the main validation methods
    ****************************************************************************
    */

   /**
    * wrapper function that calls all post-submit validation functions
    *AR0850:Modified:SR: For Select Hotel Form Validation
    */
   function validateSelectHotelFormAll(form) {
   	 var passed = true;
	 isVaildDate=validateCapacityRequest(form);
	 isVaildAddress=validateAddressSearch(form);
	 if(!isVaildDate || !isVaildAddress){
		 //showAllErrors();
		 passed=false;
	 }

     if (passed)
      {
         passed = preventDoubleClick();
      }
     if(passed){
 		var chkInDt = form.arrDate.value;
 		var chkOutDt = form.depDate.value;
 		var nights = Math.abs(days_between(new Date(Date.parse(chkInDt)), new Date(Date.parse(chkOutDt))));
 		if(nights > "30"){
 			invokeLogging(nights,form);	
 		}
 	  }
      return passed;
   }
   /**
    * Called on form submit to ensure that asian users only enter valid
    * ascii (includes extended). DANSHAW
   */
   function validateAscii(item){
	      var passed =true;
		  
		  return passed;
	   }

   /**
    * Called on form submit to ensure that the telephone number only contains valid
    * characters (dec ascii 32-64 and 91-96). WT593
    */
   function validateTelephoneNumber(telephoneNumber)
   {
      for (i = 0; i < telephoneNumber.length; i++)
      {
         if (telephoneNumber.charCodeAt(i) > 96)
         {
            return false;
         }
         if (telephoneNumber.charCodeAt(i) < 32)
         {
            return false;
         }
         if (telephoneNumber.charCodeAt(i) > 64 && telephoneNumber.charCodeAt(i) < 91)
         {
            return false;
         }
      }
      return true;
   }
   /**
    * AR0850 [RG] Called on Click of "ADD REWARDS" Button from Edit Reservation if user wants to Add Best Western Rewards Number to His Reservation
    *
    */
    function attachBwrNumberFormvalidation(form)
    {
    	if((form.bwrNumber.value=="")){
          	addError(form.bwrNumber.name,  "BWR number should be entered");
          }else{
    		validateBwrNumber(form);
          }
    }


   /**
    * Ar0790: Singhpk Called on form submit to ensure that the BWR number only contains valid numerics digits,
    *
    */
   function validateBwrNumber(form)
   {
      if(!IsNumericValid(form.bwrNumber.value)){
    	  addError(form.bwrNumber.name, "Best Western Rewards number should be numeric.");
      }

      if(!(form.bwrNumber.value.length==16)){
    	  addError(form.bwrNumber.name, "Length of Best Western Rewards number should be 16 digits.");
      }
   }

function IsNumericValid(bwrNumber)
{

	var ValidChars = "0123456789";
	var IsNumber=true;
	var Char;

   	for (i = 0; i < bwrNumber.length && IsNumber == true; i++)
	{
		Char = bwrNumber.charAt(i);
		if (ValidChars.indexOf(Char) == -1)
		{
			IsNumber = false;
		}
	}
	return IsNumber;
}

 /**
    * This method returns true if any one of the input elements
    * that would trigger an availability (arrival date, numNights or numRooms)
    * has been selected - used by validateCapacityRequest to display the proper
    * alert if not all needed elements have been input
    */
   function hasAStayElement(form) {
      try
      {
         return (
            form.arrDate.value != "" ||
         	form.depDate.value != "" );
      }
      catch (e)
      {
         return false;
      }
   }

   /**
    * Called on form submit to ensure that either none or all of the input elements that would
    * trigger an availability have been selected (arrival date, departure date)
    */
   function validateCapacityRequest(form) {
      if (hasAStayElement(form) && !hasAllStayElements(form)) {
        isDatePassed=isDateForInlineMsg(form.arrDate);
        if(!isDatePassed){
        	  //showAllErrors();
        	  return false;
        }
     	if(isDatePassed && form.depDate.value == ""){
     		changeDep(form);
     		return true;
     	}
     	else {
    	     try
        	 {
            	if (form.arrDate.value == "") {
            	   addError(form.arrDate.name, "If you would like to check Room Availability for a Stay, you must provide:\n  - Your Arrival Date and Month-Year\n  - Your Departure Date and Month-Year\n\nIf you do not wish to check Room Availability and are just searching for a hotel,\nplease deselect all of these fields.");
            	   //showAllErrors();
	               form.arrDate.focus();
    	           return false;
        	    }
            	else if (!isDateForInlineMsg(form.depDate)) {// checkin invalid && out is null
            	   addError(form.depDate.name, "If you would like to check Room Availability for a Stay, you must provide:\n  - Your Arrival Date and Month-Year\n  - Your Departure Date and Month-Year\n\nIf you do not wish to check Room Availability and are just searching for a hotel,\nplease deselect all of these fields.");
             	   //showAllErrors();
	               form.depDate.focus();
    	           return false;
        	    }
            	return false;
	         }
        	 catch (e)
	         {
    	        //Must've come from a page that doesn't have this property.
        	 }
        }
      }
      else if (hasAllStayElements(form)) {
         return validateArrivalAndDepDate(form);
      }
      return true;
   }


   function validateReferencePointSearch(form)
   {
      if ((form.referencePoint != null) && (form.referencePointType != null))
      {
         if ((form.referencePoint.value == "") && (form.referencePointType.value != ""))
         {
            window.alert("Please enter a reference point.");
            return false;
         }

         if ((form.referencePointType.value == "") && (form.referencePoint.value != ""))
         {
            window.alert("Please select a reference point type from the drop down list.");
            return false;
         }
         return true;
      }
      return true;
   }

   /**
    * this method ensures that the Stay Date provided occurs in the future; this
    * is called inside validateCapacityRequest
    */
   function validateArrivalAndDepDate(form)
   {
	  try {
		if(form.arrDate.value == "" && form.depDate.value == ""){
			return true;
		}

		if(!isDateForInlineMsg(form.arrDate)){
			form.arrDate.focus();
			form.arrDate.select();
			return false;
		}
		if(!isDateForInlineMsg(form.depDate)){
			form.depDate.focus();
			form.depDate.select();
			return false;
		}
		var arrDMY = form.arrDate.value;
		var depDMY = form.depDate.value;
		var isPassed=true;


		arrDate = new Date(Date.parse(arrDMY));
		depDate = new Date(Date.parse(depDMY));

		if(days_between(depDate, arrDate)< 0 || days_between(depDate, arrDate)== 0){
			changeDep(form);
				depDate = new Date(Date.parse(form.depDate.value));

		}
		//if(days_between(depDate, arrDate)== 0){
		//	changeDep(form);
		//		depDate = new Date(Date.parse(form.depDate.value));
		//}
		var nights = Math.abs(days_between(arrDate, depDate));
		var istooFar = Math.abs(days_between(arrDate, new Date()));
		var istooFarCheckOutDate = Math.abs(days_between(depDate, new Date()));
		//AR0889:SinghS:07/26/2012 Added the Code for Logging and Showing Confirm box if LOS is geater than 30
		if(nights > 30){					
			var retVal = confirm("You have requested "+nights+" nights, are you sure?");
				if (retVal==true){
					isPassed = preValidateLos(form,nights,istooFar,istooFarCheckOutDate);
				}else{					
				form.depDate.focus();
				addError(form.depDate.name, "");
				isPassed=false;
				}													
			}
		else{
			isPassed = preValidateLos(form,nights,istooFar,istooFarCheckOutDate);
			}
		
		}
	  catch (e)
      {
         alert(e);
         return false;
      }
      return  isPassed;
   }
  //AR0889:SinghS:07/26/2012: Added the method and put all the validations in that.
    function preValidateLos(form,nights,istooFar,istooFarCheckOutDate)
    {
    	var isPassed=true;
		if( nights > "90")
		{
			addError(form.depDate.name, "Bestwestern.com cannot process a hotel reservation that exceeds 90 days in length. Please revise your reservation Check In or Check Out dates.");
			isPassed=false;
		}
		var istooFar = Math.abs(days_between(arrDate, new Date()));
		if( istooFar > 350)
		{
			addError(form.arrDate.name, "Best Western accepts reservations up to 50 weeks in advance. Please select a date within a 50-week window.");
			isPassed=false;
		}
		var istooFarCheckOutDate = Math.abs(days_between(depDate, new Date()));
		if( istooFarCheckOutDate > 350)
		{
			addError(form.depDate.name, "Best Western accepts reservations up to 50 weeks in advance. Please select a date within a 50-week window.");
			isPassed=false;
		}
		return isPassed;
        }
   

   /**
    * this method ensures that the Stay Date provided is valid; this
    * is called inside validateArrivalAndDepDate
    */
	function validDate(form) {
		var arrMY = form.arrivalMonthYear.value;
		var depMY = form.departureMonthYear.value;
		var arrDY = form.arrivalDay.value;
		var depDY = form.departureDay.value;
		//when user blank out all the dates
		if(arrDY == "" && arrMY == "" && depDY == "" && depMY == ""){
			return true;
		}


		arrMonthTemp = arrMY.substring(6,4);
		arrYearTemp = arrMY.substring(0,4);
		depMonthTemp = depMY.substring(6,4);
		depYearTemp = depMY.substring(0,4);

		arrDate = new Date(0);
		depDate = new Date(0);

		arrDate.setYear(arrMY.substring(0,4));
		arrDate.setDate(arrDY);
		arrDate.setMonth(arrMY.substring(6,4));


		depDate.setYear(depMY.substring(0,4));
		depDate.setDate(depDY);
		depDate.setMonth(depMY.substring(6,4));


		if ((arrDate.getMonth() < 0 || arrDate.getMonth() > 11)||(depDate.getMonth() < 0 || depDate.getMonth() > 11)) {
		    alert('Please Enter a Valid Date');
				return false;
		}
		if ((arrDate.getDate() < 1 || arrDate.getDate() > 31)||(depDate.getDate() < 1 || depDate.getDate() > 31)) {
		    alert('Please Enter a Valid Date');
				return false;
		}
		if ((arrMonthTemp == 3 || arrMonthTemp == 5 || arrMonthTemp == 8 || arrMonthTemp == 10) &&
		    (arrDY == 31)) {
		    alert('Please Enter a Valid Date');
				return false;
		}
		if ((depMonthTemp == 3 || depMonthTemp == 5 || depMonthTemp == 8 || depMonthTemp == 10) &&
		    (depDY == 31)) {
		    alert('Please Enter a Valid Date');
				return false;
		}
		if (arrMonthTemp == 1) {
		    if (arrDY > 29 || (arrDY == 29 && !isLeapYear(arrYearTemp))) {
				alert('Please Enter a Valid Date');
					return false;
		    }
		}
		if (depMonthTemp == 1) {
		    if (depDY > 29 || (depDY == 29 && !isLeapYear(arrYearTemp))) {
				alert('Please Enter a Valid Date');
					return false;
			}
		}
        compDate = new Date();
        compDate.setHours(0,0,0,0);
		if (arrDate < (compDate)|| depDate < (compDate) ){
			alert("The arrival or departure date you have provided has already passed, please provide valid dates.");
				return false;
		}

		return true;
	}


	/**
    * Returns the difference between two dates.
    */
	function days_between(date1, date2)
	{
    	// The number of milliseconds in one day
	    var ONE_DAY = 1000 * 60 * 60 * 24;

    	// Convert both dates to milliseconds
	    var date1_ms = date1.getTime();
    	var date2_ms = date2.getTime();

	    // Calculate the difference in milliseconds
    	var difference_ms = date1_ms - date2_ms;

	    diff=Math.round(difference_ms/ONE_DAY);

    	return diff;
   }

   /**
    * Changes the departure date equal to increment of
    * arrival date to one day.
    */
   function changeDep(form)
   {

		arrDate = new Date(Date.parse(form.arrDate.value));


		temp_date = new Date(arrDate.getTime() +(24*60*60*1000)); //Incrementing the arrival date to one day

		tempDMY= (temp_date.getMonth() +1) + "/" + temp_date.getDate() + "/" + temp_date.getFullYear(); //The function getYear is repalced with getFullYear as it is not supported by Mozilla and Safari.

		form.depDate.value = tempDMY;
   }
   /* END - Changes for HotelSearchForm */

   function getDay(day,month,year)
   {
      var days = new Array(12);
      var retVal = 0;
      days[0] = 0;   // place holder
      days[1] = 31;  // January
      days[2] = 28;  // February
      days[3] = 31;  // March
      days[4] = 30;  // April
      days[5] = 31;  // May
      days[6] = 30;  // June
      days[7] = 31;  // July
      days[8] = 31;  // August
      days[9] = 30;  // September
      days[10] = 31; // October
      days[11] = 30; // November
      days[12] = 31; // December

      for (var i = 0 ; i < month; i++)
      {
         retVal += days[i];
      }

      if (month > 1 && isLeapYear(year))
      {
         retVal++;
      }

      retVal = retVal + day;
      //alert("getDay::retVal: " + retVal);
      return retVal;
   }

   function isLeapYear(year)
   {
      if ((year % 100 != 0 && year % 4 == 0) || (year % 400 == 0))
      {
         return true;
      }
      else
      {
         return false;
      }
   }

   function compare(day1, day2, year1, year2)
   {
      //alert ("compare::day1: " + day1 + " compare::day2: " + day2 + " compare::year1: " + year1 + " compare::year2: " + year2);
      if (year1 != year2)
      {
         day2 += (year2 - year1) * 365;
         //alert ("compare::(new)day2: " + day2);
         if (day1 < 59 && isLeapYear(year1))
         {
            day2++;
         }
      }

      var ret = day2 - day1;
      //alert("compare::returning: " + ret);

      return ret;
   }

   /**
    * Called on form submit to ensure that the Guest has selected a state in the event
    * that they selected the US, Canada, or Australia as the country, and did not select
    * a city
    */
   function validateCountryState(form)
   {
      if ((form.referencePoint == null || form.referencePoint.value == "") &&
         (form.hotelName == null || form.hotelName.value == "") )
      {
         var country = form.countryCode.options[form.countryCode.selectedIndex].value;
         if (country == "")
         {
            window.alert("Please select a country.");
            if ( (form.nearStreetAddress != null && form.nearStreetAddress.value != "") ||
                (form.nearPostalCode != null && form.nearPostalCode.value != ""))
            {
               form.nearCountry.focus();
            }
            else
            {
               form.countryCode.focus();
            }
            return false;
         }
         var state    = form.stateCode.options[form.stateCode.selectedIndex].value;
         if ((country == "US" || country == "CA" || country == "AU") && form.stateCode.selectedIndex == 0 && Trim(form.city.value) == "")
         {
            window.alert("For Canada, the United States and Australia,\n please select a State");
            // if the Guest is doing a 'near address' search, bring the focus there
            if ( (form.nearStreetAddress != null && form.nearStreetAddress.value != "") ||
                (form.nearPostalCode != null && form.nearPostalCode.value != "") )
            {
               form.nearState.focus();
            }
            else
            {
               form.stateCode.focus();
            }
            return false;
         }
         result = validateAscii(form.city);
         if(result == false){
            return false;
         }
      }
      return true;
   }

   /**
    * If the Guest has input a Street Address in attempting to perform a Street Address Search,
    * this method ensures that at least a City or Postal Code has been specified in addition
    * to the basic Country or Country/State requirement
    */
   function validateAddressSearch(form) {
	   var longitudeVal = document.getElementById("longitudeHdn").value;
		 var latitudeVal = document.getElementById("latitudeHdn").value;
		 var destinationVal=document.getElementById("hotelLocation").value;
		 if(destinationVal!=null  &&  destinationVal.length>0  &&  destinationVal.length>2 && destinationVal !=  "City, Address, Attraction, Airport" )
	     {
	            return true;
	     }else{
	    	  addError(form.hotelLocation.name, "When performing a search, you must provide either city, address, attraction or airport.");
			  return  false;
	     }

		 if(longitudeVal ==  "undefined" ||  latitudeVal ==  "undefined"){
			addError(form.hotelLocation.name, "We are unable to locate a Best Western hotel that matches your criteria.  Please enter a new city, address, attraction, airport, or zip code and resubmit.");
	    	return  false;
		 }else if(longitudeVal!=null && longitudeVal.length >0 && latitudeVal!=null && latitudeVal.length >0 ){
	        return true;
	     }else{
	    	addError(form.hotelLocation.name, "When performing a search, you must provide either city, address, attraction or airport.");	    		    	 
	    	return  false;
	     }
		 
   }



   /**
    * When a guest selects a state, we synch the other state box, if any, we change
    * the country to the appropriate country, and we changed the number of rooms
    * drop-down according to the country
    */
   function changeOfState(aSelect) {
      var val = new String(aSelect.options[aSelect.selectedIndex].value);
      var form = aSelect.form;

      // synch any existing state dropdown
      if (form.stateCode != null) {
         form.stateCode.selectedIndex = aSelect.selectedIndex;
      }

      if (form.nearState!= null) {
         form.nearState.selectedIndex = aSelect.selectedIndex;
      }

      // change the country dropdown(s) to the proper value
      displayCountry(aSelect);

      // refresh the number of rooms dropdown based on country
      //refreshNumRoomsDropdown(form.countryCode);

      // if the Guest selected one of the country headers in the state drop-down, complain
      if (val == "US" || val == "CA" || val == "AU") {
         window.alert("For Canada, the United States and Australia,\n please select a State");
         aSelect.focus();
      }
      return;
   }

   /**
    ****************************************************************************
    * functions supporting the main validation methods above
    ****************************************************************************
    */

   /**
    * This method returns true if all one of the input elements
    * that would trigger an availability (arrival date, numNights or numRooms)
    * has been selected - used by validateCapacityRequest to display the proper
    * alert if not all needed elements have been input
    */
   function hasAllStayElements(form) {
      try
      {

      return (
         	form.arrDate.value != "" &&
         	form.depDate.value != "");
      }
      catch (e)
      {
         return false;
      }
   }


   /**
    ****************************************************************************
    * Generic helper functions not specific to the validation that we are performing
    ****************************************************************************
    */

   /**
    * given a select value, return its index within the select element;
    * if not found return the first element in the select
    */
   function getIndex(aSelect, aValue) {
      for (var i=0; i < aSelect.length; i++) {
         if (aSelect.options[i].value == aValue) {
            return i;
         }
      }
      return 0;
   }

   /**
    * given an array of Select Option objects, this function returns
    * true if the passed value is contained in the array; this function
    * is used to determine the Country to which a selected state belongs
    */
   function isValueInOptionArray(aValue, aryOption) {
      if (aryOption.length > 0) {
         for (var i=0; i < aryOption.length; i++) {
            if (aryOption[i].value == aValue) {
               return true;
            }
         }
      }
      return false;
   }

   function removeAllData(options)
   {
      var element = options.firstChild;
      while (element != null)
      {
         var nextChild = element.nextSibling;
         options.removeChild(element);
         element = nextChild;
      }
      options.length = 0;
   }

   /**
    * given a select input and an array of Options,
    * set the options of the select to the Options provided
    */
   function setOptions(aSelect, aryOptions) {
      if (aryOptions.length > 0) {
          aSelect.options.length = 0;
         //removeAllData(aSelect);
         for (var i=0; i < aryOptions.length; i++) {
            // if we do not assign a new Option, running this method twice
            // over the same array will yield a pointer error
            if(aryOptions[i] != null)
               aSelect.options[aSelect.length] = new Option(aryOptions[i].text, aryOptions[i].value);
             if(i==0){
            	 aSelect.options[i].selected = true;
             }
         }

         /**
          * AR0755B: Profile GCCI Sign-Up:: To remove first element i.e. "Please Select" if we have only one
          * language in language preference drop down for our selected country.
          */
         if(aSelect.name == 'languageCode'){
         	if(aryOptions.length == 2){
         		var element = aSelect.firstChild;
         		if(element != null){
         			aSelect.removeChild(element);
         		}
         	}
         }
      }
   }

   /**
    * checks validity of date, copied from validator-rules.xml;
    * but modified to use a 0-based month index (i.e. jan=0)
    */
   function isDateValid(day, month, year) {
      if (month < 0 || month > 11) {
         return false;
      }
      if (day < 1 || day > 31) {
         return false;
      }
      if ((month == 3 || month == 5 || month == 8 || month == 10) &&
         (day == 31)) {
         return false;
      }
      if (month == 1) {
         var leap = (year % 4 == 0 &&
               (year % 100 != 0 || year % 400 == 0));
         if (day>29 || (day == 29 && !leap)) {
            return false;
         }
      }
      return true;
   }


   /**
    * Given a month represented by an integer (jan=0) and a year,
    * return the number of days in that month; if the year is null,
    * return 29 days for February
    */
   function getNumDaysInMonth(month,year) {
      if (month == 3 || month == 5 || month == 8 || month == 10) {
         return 30;
      }
      else if (month == 1) {
         var leapOrNull = (year < 0) || (year % 4 == 0 && (year % 100 != 0 || year % 400 == 0));
         if (leapOrNull)
            return 29;
         else
            return 28;
      }
      else {
         return 31;
      }
   }


   /**
    * wrapper around window.open used for opening a non-resizable no-thrills popup message windows
    */
   function validationPopupMessage(url, winName, aWidth, aHeight)
   {
      // if Height and Width are passed, but no X and Y coordinates passed,
      // center the window on the screen
      var X;
      var Y;
      if ( aHeight != null && aWidth != null && X == null && Y == null ) {
         X = Math.round((window.screen.availWidth - aWidth) / 2);
         Y = Math.round((window.screen.availHeight - aHeight) / 2);
      }

      var features= "height="+aHeight +", width="+aWidth +
            ", screenX="+X +", screenY="+Y +", left="+X +", top="+Y
            +", location=no, menubar=no, resizable=no, scrollbars=no, status=no, toolbar=no";
      var popup = window.open(url,winName, features);
      popup.focus();
   }

   function preventDoubleClick()
   {
      if (doubleClick)
      {
         alert('Your request is being processed, please wait.');
         return false;
      }
      else
      {
         doubleClick = true;
         return true;
      }
   }

function pressEscapeKey()
{
	if (window.event.keyCode == 27)
		doubleClick = false;
}

function getDoubleClickValue(val)
{
	doubleClick= val;
}


function checkCheckOutDate(form)
{

  try {
//alert(form.arrivalMonthYear.selectedIndex);



	if(form.arrivalMonthYear.selectedIndex == 0 && form.arrivalDay.selectedIndex == 0  )
	{
		var msg = "If you would like to check Room Availability for a Stay, you must provide:\n  - Your Arrival Date and Month-Year\n  - Your Departure Date and Month-Year\n\nIf you do not wish to check Room Availability and are just searching for a hotel,\nplease deselect all of these fields.";
        window.alert(msg);
		return false;
	}



  
  
	if(form.arrivalMonthYear.selectedIndex > 0 && form.arrivalDay.selectedIndex > 0 ) {
  


	if(! validDate(form))
	{
	   return false;
	}

	//new validation for date
	var arrMY = form.arrivalMonthYear.value;
	var depMY = form.departureMonthYear.value;
	var arrDY = form.arrivalDay.value;
	var depDY = form.departureDay.value;

	arrDate = new Date(0);
	depDate = new Date(0);

	arrDate.setYear(arrMY.substring(0,4));
	arrDate.setDate(arrDY);
	arrDate.setMonth(arrMY.substring(6,4));


	depDate.setYear(depMY.substring(0,4));
	depDate.setDate(depDY);
	depDate.setMonth(depMY.substring(6,4));


		var istooFarCheckInDate = Math.abs(days_between(arrDate, new Date()));
		if( istooFarCheckInDate > 350)
		{
			alert("Best Western accepts reservations up to 50 weeks in advance. Please select a date within a 50-week window.");
			return false;
		}
//		if(days_between(depDate, arrDate)< 0){

			changeDep(form);
				depMY = form.departureMonthYear.value;
				depDY = form.departureDay.value;
				depDate.setYear(depMY.substring(0,4));
				depDate.setDate(depDY);
				depDate.setMonth(depMY.substring(6,4));

//		}
		if(days_between(depDate, arrDate)== 0){
			changeDep(form);
				depMY = form.departureMonthYear.value;
				depDY = form.departureDay.value;
				depDate.setYear(depMY.substring(0,4));
				depDate.setDate(depDY);
				depDate.setMonth(depMY.substring(6,4));

		}

		var istooFarCheckOutDate = Math.abs(days_between(depDate, new Date()));
//		Santosh Kumar - Changes the single quote to double quotes		
		if( istooFarCheckOutDate > 350)
		{
			alert("Best Western accepts reservations up to 50 weeks in advance. Please select a date within a 50-week window.");
			return false;
		}

	 }
  }
 catch (e)
     {
		 alert(e);
         return false;
     }
return true;

}

var dtCh= "/";
var minYr=1900;
var maxYr=2100;

function isInteger(s){
	var i;
    for (i = 0; i < s.length; i++){
        // Check that current character is number.
        var c = s.charAt(i);
        if (((c < "0") || (c > "9"))) return false;
    }
    // All characters are numbers.
    return true;
}




   /**
    * wrapper function that calls all post-submit validation functions
    */
function validateReservationRetrieveFormAll(form)
   {
		if(doubleClick){
			alert('Your request is being processed, please wait.');
			return false;
		}else{
		      if(document.getElementById("errorSecond")!=null)
		  	 	document.getElementById("errorSecond").innerHTML='';
		      // the Struts-Validator dynamically generated validation
		      //passed = validateReservationRetrieveForm(form);
		      //Added the length check and also the numeric check
		      if (Trim(form.number.value.length) <9 || !IsNumeric(Trim(form.number.value)))
		       {
		    		  addError(trim(form.number.name), "Please enter a valid reservation Confirmation Number");
		       }
		      if (trim(form.firstName.value) == "")
		      {
		    	//AR0850 [R.R]Show inline error messages in check reservation page when clicks on Find Reservation
		         addError(trim(form.firstName.name), "Please enter your First Name");
		      }
		      
		
		      if (trim(form.lastName.value) == "")
		      {
		    	//AR0850 [R.R]Show inline error messages in check reservation page when clicks on Find Reservation
		         addError(trim(form.lastName.name), "Please enter your Last Name");
		         
		      }
		      if(validationPass()){
		    	  	doubleClick = true;
			  		form.action=document.reservationRetrieveForm.action;
			  	}
		}
		return true;
   }
//AR1103:10232013:kumarm:Added to validate double click on group id:started
function validateGroupId(form){
	var passed = true;
	
	if(doubleClick){
		alert('Your request is being processed, please wait.');
		return false;
		
	}else{
		if(validationPass()){
    	  	doubleClick = true;
    	  	form.action=document.groupSearchForm.action;
    	  	
	  	}
		}
	return true
}
//AR1103:10232013:kumarm:Added to validate double click on group id:ended

   //AR0850 [R.G] Validate when user Click on Sign -In from Check Reservation Page and show inline error messages
	function validateReservationRetrieveForSignIn(thisform) {
		if(doubleClick){
			alert('Your request is being processed, please wait.');
			return false;
		}
		with (thisform) {
			var emailGcci = 'Email or Member #  ' ;
			
			if(Trim(thisform.emailGcciNumber.value) == Trim(emailGcci)){
				thisform.emailGcciNumber.value = "";
			}
			if (thisform.emailGcciNumber.value == "") {
				addError(thisform.emailGcciNumber.name, "Please enter a value for the Email or Member# field.");
			}
			else{
								
		  			if(thisform.emailGcciNumber.value.length >= 0)
	  				{
	  					if(isNaN(thisform.emailGcciNumber.value)){
	  						EmailAddressValidation(thisform.emailGcciNumber, "Email address format is incorrect, please re-enter and try again.");
	  					}else{
	  	    				DigitValidation(thisform.emailGcciNumber,16,16,'Invalid  Best Western Rewards membership number.  Membership numbers must be 16 digits.');
	  					}
	  				}
	  				else
	  				{
	  					EmailAddressValidation(thisform.emailGcciNumber, "Email address format is incorrect, please re-enter and try again.");
	  				}
		  	  	
		  	  	
			}
			

			if (EmptyValidation(thisform.password,"Please enter a password."))
	  	  	{
				//LengthValidation(thisform.password,6,15,msgPasswordLength);
				
	  		}
			
			 if(validationPass()){				 
		    	  	doubleClick = true;			  		
			 }
		}
		return true;
	}

   function stripCharsInBag(s, bag){
	var i;
    var returnString = "";
    // Search through string's characters one by one.
    // If character is not in bag, append to returnString.
    for (i = 0; i < s.length; i++){
        var c = s.charAt(i);
        if (bag.indexOf(c) == -1) returnString += c;
    }
    return returnString;
}

function daysInFebruary (year){
	// February has 29 days in any year evenly divisible by four,
    // EXCEPT for centurial years which are not also divisible by 400.
    return (((year % 4 == 0) && ( (!(year % 100 == 0)) || (year % 400 == 0))) ? 29 : 28 );
}

//Incident: 126511 - Modified logic to return number of days
function DaysArray(n) {
	var j;
	for (var i = 1; i <= n; i++) {
		j = 31
		if (i==4 || i==6 || i==9 || i==11) {j = 30}
		if (i==2) {j = 29}
   }
   return j
}

function isDate(dtStr){

	var pos1=dtStr.indexOf(dtCh)
	var pos2=dtStr.indexOf(dtCh,pos1+1)
	var strMonth=dtStr.substring(0,pos1)
	var strDay=dtStr.substring(pos1+1,pos2)
	var strYear=dtStr.substring(pos2+1)
	strYr=strYear
	if (strDay.charAt(0)=="0" && strDay.length>1) strDay=strDay.substring(1)
	if (strMonth.charAt(0)=="0" && strMonth.length>1) strMonth=strMonth.substring(1)
	for (var i = 1; i <= 3; i++) {
		if (strYr.charAt(0)=="0" && strYr.length>1) strYr=strYr.substring(1)
	}
	month=parseInt(strMonth)
	day=parseInt(strDay)
	year=parseInt(strYr)
	if (pos1==-1 || pos2==-1){
		alert("Date format should be mm/dd/yyyy.")
		return false
	}
	if (strMonth.length<1 || month<1 || month>12){
		alert("Please check month and correct.")
		return false
	}
	if (strDay.length<1 || day<1 || day>31 || (month==2 && day>daysInFebruary(year)) || day > DaysArray(month)){
		alert("Please check your arrival and departure dates.")
		return false
	}
	if (strYear.length != 4 || year==0 || year<minYr || year>maxYr){
		alert("Please check year and correct to yyyy.")
		return false
	}
	if (dtStr.indexOf(dtCh,pos2+1)!=-1 || isInteger(stripCharsInBag(dtStr, dtCh))==false){
		alert("Date provide is invalid.")
		return false
	}
return true
}
//AR0850 Starts for Date Validation and for showing the  Inline messages
function isDateForInlineMsg(dtStr){

	var pos1=dtStr.value.indexOf(dtCh)
	var pos2=dtStr.value.indexOf(dtCh,pos1+1)
	var strMonth=dtStr.value.substring(0,pos1)
	var strDay=dtStr.value.substring(pos1+1,pos2)
	var strYear=dtStr.value.substring(pos2+1)
	strYr=strYear
	if (strDay.charAt(0)=="0" && strDay.length>1) strDay=strDay.substring(1)
	if (strMonth.charAt(0)=="0" && strMonth.length>1) strMonth=strMonth.substring(1)
	for (var i = 1; i <= 3; i++) {
		if (strYr.charAt(0)=="0" && strYr.length>1) strYr=strYr.substring(1)
	}
	month=parseInt(strMonth)
	day=parseInt(strDay)
	year=parseInt(strYr)
	if (pos1==-1 || pos2==-1){
		//alert("Date format should be mm/dd/yyyy.")
		addError(dtStr.name, "Date format should be mm/dd/yyyy.");
		//return false
		isPassed=false;
	}
	if (strMonth.length<1 || month<1 || month>12){
		addError(dtStr.name, "Please check month and correct.");
		isPassed=false;
		//alert("Please check month and correct.")
		//return false
	}
	if (strDay.length<1 || day<1 || day>31 || (month==2 && day>daysInFebruary(year)) || day > DaysArray(month)){
		addError(dtStr.name, "Please check your arrival and departure dates.");
		//alert("Please check your arrival and departure dates.")
		//return false
		isPassed=false;
	}
	if (strYear.length != 4 || year==0 || year<minYr || year>maxYr){
		addError(dtStr.name, "Please check year and correct to yyyy.");
		//alert("Please check year and correct to yyyy.")
		//return false
		isPassed=false;
	}
	if (dtStr.value.indexOf(dtCh,pos2+1)!=-1 || isInteger(stripCharsInBag(dtStr.value, dtCh))==false){
		addError(dtStr.name, "Date provide is invalid.");
		//alert("Date provide is invalid.")
		//return false
		isPassed=false;
	}
return true
}
//AR0850 Ends for Date Validation and for showing the  Inline messages

function validateOtherEmail(form)
   {
   	  var passed;
   	  if (form.emailAddress.value == "")
      {
         window.alert("Please enter a valid email address.");
         form.emailAddress.focus();
         passed = false;
      }
      else if(!validateAscii(form.emailAddress)){
         form.emailAddress.focus();
         passed = false;
      }
      else
      {
      	 passed = validateEmail(form);
      }
      return passed;
   }


/**
 * called to keep the city fields the same
 */
function synchCity(aTextbox)
{
	var form = aTextbox.form;
    if (form.city != null) {
    	form.city.value = aTextbox.value;
    }
    if (form.nearCity != null) {
    	form.nearCity.value = aTextbox.value;
    }
    return true;
}

 function validateNumRooms(numRooms) {

            if (numRooms == 9) {

               
               var url = "/bestwestern/messageGroup.do;jsessionid=+AKzBAxYqYymWsSsHXIdtg__.h422c?msgKey=search.group_request_msg&arg1=http%3a%2f%2fwww.bestwestern.com";
               
               url += "&arg0=4-9";
               validationPopupMessage(url,"msgWindow", 300,200);
               return false;
            }
            if (numRooms == 10) {

               var url = "/bestwestern/messageGroup.do;jsessionid=+AKzBAxYqYymWsSsHXIdtg__.h422c?msgKey=search.group_online_msg&arg0=http%3a%2f%2fwww.bestwestern.com";
               validationPopupMessage(url,"msgWindow", 300,200);
               return false;
            }

      return true;
   }
   function setupDisplay(rooms)
{
	var number = rooms.value;
	if (!(number > 1))
	{
		number = 1;
	}
	for (i = 1 ; i <= number ; i++)
	{
		setStyle('room' + i + 'a', 'block');
		setStyle('room' + i + 'b', 'block');
		setStyle('room' + i + 'c', 'block');
		setStyle('room' + i + 'd', 'block');
	}
	for (i = 5 ; i > number ; i--)
	{
		setStyle('room' + i + 'a', 'none');
		setStyle('room' + i + 'b', 'none');
		setStyle('room' + i + 'c', 'none');
		setStyle('room' + i + 'd', 'none');
	}
}

	/**
    * wrapper function that calls all post-submit validation functions
    */
function validateCreateReservationFormAll(form){
		if (form.bwrNumber.value != "")
	    {
			validateBwrNumber(form);
	  	}
		// Go validate the customer information
		validateCustomerInfo(form);
		validateBillingGuestAddress(form);
		// AR0872:Go validate the Guest Address fields
		//AR1103:05012014:tamilag:Included ccSkipDepositPolicy condition - Start
		
		{
		if(form.useGuestAddress.checked){
			validateBillingAddress(form);
		}
			}
		 
		//AR1103:05012014:tamilag:Included ccSkipDepositPolicy condition - End
		// AR0872:Go validate the Credit Card information

		// the 'custom' validations below
			 validateEmailAddresses(form);
			 //AR1103:05012014:tamilag:Included ccSkipDepositPolicy condition - Start
			 
			 {
		if (validatecreditCardInfo(form)){
			var mnth=form.creditCardExpMonth.value;
			var yr=form.creditCardExpYear.value;
			 validateCreditCardExpiryDate(mnth,yr,form);
		}}
			 
			 //AR1103:05012014:tamilag:Included ccSkipDepositPolicy condition - End
		//AR1103:05282014:tamilag:Inlcuded check for undefined, to handle iata number for Group Flow - Start
		if ((typeof(form.iataNumber) != 'undefined') && form.iataNumber.value == "Enter IATA/ARC/TIDS #"){			
			form.iataNumber.value = "";
		}
		//AR1103:05282014:tamilag:Inlcuded check for undefined, to handle iata number for Group Flow - End
		validateResSummary(form);
		/*if(doubleClick){
			preventDoubleClick();
			}
			*/
		if(form.agreement.checked == false){
			addError(form.agreement.name, "Please accept rate and room policies and then click reserve.");
		}
		var iErrorLen = arrErrorObjs.length;
	  	var blnNoError = (iErrorLen==0);
	  	return blnNoError;
    }
	/**
    * AR0872:DS: Added function to validate Credit Card Expiry Date entered by user on ReviewAndReserve page
    */

	function validateCreditCardExpiryDate(month,year,form){

      var now = new Date();
      var expiry = new Date(year,month,30);
      if (expiry < now)
      {
    	  addError(form.creditCardExpMonth.name, "Expiration date cannot occur in the past.");
      }
   }



	/**
    * function to validate comments entered by user on ReviewAndReserve page
    */
	function validateResSummary(form)
	{
		// ok, could have more than one comment here,
		// loop over all the comment i's and check em
		var elements = form.elements;
		var str = '';
		str += elements.length + '<BR>';
		for (var i=0;i<elements.length;i++){
			if(elements[i].name.indexOf('comment') != -1){
				validateAscii(elements[i]);
			}
		}
		/* if(!form.policyChk.checked){
			document.getElementById('spanSubmit').style.display='block'
			return false;
		}*/
	}



   function validateEmailAddresses(form)
   {
      var email1 = form.email.value;
      var email2 = form.confirmEmail.value;
      if (email1 != email2)
      {
    	  addError(form.confirmEmail.name, "Email and confirm email addresses do not match. Please correct and submit again.");
      }
   }

   function validateBillingGuestAddress(form)
   {
         if ((form.country.value == "US" || form.country.value == "CA" || form.country.value == "AU"))
         {
            if (form.state.value == "")
            {
            	addError(form.state.name, "Please enter a state for guest address.");
            }
         }
         if ((form.country.value == "US" || form.country.value == "CA" || form.country.value == "AU"))
         {
            if(Trim(form.postalCode.value) == "" || Trim(form.postalCode.value).length<=0)
            {
            	addError(form.postalCode.name, "Please enter a valid Zip/Postal Code.");
            }
         }
         var phoneNum = form.telephone.value ;
   	  	phoneNum = phoneNum.replace(/^\s+|\s+$/g,"");

         if (phoneNum == "")
         {
       	 addError(form.telephone.name, "Please enter a valid Phone Number.");
         }
         
   }

	/** AR0872:
    * Breaking ValidateCustomerInfo() function into two different functions:
    * ValidateCustomerInfo()
    * validatecreditCardInfo()
 	* As per the requirement billing address validation should be done before credit card validation.
 	* Removing credit card validation from the existing function and creating validatecreditCardInfo  function for it.
    * Now the credit card validation will occur after guest address validation and billing address validation.
    * Earlier billing address validation  was called after credit card validation which was called after guest address validation.
    **/
   function validateCustomerInfo(form)
   {
      if (trim(form.firstName.value) == "")
      {
      	addError(trim(form.firstName.name), "Please enter the guest first name.");
      }
      else {
    	  validateAscii(form.firstName);
      }

      if (trim(form.lastName.value) == "")
      {
    	  addError(trim(form.lastName.name), "Please enter the guest last name.");
      }
      else {
          validateAscii(form.lastName);
      }

      if (trim(form.address1.value) == "")
      {

    	 addError(trim(form.address1.name), "Please enter address line 1 for guest address.");
      }
      else {
          validateAscii(form.address1);
      }

      if (Trim(form.city.value) == "")
      {
    	 addError(form.city.name, "Please enter a city for guest address.");
      }
      else {
          validateAscii(form.city);
      }

      if (form.country.value == "")
      {
    	 addError(form.country.name, "Please enter a country for guest address.");
      }

      if (trim(form.email.value) == "")
      {
         addError(trim(form.email.name), "Please enter a valid email address.");
      }else if(EmailAddressValidation(form.email, "Please enter a valid email address.")){
    	  validateAscii(form.email);
    	  validateEmailAscii(form.email, "Please enter a valid Email Address.");
      }


      if (trim(form.confirmEmail.value) == "")
      {
    	 addError(trim(form.confirmEmail.name), "Please enter a valid confirmation email address.");
      }else if(EmailAddressValidation(form.confirmEmail, "Please enter a valid confirmation email address.")){
    	  validateAscii(form.confirmEmail);
      }


   }

   /* AR0872:
   * function for checking Credit Card Field entries in form
   */
   function validatecreditCardInfo(form)
   {
 	  //if(form.newCard.value == "true"){
		  if(form.selectCard){
		      if (form.selectCard.value == "" || form.selectCard.value == "defaultText")
		      {
		    	  addError(form.selectCard.name, "Please enter a credit card type.");
		    	  return false;
		      }
		  }

		  if(form.creditCardNumber){
		      if (form.creditCardNumber.value == "")
		      {
		    	  addError(form.creditCardNumber.name, "Please enter your credit card number");
		    	  return false;
		      }
		  }


	      if (form.creditCardExpMonth.value == "")
	      {
	    	  addError(form.creditCardExpMonth.name, "Please enter a credit card expiry month.");
	    	  return false;
	      }

	      if (form.creditCardExpYear.value == -1)
	      {
	         addError(form.creditCardExpYear.name, "Please enter a credit card expiry year.", "creditCardExpMonth");
	         return false;
	      }

	      if(document.getElementById('displayCVCField').style.display != 'none' &&
	      	document.getElementById("cvvNumber") != null){
	    	ret = checkCvvLength();
			return ret;
	      }
	  /*}
	  else{
	      if (form.creditCardOldExpMonth.value == "")
	      {
	    	  addError(form.creditCardOldExpMonth.name, "Please enter a credit card expiry month.");
	    	  return false;
	      }

	      if (form.creditCardOldExpYear.value == "-1")
	      {

	         addError(form.creditCardOldExpYear.name, "Please enter a credit card expiry year.");
	         return false;
	      }
	  	}*/

	  	return true;
   }

   function validateBillingAddress(form)
   {
      if (form.billingFirstName.value == "")
      {
         addError(trim(form.billingFirstName.name), "Please enter the credit card holders first name.");
      }
      else {
          validateAscii(form.billingFirstName);
      }

      if (form.billingLastName.value == "")
      {
         addError(trim(form.billingLastName.name), "Please enter the credit card holders last name.");
      }
      else{
    	  validateAscii(form.billingLastName);
      }

      if (form.billingAddress1.value == "")
      {
         addError(trim(form.billingAddress1.name), "Please enter address line 1 for billing address.");
      }
      else {
          validateAscii(form.billingAddress1);
      }
      if (form.billingCity.value == "")
      {
         addError(form.billingCity.name, "Please enter a city for billing address.");
      }
      else{
          validateAscii(form.billingCity);
      }

      if ((form.billingCountry.value == "US" || form.billingCountry.value == "CA" || form.billingCountry.value == "AU"))
      {
         if (form.billingState.value == "")
         {
            addError(form.billingState.name, "Please enter a state for billing address.");
         }
      }
      if ((form.billingCountry.value == "US" || form.billingCountry.value == "CA" || form.country.value == "AU"))
      {
         if (form.billingPostalCode.value == "")
         {
            addError(trim(form.billingPostalCode.name), "Please enter a valid Zip/Postal Code.");
         }
      }
      if (form.billingCountry.value == "")
      {
         addError(trim(form.billingCountry.name), "Please enter a country for billing address.");
      }
      return true
   }
/**
* function for check password for gcci membership on review and reservation page
*/

function validatePassword(form)
{
	if(form.newUserPassword.value.length==0)
		{
			alert("Please enter 6 - 8 characters in Password field");
			form.newUserPassword.focus();
			return false;
		}

		if(form.newUserPassword.value.length<6 || form.newUserPassword.value.length>15 )
		{
			alert("Both the password fields should have 6 - 15 characters.");
			form.newUserPassword.focus();
			return false;
		}

		if(form.newUserConfirmPassword.value.length==0)
		{
			alert("You did not validate password. Please re-enter.");
			form.newUserConfirmPassword.focus();
			return false;
		}

		if (form.newUserPassword.value != form.newUserConfirmPassword.value)
		{
			alert("The passwords you entered do not match. Please re-enter them.");
			form.newUserPassword.focus();
			return false;
		}
		return true;
}

function validatePasswordBWBanner(form)
		{
		if(form.newUserPasswordBanner.value.length==0)
		{
			addError(form.newUserPasswordBanner.name, "Password must be 8-15 characters containing at least 1 letter, 1 number and no spaces.");
		}

		else if(form.newUserPasswordBanner.value.length<8 || form.newUserPasswordBanner.value.length>15 || validateRegExpPwdReviewPage(form.newUserPasswordBanner.value)==false)
		{
			//addError(form.newUserPasswordBanner.name, "Both the password fields should have 6 - 15 characters.");
			addError(form.newUserPasswordBanner.name, "Password must be 8-15 characters containing at least 1 letter, 1 number and no spaces.");
		}
		else if( validatePasswordAscii(form.newUserPasswordBanner)==false)
		{
			addError(form.newUserPasswordBanner.name, "Please enter a valid Password.");
		}
		
		if(form.newUserConfirmPasswordBanner.value.length==0)
		{
			addError(form.newUserConfirmPasswordBanner.name, "You did not validate password. Please re-enter.");
		}

		if (form.newUserPasswordBanner.value != form.newUserConfirmPasswordBanner.value)
		{
			addError(form.newUserPasswordBanner.name, "The passwords you entered do not match. Please re-enter them.");
		}
		//return true;
	}

   function changeOfBillingState(aSelect, fieldName)
   {

      var val = new String(aSelect.options[aSelect.selectedIndex].value);

      var form = aSelect.form;

      // synch any existing state dropdown
      if (fieldName == "state")
      {
         form.state.selectedIndex = aSelect.selectedIndex;
      }

      else if (fieldName == "billingState")
      {
         form.billingState.selectedIndex = aSelect.selectedIndex;

      }

      // change the country dropdown(s) to the proper value
      displayBillingCountry(aSelect, fieldName);

      // if the Guest selected one of the country headers in the state drop-down, complain
      if (val == "US" || val == "CA" || val == "AU")
      {
         addError(fieldName.name, "For Canada, the United States and Australia,\n please select a State");
      }
      return;
   }

   function changeOfBillingCountry(aSelect, fieldName)
   {
      refreshBillingStates(aSelect, fieldName);
      var form = aSelect.form;

      // synch any existing country dropdowns
      if (fieldName == "country")
      {
         form.country.selectedIndex = aSelect.selectedIndex;
      }
      else if (fieldName == "")
      {
         form.billingCountry.selectedIndex = aSelect.selectedIndex;
      }
   }

  /** Displays the proper country depending on a state */
  /** AR1103:kumarte:changed the form dot value to country from billingCountry */
   function displayBillingCountry(aSelect, fieldName)
   {
      var val  = aSelect.options[aSelect.selectedIndex].value;
      var form = aSelect.form;
      var idx = 0;

      if (val.indexOf("US_") == 0)
      {
         idx = getIndex(form.country, "US");
      }
      else if (val.indexOf("CA_") == 0)
      {
         idx = getIndex(form.country, "CA");
      }
      else if (val.indexOf("AU_") == 0)
      {
         idx = getIndex(form.country, "AU");
      }

      if (idx > 0)
      {

         if (fieldName == "state")
         {
			// idx = idx - 1;
            form.country.selectedIndex = idx;

         }
         else if (fieldName == "billingState")
         {
            form.billingCountry.selectedIndex = idx;
         }
      }
      
      	refreshPrefixesForState(form,form.country.value);
	  	
   }

   function refreshBillingStates(aSelect, fieldName)
   {
	    if(aSelect.selectedIndex == -1){
	    	countryOptionsVal =aSelect.options;
	    	for(i=0;i < countryOptionsVal.length ; i++){
	    		countryOptionsVal[i].selected = false;
				if(countryOptionsVal[i].value == countryCode.substring(0,2)){
					countryOptionsVal[i].selected = true;
					break;
				}
			}
		}

      var stateCodes = new Array();
      var val = aSelect.options[aSelect.selectedIndex].value;
      var form = aSelect.form;


      if (val == "US")
      {
         stateCodes = US_states_withoutAll;

      }
      else if (val == "CA")
      {
         stateCodes = CA_states_withoutAll;
      }
      else if (val == "AU")
      {
         stateCodes = AU_states_withoutAll;
      }
      else if (val != "")
      {
         stateCodes = new Array(new Option("",""));
      }

      if (fieldName == "country")
      {
         setOptions(form.state, stateCodes);
      }
      else if (fieldName == "billingCountry")
      {
         setOptions(form.billingState, stateCodes);
      }
   }

   /**
    * When a guest selects a state, we synch the other state box, if any, we change
    * the country to the appropriate country, and we changed the number of rooms
    * drop-down according to the country
    */
   function changeOfState(aSelect) {
      var val = new String(aSelect.options[aSelect.selectedIndex].value);
      var form = aSelect.form;

      // synch any existing state dropdown
      if (form.stateCode != null) {
         form.stateCode.selectedIndex = aSelect.selectedIndex;
      }

      if (form.nearState!= null) {
         form.nearState.selectedIndex = aSelect.selectedIndex;
      }

      // change the country dropdown(s) to the proper value
      displayCountry(aSelect);

      // refresh the number of rooms dropdown based on country
      refreshNumRoomsDropdown(form.countryCode);

      // if the Guest selected one of the country headers in the state drop-down, complain
      if (val == "US" || val == "CA" || val == "AU") {
         window.alert("For Canada, the United States and Australia,\n please select a State");
         aSelect.focus();
      }
      return;
   }

   /**
    * When a guest selects a country, we synch the other state box, if any,
    * we display the appropriate list of states, and we display the
    * number of rooms drop-down appropriate to the country
    */
   function changeOfCountry(aSelect) {
      refreshStates(aSelect);
      refreshNumRoomsDropdown(aSelect);
      var form = aSelect.form;

      // synch any existing country dropdowns
      if (form.countryCode != null) {
         form.countryCode.selectedIndex = aSelect.selectedIndex;
      }

      if (form.nearCountry != null) {
         form.nearCountry.selectedIndex = aSelect.selectedIndex;
      }
   }

    /**
     * called to keep the city fields the same
     */
    function synchCity(aTextbox)
    {
         var form = aTextbox.form;
         if (form.city != null) {
            form.city.value = aTextbox.value;
         }
         if (form.nearCity != null) {
            form.nearCity.value = aTextbox.value;
         }
         return true;
    }

   /**
    ****************************************************************************
    * functions supporting the main validation methods above
    ****************************************************************************
    */

   /* Displays the proper state drop-downs based on a country */
   function refreshStates(aSelect) {
      var stateCodes = new Array();
      var val = aSelect.options[aSelect.selectedIndex].value;
      var form = aSelect.form;

      if (val == "US") {
         stateCodes = US_states;
      }
      else if (val == "CA") {
         stateCodes = CA_states;
      }
      else if (val == "AU") {
         stateCodes = AU_states;
      }
      else if (val != ""){
         stateCodes = new Array(new Option("All",""));
      }

      setOptions(form.stateCode, stateCodes);

      if (form.nearState != null) {
         setOptions(form.nearState, stateCodes);
      }
   }

   /** Displays the proper country depending on a state */
   function displayCountry(aSelect) {
      var val  = aSelect.options[aSelect.selectedIndex].value;
      var form = aSelect.form;
      var idx = 0;

      if (val.indexOf("US_") == 0) {
      //if (isValueInOptionArray(val, US_states)) {
         idx = getIndex(form.countryCode, "US");
      }
      else if (val.indexOf("CA_") == 0) {
      // else if (isValueInOptionArray(val, CA_states)) {
         idx = getIndex(form.countryCode, "CA");
      }
      else if (val.indexOf("AU_") == 0) {
      //else if (isValueInOptionArray(val, AU_states)) {
         idx = getIndex(form.countryCode, "AU");
      }

      if (idx > 0)
      {
         form.countryCode.selectedIndex = idx;
         if (form.nearCountry != null) {
            form.nearCountry.selectedIndex = idx;
         }
      }
   }

	  function validateReservationChangeFormAll(form)
   {
      var cancel = "";
      var modifyRoom = "";
      var modifyBestExtra = "";
      var found = false;
      var comp_id = "";

      if (document.forms['reservationChangeForm'].elements["changesSelected"] != null)
      {
         // if you only have a one hotel reservation, we must assign the comp id value into the form as an array so we can access the other elements
         if(document.forms['reservationChangeForm'].elements['COMP_ID'].value != null && !document.forms['reservationChangeForm'].elements['COMP_ID'].length){


            comp_id = document.forms['reservationChangeForm'].elements['COMP_ID'].value;
           for (var i=1; i<20; i++)
            {
               cancel = "CANCEL_ROOM" + i + "_" + comp_id;
               modifyRoom = "MODIFY_ROOM" + i + "_" + comp_id;
               modifyBestExtra = "MODIFY_BEST_EXTRA" + i + "_" + comp_id;

               if ( (document.forms['reservationChangeForm'].elements[cancel] != null && document.forms['reservationChangeForm'].elements[cancel].checked) ||
                   (document.forms['reservationChangeForm'].elements[modifyRoom] != null && document.forms['reservationChangeForm'].elements[modifyRoom].checked) ||
                       (document.forms['reservationChangeForm'].elements[modifyBestExtra] != null && document.forms['reservationChangeForm'].elements[modifyBestExtra].checked) )
               {
                  found = true;
               }
	}



         }else{

	// start logic to handle muliple room
	for(var j=0; j < document.forms['reservationChangeForm'].elements['COMP_ID'].length; j++){
            comp_id = document.forms['reservationChangeForm'].elements['COMP_ID'][j].value;
            for (var i=1; i<20; i++)
            {
               cancel = "CANCEL_ROOM" + i + "_" + comp_id;
               modifyRoom = "MODIFY_ROOM" + i + "_" + comp_id;
               modifyBestExtra = "MODIFY_BEST_EXTRA" + i + "_" + comp_id;

               if ( (document.forms['reservationChangeForm'].elements[cancel] != null && document.forms['reservationChangeForm'].elements[cancel].checked) ||
                   (document.forms['reservationChangeForm'].elements[modifyRoom] != null && document.forms['reservationChangeForm'].elements[modifyRoom].checked) ||
                       (document.forms['reservationChangeForm'].elements[modifyBestExtra] != null && document.forms['reservationChangeForm'].elements[modifyBestExtra].checked) )
               {
                  found = true;
                  break;
               }
            }
         }
	// end logic to handle muliple room

	}

         if (found == false)
         {
           window.alert("There are no modify options selected, please reselect.");

            return false;
         }
         for(var j=0; j < document.forms['reservationChangeForm'].elements['COMP_ID'].length; j++){
            comp_id = document.forms['reservationChangeForm'].elements['COMP_ID'][j].value;

            for (var i=1; i<20; i++)
            {
               cancel = "CANCEL_ROOM" + i + "_" + comp_id;
               modifyRoom = "MODIFY_ROOM" + i + "_" + comp_id;
               modifyBestExtra = "MODIFY_BEST_EXTRA" + i + "_" + comp_id;

               if (document.forms['reservationChangeForm'].elements[cancel] != null && document.forms['reservationChangeForm'].elements[cancel].checked)
               {
                  if ( (document.forms['reservationChangeForm'].elements[modifyRoom] != null && document.forms['reservationChangeForm'].elements[modifyRoom].checked) ||
                      (document.forms['reservationChangeForm'].elements[modifyBestExtra] != null && document.forms['reservationChangeForm'].elements[modifyBestExtra].checked))
                  {
                      window.alert("Cancel Room cannot be combined with the other modify options, please reselect.");

                     return false;
                  }
               }
            }
         }
      }
      return true;
   }

	function changeOfShortenStay(aSelect, bSelectName)
   {
      document.forms['reservationChangeForm'].elements[bSelectName].selectedIndex = aSelect.selectedIndex;
      return;
   }

   /** refreshes the numRooms dropdown according to the country selected */
   function refreshNumRoomsDropdown(aSelect) {
      var form = aSelect.form;
      if (form.numRooms != null) {
         var opt = new Array();
         var val = aSelect.options[aSelect.selectedIndex].value;
         var numRoomsSelect = form.numRooms;
         var currentSelect = form.numRooms.selectedIndex;
         if (val == "" || val == "none")
         {
            setOptions(form.numRooms, numRooms_noCountry);
            form.numRooms.selectedIndex = 0;
         }
         
         else
         {
            setOptions(form.numRooms, numRooms_max3);
         }
         if (form.numRooms.length > (currentSelect + 2) && !(val == "" || val == "none"))
         {
            form.numRooms.selectedIndex = currentSelect;
         }
      }
   }


      function changeOfProfileState(aSelect, fieldName)
   {
      var val = new String(aSelect.options[aSelect.selectedIndex].value);
      var form = aSelect.form;

      // synch any existing state dropdown
      if (fieldName == "state")
      {
         form.state.selectedIndex = aSelect.selectedIndex;
      }

      // change the country dropdown(s) to the proper value
      displayProfileCountry(aSelect, fieldName);

      // if the Guest selected one of the country headers in the state drop-down, complain
      if (val == "US" || val == "CA" || val == "AU")
      {
         window.alert("For Canada, the United States and Australia,\n please select a City or a State");
         aSelect.focus();
      }
      return;
   }

  /** Displays the proper country depending on a state */
   function displayProfileCountry(aSelect, fieldName)
   {
      var val  = aSelect.options[aSelect.selectedIndex].value;
      var form = aSelect.form;
      var idx = 0;

      if (val.indexOf("US_") == 0)
      {
         idx = getIndex(form.country, "US");
      }
      else if (val.indexOf("CA_") == 0)
      {
         idx = getIndex(form.country, "CA");
      }
      else if (val.indexOf("AU_") == 0)
      {
         idx = getIndex(form.country, "AU");
      }

      if (idx > 0)
      {
         if (fieldName == "state")
         {
            form.country.selectedIndex = idx;
         }
      }
   }

	/**
	 * AR0755B: Profile GCCI Sign-Up:: As we have removed second country drop down on the register for a profile page,
	 * we are taking the country value from first country drop down i.e. native country.
	 */
   function refreshProfileStates(aSelect, fieldName)
   {
      var stateCodes = new Array();
      var val = aSelect.options[aSelect.selectedIndex].value;
      var form = aSelect.form;

      if (val == "US")
      {
         stateCodes = US_states_withoutAll;
      }
      else if (val == "CA")
      {
         stateCodes = CA_states_withoutAll;
      }
      else if (val == "AU")
      {
         stateCodes = AU_states_withoutAll;
      }
      else if (val != "")
      {
         stateCodes = new Array(new Option("",""));
      }

         setOptions(form.state, stateCodes);

   }

	//AR0872: Function to compare size of CVV number
	function checkCvvLength(){
		if(document.getElementById("cvvNumber")){
			var cvvFieldSize = document.getElementById("cvvSize").value;
			var cvvFieldValue = document.getElementById("cvvNumber").value;
			var secureCodeValue = document.getElementById("hiddenSecureCode").value;
			// if field size is zero in DB then let user enter any number of numeric characters
			if(cvvFieldSize != 0){
				if(cvvFieldValue == null || cvvFieldValue == ""){
					addError("cvvNumber", "The Security Code is required.");
					return false;
				}else if(cvvFieldValue!= null && cvvFieldValue.length != cvvFieldSize ){
					addError("cvvNumber", "The Security Code must be "+cvvFieldSize+" digits.");
					return false;
				}else if(secureCodeValue == "" && secureCodeValue.length != cvvFieldSize ){
					secureCodeValue = cvvFieldValue;
					document.getElementById("hiddenSecureCode").value=cvvFieldValue;
					result = checkCVVCode(secureCodeValue);
					if(!result)	{
						addError("cvvNumber", "The Security Code must be "+cvvFieldSize+" digits.");
						return false;
					}
					return true;
				}else if(isNaN(secureCodeValue) && !isNaN(cvvFieldValue)){
					secureCodeValue = "";
					secureCodeValue = cvvFieldValue;
					document.getElementById("hiddenSecureCode").value=cvvFieldValue;
					result = checkCVVCode(secureCodeValue);
					if(!result)	{
						addError("cvvNumber", "The Security Code must be "+cvvFieldSize+" digits.");
						return false;
					}
					return true;
				}else if(!isNaN(cvvFieldValue) && cvvFieldValue.length == cvvFieldSize ){
					result = checkCVVCode(cvvFieldValue);
					document.getElementById("hiddenSecureCode").value=cvvFieldValue;
					if(!result)	{
						addError("cvvNumber", "The Security Code must be "+cvvFieldSize+" digits.");
						return false;
					}
					return true;
				}else{
				      for (i = 0; i < cvvFieldValue.length; i++)
				      {
		                  if((cvvFieldValue.charAt(i) != '*' && isNaN(cvvFieldValue.charAt(i)))) {
							addError("cvvNumber", "The Security Code must be "+cvvFieldSize+" digits.");
							return false;
		                  }
				    }
					result = checkCVVCode(secureCodeValue);
					if(result == false) {
						addError("cvvNumber", "The Security Code must be "+cvvFieldSize+" digits.");
						return false;
			         }
			         return true;
				}
			}
		}
		return true;
	}
   /**
    * AR0872:DS:Called on form submit to ensure that the CVV field number only contains valid
    * characters.
    */
   function checkCVVCode(secureCodeValue)
   {
	var cvvFieldSize = document.getElementById("cvvSize").value;
	if(isNaN(secureCodeValue) || secureCodeValue.length != cvvFieldSize){
		result = false;
	}
	else{
      for (i = 0; i < secureCodeValue.length; i++)
      {
             if((secureCodeValue.charCodeAt(i) >=48 && secureCodeValue.charCodeAt(i) <= 57)||
                   (secureCodeValue.charCodeAt(i) >=36 && secureCodeValue.charCodeAt(i) <= 40)||
                   (secureCodeValue.charCodeAt(i) >= 96 && secureCodeValue.charCodeAt(i) <= 105)) {
                           result = true;
             }
             else {
               return false;
             }
      }
	 }
     return result;
   }


   function validateCAANumber(form)
	{
		if(form.CAACheck.checked){
			if(form.newUserCAANumber.value.length==0)
			{
				addError(form.newUserCAANumber.name, "Please enter a valid CAA membership number.");
				return false;
			}
		
			if(form.newUserCAANumber.value.length<16 || form.newUserCAANumber.value.length>16)
			{
				addError(form.newUserCAANumber.name, "Please enter a valid CAA membership number.");
				return false;
			}	
			if(form.newUserCAANumber.value.length==16){
				if(isNaN(form.newUserCAANumber.value)){
					addError(form.newUserCAANumber.name, "Please enter a valid CAA membership number.");
					return false;
				}
			}
		}else{
			if(form.newUserCAANumber.value.length>0 && form.newUserCAANumber.value.length!=16)
			{
				addError(form.newUserCAANumber.name, "Please enter a valid CAA membership number.");
				return false;
			}
			if(form.newUserCAANumber.value.length==16){
				if(isNaN(form.newUserCAANumber.value)){
					addError(form.newUserCAANumber.name, "Please enter a valid CAA membership number.");
					return false;
				}
			}
		}
		
		
	return true;
	}
	function validateRegExpPwdReviewPage(entered)
	{
	      var strValue = Trim(entered);
	      var regex = /^(?=^[^\s]{8,15}$)(?=.*\d.*)(?=.*[a-zA-Z].*).*$/;
	      if(!regex.test(strValue)){
	            return false;
	      }
	      /*var iChars = "!@#$%^&*()+=-[]\\\';,./{}|\":<>?";
	  		for (var i = 0; i < strValue.length; i++) {
	  	    if(iChars.indexOf(strValue.charAt(i)) != -1) {
	  			return false;
	  		}
	  	  }*/
	  		var pass = entered;
	  		 for(var i=0;i<pass.length;i++){
	  		  	  if(pass[i]==' '){
	  				return false;
	  			}
	  		}
	}
	//To allow only english alphabet, numbers. SplChars, InternationalChars are not allowed
	//a=97 z=122 A=65 Z=90 0=48 9=57 _=95
	function validatePasswordAscii(entered)
	{
	      var strValue = Trim(entered.value);
	      for (var i = 0; i < strValue.length; i++) {
	    	var asciCode = strValue.charCodeAt(i);
	  	    if( (asciCode>96 && asciCode<123) || (asciCode>64 && asciCode<91) || (asciCode>47 && asciCode<58) || asciCode==95)  {
	  			// Valid CHars
	  		}
	  	    else {
		  	    return false;
	  	    }
	  	  }
	 }
	//a=97 z=122 A=65 Z=90 0=48 9=57 @=64 .=46 _=95 -=45
	function validateEmailAscii(entered, errMsg)
	{
	      var strValue = Trim(entered.value);
	      for (var i = 0; i < strValue.length; i++) {
	    	var asciCode = strValue.charCodeAt(i);
	  	    if( (asciCode>96 && asciCode<123) || (asciCode>64 && asciCode<91) || (asciCode>47 && asciCode<58) || asciCode==64 || asciCode==46 || asciCode==95 || asciCode==45)  {
	  			// Valid CHars
	  		}
	  	    else {
		  	  	addError(entered.name, errMsg);
		  	    return false;
	  	    }
	  	  }
	 }
	 
	 
	 //AR0889:SinghS:07/26/2012: Added the method for Logging through Ajax call.
    function invokeLogging(nights,form) {    	
    	var arrDate = form.arrDate.value;
    	var totalRooms = document.getElementById("totalRooms").value;
    	var destination = document.getElementById("hotelLocation").value;
    	var propertyCode = "";
    	var propertyMaxLos = "";
    	    	
    	propertyCode="05425"; 
    	propertyMaxLos="30";    	
    	     
        var LOG_URL = "/bestwestern/LogStay.do?";
        var paramList="nights="+nights+"&totalRooms="+totalRooms+"&arrDate="+arrDate+"&destination="+destination+"&propertyCode="+propertyCode+"&propertyMaxLos="+propertyMaxLos;
        return $
    	.ajax({
        	
    		url : LOG_URL+encodeURI(paramList),
    		cache: false,
    		async : !$.browser.safari,
    		success : function(data) {   			
    		},
    		error : function(objAJAXRequest, strError) {         				
    		}
    	});
    }
</script> 
        <!-- End $Workfile$ --> 
        <h2><strong>Edit</strong> your search</h2> 
        <input type="hidden" name="jsCheck" value="true" id="jsCheck"> 
        <input type="hidden" name="hotelLocationNotChg" value=""> 
        <input type="hidden" name="stateVal" value=""> 
        <div class="inner"> 
         <div class="formField destinationField"> 
          <label for="hotelLocation" id="hotelLocationLBL">Destination</label> Carpinteria,California,United States
          <br> 
          <input id="hotelLocation" name="hotelLocation" class="noSearch" type="hidden" value="Carpinteria,California,United States " autocomplete="OFF" readonly> 
          <span id="hotelLocationSPN" class="error" style="display:none;"></span> 
         </div> 
         <div style="height:100%;overflow:hidden;display:inline;"> 
          <div id="smartsearch"> 
           <!-- ul id="city">
										</ul>
										<ul id="airport">
										</ul>
										<ul id="landmark">
										</ul--> 
          </div> 
         </div> 
         <!--RecentSearches Starts Here--> 
         <div class="recentSearches selectList"> 
          <a href="" class="openSelectList">Recent Searches</a> 
          <ul> 
          </ul> 
         </div> 
         <!--RecentSearches Ends Here--> 
         <div class="formRow"> 
          <div class="bwStayDatesField clearfix"> 
           <div class="formField dateField"> 
            <label for="checkInDate">Check In</label> 
            <input id="checkInDate" class="noFocus" size="6" type="text" name="arrDate" value="03/02/2015"> 
           </div> 
           <div class="formField dateField"> 
            <label for="checkOutDate" id="depDateLBL">Check Out</label> 
            <input id="checkOutDate" class="noFocus" type="text" size="6" name="depDate" value="03/03/2015"> 
           </div> 
          </div> 
         </div> 
         <span id="depDateSPN" class="error" style="display:none;"></span> 
         <div class="formField"> 
          <a class="bwAvailabilityCalendar">Dates are flexible</a> 
         </div> 
         <!--RoomOcupancy Starts Here (roomOcupancy.jsp)--> 
         <div class="formRow"> 
          <!-- room Occupancy start --> 
          <script type="text/javascript">    

    var roomsLabel="Room(s)";
    var roomLabel="Room ";
    var adultsLabel="Adult(s)";
    var childrenLabel="Child(ren)";
    var childAgeLabel="Age of Child ";
     
    var selectedNumberOfRooms="1";
    //AR1103:03242014:sangalt:Declared the groupFlow flag to use its value in jquery.bwroomselect.js:started
    var groupFlow="false";
    //AR1103:03242014:sangalt:Declared the groupFlow flag to use its value in jquery.bwroomselect.js:ended
	if(selectedNumberOfRooms==0){
		selectedNumberOfRooms=1;
	}

	var selectedAdultCount="1";	
	if(selectedAdultCount==0){
		selectedAdultCount=1;
	}	
	
	var selectedChildrenCount="0";
		
	var adultsPerRoom=new Array(selectedNumberOfRooms);
	   
		adultsPerRoom[0] = "1";		
	
	
	
	var childrenPerRoom=new Array();
	

	 
	var childrenAge = new Array();
	for(i=0;i<selectedNumberOfRooms;i++){
		childrenAge[i]= new Array();
		if(i==0){
					
		}else if(i==1){
						
		}else if(i==2){
						
		}
		
	}
</script> 
          <div id="roomSelectFieldContainer" class="formField"> 
           <div id="roomSelectField" style="display: block;margin-top:5px;"></div> 
          </div> 
          <!-- room Occupancy end --> 
         </div>&nbsp; 
         <!--RoomOcupancy Ends Here--> 
         <!--Child Policy Starts Here--> 
         <br>
         <br>
         <br>
         <br> 
         <p class="cpolicy"><a class="bwChildPolicyEditSearch" id="Child Policy_Children 17 And Under Are Free In Room With One Paying Adult In Existing Bedding." href="#">Child Policy</a></p> 
         <div id="childPolicy" class="closeOnSubmit"></div> 
         <!--Child Policy Ends Here--> 
         <!--PromotionCodes Starts Here--> 
         <div class="formField promotionCode"> 
          <label class="invisible">Special Rates</label> 
          <div class="selectList"> 
           <script type="text/javascript">
	var aaaRate='AAA';
	var aarpRate='AARP';
	var fxRate='FX';
	var gmRate='GMRATE';
	</script> 
           <input type="text" readonly id="spname" class="openSelectList" value="Special Rates"> 
           <div class="inputIcon"></div> 
           <ul> 
            <li class="label">Special Rates</li> 
            <li> <input type="radio" id="aaaRadio" name="specialRate" value="AAA"> <label class="sprate" id="AAA/CAA Rate_AAA/CAA automobile program members save 10% or more at all Best Western hotels in North America with a qualified stay.  Discounts may vary outside of North America, please refer to rate plan details when booking your reservation for additional information.  Guest must show their membership card at check-in.  Rate is subject to availability.">AAA/CAA Rate</label> </li> 
            <li> <input type="radio" id="aarpRadio" name="specialRate" value="AARP"> <label class="sprate" id="AARP/Senior Rate_AARP/Senior members meeting local hotel age requirements save 10% or more at all Best Western participating hotels worldwide. Discounts may vary.  Please refer to rate plan details when booking your reservation for additional information.  Rate is subject to availability.  ">AARP/Senior Rate</label> </li> 
            <li> <input type="radio" id="fxRadio" name="specialRate" value="FX"> <label class="sprate" id="Best Western Rewards Points_This rate is available to Best Western Rewards members who have earned enough points to redeem.">Best Western Rewards Points</label> </li> 
            <li> <input type="radio" name="specialRate" value="" checked id="corporateCodeButton"> <label class="sprate" id="Corporate Rate_Corporate identification numbers are issued to those customers who have set up a special account direct with Best Western. Enter your qualifying Corporate ID number to receive your special corporate rate.">Corporate Rate</label> <input id="corporateRateCode" type="text" name="corpid" size="30%"> <script type="text/javascript">
						document.getElementById("spname").value = "Corporate Rate";
						document.getElementById("corporateRateCode").value = "01562060";
					</script> </li> 
            <li> <input type="radio" id="gmRadio" name="specialRate" value="GMRATE"> <label class="sprate" id="Government/Military Rate_Current and former Government employees, as well as active duty/retired Military personnel can save at participating Best Western hotels. Please refer to rate plan details when booking your reservation for additional information. Guest must show their official ID at check-in. Rate is subject to availability.">Government/Military Rate</label> </li> 
            <li> <input type="radio" name="specialRate" value="" id="promoCodeButton"> <label class="sprate" id="Promotional Rate_Please enter a valid promo code in the Promotion Code field to receive a rate discount, bonus or incentive offer.">Promotional Rate</label> <input id="promoRateCode" type="text" name="promoCode" size="30%"> </li> 
            <li> <input type="radio" name="specialRate" value="none" id="noneButton"> <label class="none">None</label> </li> 
           </ul> 
           <input type="hidden" name="specialRate" id="hdnaarpRadio" value=""> 
           <div id="spRateDetail" class="closeOnSubmit"></div> 
          </div> 
         </div> 
         <!--PromotionCodes Ends Here--> 
         <a id="searchBtn" class="button btnSubmit">Search</a> 
         <input type="hidden" name="submitFromSelectRoom" value="true"> 
         <input type="hidden" name="searchType" value="ADVANCED"> 
         <input type="hidden" name="suppressSSLPopup" value="true"> 
         <input type="hidden" name="searchLat" id="latitudeHdn" value="34.402015"> 
         <input type="hidden" name="searchLong" id="longitudeHdn" value="-119.525735"> 
        </div> 
       </form> 
      </div> 
      <div class="section" id="recentViewedAndSearch" style="display: none;"> 
       <div id="recentlyViewedSection" style="display: none;"> 
        <h2><strong>Recently</strong> Viewed</h2> 
        <div class="inner"> 
         <ul id="recentlyViewed"> 
         </ul> 
        </div> 
       </div> 
       <div class="noBorderBox" id="recentSearchesBox"> 
        <div class="recentSearches selectList"> 
         <a href="" class="openSelectList">Recent Searches</a> 
         <ul style="display: none;"> 
         </ul> 
        </div> 
       </div> 
      </div> 
      <div class="section"> 
       <h2><strong>Reservations</strong></h2> 
       <strong class="phoneCallOut"> CALL 1-800-780-7234 </strong> 
       <div class="box"> 
        <a href="http://www.bestwestern.com/reservations/hotels/worldwide-phone-numbers.asp?m=1&amp;nonav=1&amp;suppressSSLPopup=true&amp;language=en_US" class="loadDialog">Worldwide Reservations Numbers</a> 
       </div> 
       <!-- End: $Workfile$ --> 
      </div> 
      <!-- AR00850 changes, added nawalan --> 
      <!-- Start: $Workfile$ --> 
      <div> 
       <!-- <div align="center" width="100%" border="0" cellpadding="0" cellspacing="0">	<a href="http://www.bestwestern.com/rewards/offers/seasonal.asp?season=fall&ptype=base&cm_re=BookingPath-_-LeftImage-_-FallPromo">		<img src="https://book.bestwestern.com/props/clevel/bw-booking-path.jpg" border="0" NOSEND="1">	</a></div> --> 
      </div> 
      <!-- AR00850 changes, ended nawalan --> 
     </div> 
     <script language="JavaScript" type="text/javascript">
var isMapOpenOnSelectHotel = false;	

function formvalidation(thisform)
{
	with (thisform)
	{
		if(document.getElementById("groupVar").value=="true")
		{
			thisform.action=""+"?group=true";
		}else if(document.getElementById("meetingVar").value=="true")
		{
			thisform.action=""+"?meetings=true";
		}else{
			thisform.action="";
		}
		thisform.submit();
	}
}

function clearcode(thisform) {
    thisform.code.value="";
}
// AS:QT1348494 - Start LRG Banner Display -->
function openWin(URL)
	{
		window.open(URL);
		return false;
	}


// AR0850: Map Implementation Code STARTS -->




function showHideMap(divid){ 	
    // AR0755B: Hotel Search Results:: To create the list of property codes to be displayed on map:
    //alert("showHideMap:"+divid);
	var elements = document.geoMappingForm.elements;
	var mapCodes = '';
	var first = 'true';
	hotelsOnAPage=0;
	for (var i=0;i<elements.length;i++){
		if(elements[i].name.indexOf('code') != -1){				
			if( elements[i].value != ""){
			     ++hotelsOnAPage;
			     
				if (first == 'true'){
					mapCodes = elements[i].value;
					first = 'false';
				}else{
					mapCodes = mapCodes +':'+elements[i].value;
				 }
			}
		}
	}	
	// AR0755B: Hotel Search Results:: To create Map-point URL appended with list of property codes created above:
	var mapURL = "http://maps.bestwestern.com/BestWestern/MapResults.aspx?BID="+mapCodes;
	
    if(divid == 'showMap'){  
    	 //	alert("showHideMap"); 
	   		isMapOpenOnSelectHotel =true;
	     	/*for (var j=1; j<=hotelsOnAPage;j++) {
	     		document.getElementById(j).style.display='inline';			   	
		   	} */
	     //	alert("here1");	
	     	$("#largeHotelMap").show();
	     //	alert("here2");
	     	$("#leftColMap").hide();  	
	     	$(".sectionMap").hide();
	     	  //	alert("here3");
     (function(d){
     			/*Step1 => Store the URL for  the map in hidden field */
				var field = document.createElement("input");
				field.setAttribute("type","hidden");
				field.setAttribute("value",mapURL);
				field.setAttribute("id","mapURL");
				document.getElementById("mapForm").appendChild(field);

     			/*Step2 =>Create the row to display iframe in div */
		        var div=d.getElementById("mapDiv");
	            div.style.height = "360px";
	            div.style.width="100%";
		        
	            /*Step3 =>Create the iframe to display map */
				var ifr=d.createElement("iframe");	         
	            ifr.setAttribute("id", 'mapIFrame');
		        ifr.setAttribute("frameborder", '0');
				ifr.setAttribute("scrolling", 'no');
				ifr.setAttribute("width", '100%');
				ifr.setAttribute("height", '360px');
				var iframe = d.body.appendChild(ifr);				
				div.appendChild(iframe);
				
				/*Step4 =>Attached the script file in head section of document */
				doc = iframe.contentWindow.document;
				doc.open().write('<body onload=" var d = document;d.getElementsByTagName(\'head\')[0].appendChild(d.createElement(\'script\')).src =\'.\/javascript\/DynamicAsynchIframe.js\'" >');
				doc.close(); 
				//alert("here4");
	})(document);	 		  	
			
		}else {	
			isMapOpenOnSelectHotel =false; 			
			/*for(var k=1; k<=hotelsOnAPage;k++) {
				document.getElementById(k).style.display="none";
			}*/
			$("#largeHotelMap").hide();
			$("#leftColMap").show();
	     	$(".sectionMap").show();
			document.getElementById('largeHotelMap').innerHTML = "<a class='closeButton' onclick=\"javascript:showHideMap('hideMap')\">"+"Close"+"<img src='images/icon-close.gif' alt='' /></a><form id='mapForm'></form><div id='mapDiv' cellpadding='0' cellspacing='0' border='0' width='' height=''></div>";
	}
	return false;
 }  
</script> 
     <!-- Start $Workfile$ --> 
     <script language="javascript" type="text/javascript">
    	var doubleClick;
    	//AR0850
    	var vfmMainURL='http://images.bestwestern.com/bwi/main.html';
    	var vfmLanguageCode='en';
    	var propertyBW='';
		function submitForm(){
		    var pass=true;

		    var searchType = "";
		    if(searchType!="Location"){
		      pass = validateAdvSearch(document.selectHotelForm,searchType);

		   }

		    if(pass==true){
			    if(document.selectHotelForm.pageNumber.value=="")
			      document.selectHotelForm.pageNumber.value=1;

			    if(validateSelectHotelFormOld(document.selectHotelForm))
			      document.selectHotelForm.submit();


			   }
		}

		function submitFormWithResetFormToOriginalValues(){
			document.selectHotelForm.m_resetFormToOriginalValues.value='true';
		    if(document.selectHotelForm.pageNumber.value=="")
			      document.selectHotelForm.pageNumber.value=1;

		     /* Added by Tasneem*/
		     // alert(document.getElementsByName("amenities"));
		     var list_selectedcheck= new Array();
		     var list_selectedcheckDesc= new Array();
			 var j=0;

			      var x=document.getElementsByName("amenities");
			      for(i=0;i<x.length;i++)
			      {
				      if(x[i].checked)
				      {
				    	  list_selectedcheck[j] = x[i].value;
					      j++;
					  }
			      }
			      var z=0;
			      var y;
			      for(ii=1;ii<=3;ii++)
			      {
				      y=document.getElementById("descriptors"+ii);
				      if(y.checked)
				      {
				    	  list_selectedcheckDesc[z] = y.value;
					      z++;
					  }
			      }
		      document.selectHotelForm.amenityDummy.value=list_selectedcheck;
		      document.selectHotelForm.descriptorDummy.value=list_selectedcheckDesc;
		      document.selectHotelForm.jsCheck.value = "true";
	    	  document.selectHotelForm.submit();

		}

		function submitFormWithInterstitial(latitude, longitude,hotelLocation){
			var arr=new Array();
			var list_selectedcheck= new Array();
			var list_selectedcheckDesc= new Array();
		    var pass=true;//Commented below line because there is nothing to validate now.
		    //search has already been made on destination.Need to refine now based on amenities
		    //Commented by Rama - 0850
		    //  pass = validateSelectHotelFormAll1(document.selectHotelForm);

		   if(pass==true){

			    if(document.selectHotelForm.pageNumber.value=="")
			      document.selectHotelForm.pageNumber.value=1;
			  		//Added by Tasneem AR0850 Starts
			      var j=0;

			      var x=document.getElementsByName("amenities");
			      for(i=0;i<x.length;i++)
			      {
				      if(x[i].checked)
				      {
				    	  list_selectedcheck[j] = x[i].value;
					      j++;
					  }
			      }
			      var z=0;
			      var y;
			      for(ii=1;ii<=3;ii++)
			      {
				      y=document.getElementById("descriptors"+ii);
				      if(y.checked)
				      {
				    	  list_selectedcheckDesc[z] = y.value;
					      z++;
					  }
			      }
			      document.selectHotelForm.amenityDummy.value=list_selectedcheck;
			      document.selectHotelForm.descriptorDummy.value=list_selectedcheckDesc;
			      //Added by Tasneem AR0850 ends
				  //toggleDisplayNoParams();	*/
				  //ADDED BELOW lines by Rama = get latitude and longitude for searching
				  document.selectHotelForm.jsCheck.value = "true";
				  document.selectHotelForm.searchLat.value = latitude;
				  document.selectHotelForm.searchLong.value =longitude;
				  document.selectHotelForm.hotelLocation.value =hotelLocation;
			      document.selectHotelForm.submit();
		    }
		}

		function toggleDisplayNoParams()
		{
			setStyle('container', 'none');
			setStyle('interstl', 'block');
		}

		function setStyle(objId, style)
		{
			if (navigator.userAgent.indexOf("Opera") != -1)
			{ //Opera
				styleObj = eval('document.all.' + objId);
				styleObj.style.display = style;
			}
			else if (document.getElementById)
			{ //Netscape 6 & IE 5
				myObj = document.getElementById(objId);
				myObj.style.display = style;
			}
		}

		function validateSelectHotelFormOld(form){
			if(form.countryCode==""){
			  alert("Please select a country.");
			  return false;
		}

		if(document.selectHotelForm.groupVar.value=="")
		{
			if(!isDate(document.selectHotelForm.arrDate.value) || !isDate(document.selectHotelForm.depDate.value)){

				return false;
			}
			//new validation for date

			arrDate = new Date(Date.parse(form.arrDate.value));
			depDate = new Date(Date.parse(form.depDate.value));
			//alert(days_between(depDate, arrDate));
			if(days_between(depDate, arrDate)< 0){

				alert("Your Check-out date must occur after your Check-in date.  Please revise your dates and try again.");
				changeDep(form);
				return false;
			}
			if(days_between(depDate, arrDate)== 0){

				alert("Check-in date is equal to the Check-out date. Please enter a valid date.");
				changeDep(form);
				return false;
			}
		}
		return true;

		}// End of validate selectHotelForm.

		function setSortValue(val){
		    document.selectHotelForm.sortBy.value=val;
		    submitForm();
		}
		function setAvailOnlyValue(val){
		    document.selectHotelForm.availableOnly.value=val;
		    submitForm();
		}

		function setSortValueWithResetFormToOriginalValues(obj){

		    document.selectHotelForm.sortBy.value=obj.value;
			submitFormWithResetFormToOriginalValues();
		}

		function setAvailOnlyValueWithResetFormToOriginalValues(obj){


			if(obj.checked){
		    	document.selectHotelForm.availableOnly.value=true;
			}
		    else{
		    	document.selectHotelForm.availableOnly.value=false;
			}
		    submitFormWithResetFormToOriginalValues();

		}

		function setDisplayAllHotelsValueWithResetFormToOriginalValues(val){
		    document.selectHotelForm.displayAllHotels.value=val;
		    submitFormWithResetFormToOriginalValues();
		}

		// AR0790: Setting ratePlan displayed on 'RatesFrom' box - to display the same on Availability Calendar.
		function goToSelectRoom(avilableStatus,propertyCode,pageNumber,stdRateFlag, ratePlanForCalendar, minRateOccupancy) {
		    document.selectHotelForm.availStatus.value=avilableStatus;
		    document.selectHotelForm.propertyCode.value=propertyCode;
		    document.selectHotelForm.ratePlanForCalendar.value=ratePlanForCalendar;
		    document.selectHotelForm.pageNumber.value=pageNumber;
		    document.selectHotelForm.jsCheck.value=true;
		    document.selectHotelForm.srcPage.value="selectHotel"; //AR0850:For Select Room page integration from Select Hotel
		    document.selectHotelForm.action="selectRoom.do?stdRateFlag="+stdRateFlag;
		    document.selectHotelForm.hotelLocationNotChg.value=true;
			document.selectHotelForm.minRateOccupancy.value=minRateOccupancy;
		    if(preventDoubleClick()){
		    	submitForm();
			}




		}

		function switchPage(pageNum){

			document.selectHotelForm.pageNumber.value=pageNum;
			submitForm();
		}


		function switchPageWithResetFormToOriginalValues(pageNum,checkType){
			// START TR#002789
			if(checkType=="group")
			{
				document.selectHotelForm.resetGroup.value="group";
			}
			// END TR#002789
			if(document.hotelPageForm.hotelPageSize.value == 0){
				document.selectHotelForm.pageNumber.value=0;
				document.selectHotelForm.hotelPageSize.value=0;
			}else{
				document.selectHotelForm.pageNumber.value=pageNum;
				document.selectHotelForm.hotelPageSize.value=document.hotelPageForm.hotelPageSize.value;
			}
			submitFormWithResetFormToOriginalValues();
		}

   	 function launch(newURL, newName, newFeatures, orgName) {
	   var remote = open(newURL, newName, newFeatures);
	   if (remote.opener == null)
	     remote.opener = window;
	   remote.opener.name = orgName;
	   return remote;
	 }

	 function launchRemote(propCode,distance, searchType) {
	 var url = "/bestwestern/productInfo.do?propertyCode="+propCode+"&distanceFromCity="+distance+"&advSearchByType="+searchType;
	 myRemote = launch(url, "myRemote", "height=500,width=600,channelmode=0,dependent=0,directories=0,fullscreen=0,location=0,menubar=0,resizable=0,scrollbars=yes,status=0,toolbar=0", "myWindow");
	 }

	 /* AR0850:Starts Modified For Displaying the VFM photo Gallery */
 	function launchRemoteUrlForSeo(propCode) {
		var wbeContextPath = '/bestwestern'
			var url = "";
 	 		url=vfmMainURL+"?pid="+propertyBW+propCode+"&lang="+vfmLanguageCode;
		 myRemote = launch(url, "myRemote", "height=405,width=700,channelmode=0,dependent=0,directories=0,fullscreen=0,location=0,menubar=0,resizable=0,scrollbars=yes,status=0,toolbar=0", "myWindow");
	 }
 		function launchVfmUrl(propCode){
 		var	launchURL="<iframe src="+vfmMainURL+"?pid="+propertyBW+propCode+"&lang="+vfmLanguageCode+" height='393' width='694' scrolling='no'></iframe> ";
 		document.getElementById("vfmImg").innerHTML=launchURL;
		 }
 		 /* AR0850:End Modified For Displaying the VFM photo Gallery */
  /* AR0850: [AT]Starts Modified For Trip Advisor URL */

	function launchTripAdvisorURL(propCode,language) {
		if(language=="fi-FI"){
			language="en_US";
		}
		
		var tripAdvisorURL = 'http://www.tripadvisor.com/WidgetEmbed-cdspropertydetail?';
	    tripAdvisorURL += "locationId="+propCode+"&partnerId=33bfadafd0df479786a69b0c40037692";
	    tripAdvisorURL += "&display=true&lang="+language;
	    myRemote = launchTripAdvisorWndow(tripAdvisorURL, "myRemote", "height=500,width=600,channelmode=0,dependent=0,directories=0,fullscreen=0,location=0,menubar=0,resizable=0,scrollbars=yes,status=0,toolbar=0", "myWindow");
	}

	function launchTripAdvisorWndow(newURL, newName, newFeatures, orgName) {
		var remote = open(newURL, newName, newFeatures);
		if (remote.opener == null)
		     remote.opener = window;
		remote.opener.name = orgName;
		return remote;
	}


	/* AR0850: [AT]End Modified For Trip Advisor URL */

 		/*
 		 function launchWndow(newName, newFeatures, orgName) {
		   var remote = open("", newName, newFeatures);
		   if (remote.opener == null)
		     remote.opener = window;
		   remote.opener.name = orgName;
		   return remote;
		 }

 		 */


	/*AR0755B:Compare Hotels-->Modified the goToProductInfo function for taking the control back to Comparison Layer
	from Property Page when user comes to Property Page from Comparison Layer*/

	function goToProductInfo(prodCode,isGroup,srcPage,isMapOpen,selectedHotels){
		/*AR0790:TR11302:M.K.Mitesh:-->Modified goToProductInfo function to assign value blank to selectedHotels parameter in case it is null to avoid passing value as string "undefined".
		Value of selectedHotels parameter will be null if this function get called by clicking on more link present on select hotel page.
		*/
		if(selectedHotels == null){
			selectedHotels="";
		}
		var meeting = ''
  		if(meeting == 'true' || isGroup == 'true'){
  			var url = "/bestwestern/productInfo.do?propertyCode="+prodCode+"&group="+isGroup+"&srcPage="+srcPage+"&isMapOpen="+isMapOpen+"&selectedHotels="+selectedHotels;
			window.location=url;
	  		return;
  		}
	    document.selectHotelForm.propertyCode.value=prodCode;
	    document.selectHotelForm.pageNumber.value=0;
	    document.selectHotelForm.group.value=isGroup;
		document.selectHotelForm.action="productInfo.do?propertyCode="+prodCode+"&srcPage="+srcPage+"&isMapOpen="+isMapOpen+"&selectedHotels="+selectedHotels;
	    if(preventDoubleClick()){
	    	submitForm();
		}
	 }

/*
	function toggleInfo(iID, width, height, position, selectboxes, srcPage) {
		/*
			function for the info boxes
				call it with the width and height of the layer
				and the position if you want to position it
				left, right, top, bottom,
				topleft, topright, bottomleft, bottomright

			there is no way of placing it over select boxes
			so position and use with care
		*/
/*
		alert("Compare Hotel");

		if(srcPage == 'CompareLayer'){

				if(ie4){
				xMousePos = xMousePos ;
				yMousePos = yMousePos - document.body.scrollTop;
			}
			else if (ns4 || dom) {
		    //	xMousePos = xMousePos - positionLayer('true');
		    }

		}

		alert(position);
		var leftSub = 8, topSub = 8,
		leftBuffer = 8, topBuffer = 8,
		defaultWidth = 220, defaultHeight = 140;

		obj = getObject(iID);
		if (!obj)
			return;

		zPos++;

		if (!width)
			width = defaultWidth;

		if (!height)
			height = defaultHeight;

		width = width / 2;
		height = height / 2;

		if (position) {
			switch(position) {
				case "left" :
					leftSub = - width + leftSub;
					break;
				case "right" :
					leftSub = width - leftSub;
					break;
				case "top" :
					topSub = - height + topSub;
					break;
				case "bottom" :
					topSub = height - topSub;
					break;
				case "topleft" :
					leftSub = - width + leftSub;
					topSub = - height + topSub;
					break;
				case "topright" :
					leftSub = width - leftSub;
					topSub = - height + topSub;
					break;
				case "bottomleft" :
					leftSub = - width + leftSub;
					topSub = height - topSub;
					break;
				case "bottomright" :
					leftSub = width - leftSub;
					topSub = height - topSub;
					break;
			}
		} else {
			leftSub = width - leftSub;
			topSub = - height + topSub;
		}
		newLeft = ((xMousePos - width) + leftSub);
		newTop = ((yMousePos - height) + topSub);

		obj.style.left  = newLeft + "px";
		obj.style.top 	= newTop  + "px";

		if (obj.style.display == "block") {
			obj.style.display = "none";
			obj.style.zIndex = 0;
			if (selectboxes) {
				if(ie4)
					toggleSelectboxes(selectboxes,'show');
			}
			//toggleSelectboxes(selectboxes,'show');
		} else {
			obj.style.display = "block";
			obj.style.zIndex = zPos;
			if (selectboxes) {
				if(ie4)
					toggleSelectboxes(selectboxes,'hide');
			}
			//toggleSelectboxes(selectboxes,'hide');
		}
		//alert(obj.style.left + " " +obj.style.top);


	}
	*/

/*AR1001: Generate Property Overview page Url according to new URL Pattern*/
	function goToProductInfoNewURL(country,state,city,propName,prodCode,isGroup,srcPage,isMapOpen,selectedHotels){
		if(selectedHotels == null){
			selectedHotels="";
		}
		var wbeContextPath = '/bestwestern'
			var url="";
			 if(state == ""){
			 	 url = wbeContextPath+"/"+country+"/"+city+"-hotels/"+propName+"/Hotel-Overview.do?propertyCode="+prodCode+"&group="+isGroup+"&srcPage="+srcPage+"&isMapOpen="+isMapOpen+"&selectedHotels="+selectedHotels;
			 }else{
			 	 url = wbeContextPath+"/"+country+"/"+state+"/"+city+"-hotels/"+propName+"/Hotel-Overview.do?propertyCode="+prodCode+"&group="+isGroup+"&srcPage="+srcPage+"&isMapOpen="+isMapOpen+"&selectedHotels="+selectedHotels;
			 }
			 if(preventDoubleClick()){
				 window.location=url;
				 }
	 }

	 function submitDistanceCurrencyForm(){

	 	document.selectHotelForm.distanceFromCity.value=document.distanceCurrencyForm.distanceFromCity.value;
		submitForm();
	 }

	 function submitDistanceCurrencyFormWithAddrAndDates(){

		 	document.selectHotelForm.distanceFromCity.value=document.distanceCurrencyForm.distanceFromCity.value
			submitFormWithResetFormToOriginalValues();
	}
	 
	 function submitSortByFormWithAddrAndDates(){
	 	document.selectHotelForm.sortBy.value=document.sortByForm.sortBy.value;
	 	document.selectHotelForm.pageNumber.value="";
	 	submitFormWithResetFormToOriginalValues();
	 	//submitForm();
	 }

	function submitDistanceCurrencyFormWithRatePoint()
	{
	 	document.distanceCurrencyForm.searchUsingGCCIPoints.value="true";
	 	document.selectHotelForm.searchUsingGCCIPoints.value="true";
	 	document.selectHotelForm.gcciFlag.checked=true;
		submitFormWithResetFormToOriginalValues();
	}

	function submitDistanceCurrencyFormWithRatePoint1()
	{
	 	document.distanceCurrencyForm.searchUsingGCCIPoints.value="false";
	 	document.selectHotelForm.searchUsingGCCIPoints.value="false";
	 	document.selectHotelForm.gcciFlag.checked=false;
	 	// TODO: AR0790: SJ:
	 	document.selectHotelForm.ratePlanForCalendar.value=null; // TODO: AR0790
	 	//alert("2:"+document.selectHotelForm.ratePlan.value);
		submitFormWithResetFormToOriginalValues();
	}

	function validateAdvSearch(form,searchType){
	  var passed = true;
	  if(searchType=='Airport'){
			if((form.referencePoint == null || form.referencePoint.value == "") &&
				form.countryCode.options[form.countryCode.selectedIndex].value == "" &&
				form.stateCode.options[form.stateCode.selectedIndex].value == "" ){
				alert("Please Provide Airport Name/Code or Location.");
				passed = false;
			}
			else if((form.referencePoint != null && form.referencePoint.value != "") &&
				(form.countryCode.options[form.countryCode.selectedIndex].value != "" &&
				Trim(form.city.value) == "" && form.stateCode.options[form.stateCode.selectedIndex].value == "" )){
					//Nothing to do if this is the case.
			}
			else if((form.referencePoint != null && form.referencePoint.value != "") &&
				(form.countryCode.options[form.countryCode.selectedIndex].value != "" ||
				Trim(form.city.value) != "" )){
				alert("You can only Provide Airport Name/Code or Location.");
				passed = false;
			}
			else if((form.referencePoint == null || form.referencePoint.value == "") &&
				(form.countryCode.options[form.countryCode.selectedIndex].value != "" ||
				Trim(form.city.value) != "" )){
				/*passed = validateCountryState1(form);*/
			}
	  }

	  return passed;
	}

	  /******Method to validate selectHotelForm******/
	function validateSelectHotelFormAll1(form) {
		//alert("Inside validateSelectHotelFormAll1()");
      var passed = true;
      
      // the Struts-Validator dynamically generated validation
      	

		

		
		
		


      // the 'custom' validations below

	
     if (passed)
      {
         passed = validateArrivalAndDepDate(form);
      }
	

      
	      if (passed)
    	  {
        	 passed = validateCountryState(form);
	      }
	  
      if (passed)
      {
         passed = validateAddressSearch(form);
      }
      if (passed)
      {
         passed = validateReferencePointSearch(form);
      }
      return passed;
   }


	//AR0755B : Compare Layer validation


	/*AS:AR0755B: QA: TR 8326: This function is added for preventing double
   click and in case of double click it will show message.*/
 	var doubleClickCompareNow;
	function preventDoubleClickCompareNow()
    {
      if (doubleClickCompareNow)
      {
         alert('Your request is being processed, please wait.');
         return false;
      }
      else
      {
         doubleClickCompareNow = true;
         return true;
      }
    }

	var list_selectedcheckboxes = null;
	var count=0;

	function getSelectedChxboxes_compareNow(propCount)
	{
		preventDoubleClickCompareNow();
		var vFlag = 0;
		list_selectedcheckboxes = new Array();
		list_selectedcheckboxe = new Array();

		for(i = 0; i < propCount; i++){
			id='chkCompare'+i;
			if(document.getElementById(id).checked){
				list_selectedcheckboxe[i] = document.getElementById(id).value;
				vFlag=vFlag+1;
			}
		}
		var j=0;
		for(i = 0; i < list_selectedcheckboxe.length; i++){

			if(list_selectedcheckboxe[i] !='' && list_selectedcheckboxe[i] != null ){
				list_selectedcheckboxes[j] = list_selectedcheckboxe[i];
				j++;
			}
		}

	 	//When more than 4 hotels
		if(vFlag > 4){
			alert("You may only select four hotels at a time to compare.");
			doubleClickCompareNow = false;
			return false;
		}
		//When more than 0 and less than 2 hotels is selected
		if((vFlag > 0 && vFlag < 2 )){
			alert("You must select at least two hotels to compare.");
			doubleClickCompareNow = false;
			return false;
	 	}

		if(vFlag > 1 && vFlag < 5 ){
			getComparisonLayer('0',false);
	 	}
	 }

	function getSelectedChxboxes(objCheckBoxes,hotelCount){

		for(i = 0; i < hotelCount; i++){
			id='chkCompare'+i;

			if(document.getElementById(id).checked){

				$("#buttonhide").hide();
				$("#buttonphide").hide();
				$("#buttonshow").show();
				$("#buttonpshow").show();				
				break;
			}
			else{

				$("#buttonhide").show();
				$("#buttonphide").show();
				$("#buttonshow").hide();
				$("#buttonpshow").hide();
			}
		}
		if(objCheckBoxes.checked){

			count = count + 1;
			if(count >  4)
				alert("You may only select four hotels at a time to compare.");
		 }else{
				count = count - 1;
		 	}
		 i++;
	}
	//End of AR0755B

	</script> 
     <!-- end $Workfile$ --> 
     <script type="text/javascript" src="javascript/popup.js?v=01262015115721"></script> 
     <script language="javascript">

<!--
	/**
	 * method that controls the display of the map window;
	 * if a property code is passed, only that hotel is mapped;
	 * if no property code is passed, all hotels on the page are mapped
	 */
	function mapHotel(pCode) {
		var form = document.forms.geoMappingForm;
		if (pCode != null && pCode != '') {
			form.propertyCode.value = pCode;
			form.mapType.value = 'SINGLE'; 
		}
		 else
		{
			form.propertyCode.value = '';
			form.mapType.value = 'MULTIPLE';			
		}  
		submitFormInWindow(document.forms.geoMappingForm, 800, 450,window.screen.availWidth - 800, 0); 
	}

	/** 
	 * wrapper around window.open used for opening a non-resizable no-thrills popup message windows
	 */
-->
</script> 
     <!-- End $Id$ --> 
     <form name="geoMappingForm" method="post" action="/bestwestern/processGeoMapping.do;jsessionid=+AKzBAxYqYymWsSsHXIdtg__.h422c" target="mapWindow"> 
      <input type="hidden" name="mapType" value="MULTIPLE"> 
      <input type="hidden" name="group" value="false"> 
      <input type="hidden" name="pageNumber" value="">
      <!-- used to return to this search results page --> 
      <input type="hidden" name="refPointLatitude" value=""> 
      <input type="hidden" name="refPointLongitude" value=""> 
      <input type="hidden" name="propertyCode" value="">
      <!-- used to map a single hotel --> 
     </form> 
     <!-- End $Id: geoMappingForm.jsp --> 
     <!-- Start: $Workfile$ --> 
     <script type="text/javascript" src="javascript/yahoo-dom-event.js?v=01262015115721"></script> 
     <script type="text/javascript" src="javascript/dragdrop-min.js?v=01262015115721"></script> 
     <script type="text/javascript" src="javascript/container-min.js?v=01262015115721"></script> 
     <script type="text/javascript" src="javascript/global.js?v=01262015115721"> </script> 
     <script type="text/javascript" src="javascript/dateutil.js?v=01262015115721"> </script> 
     <script>
	var blnShowCalendar = false;
	
</script> 
     <div class="rightCol"> 
      <!-- Start booking progress bar --> 
      <!-- Start: $Workfile$ --> 
      <!-- Start -AR0850 Code Modified For The Progress Bar Surendra --> 
      <ol id="bookingProgressBar" class="items5 clearfix"> 
       <!-- For SelectRoom --> 
       <li class="active"> Select Room&nbsp; </li> 
       <!--end select room--> 
       <!--start reviewAndReserve--> 
       <li>Review &amp; Reserve</li> 
       <!--end reviewAndReserve--> 
       <!--start confirmation--> 
       <li class="last">Confirmation</li> 
       <!--end confirmation--> 
      </ol> 
      <!-- End $Id: End of ProgressBar.jsp --> 
      <!-- End booking progress bar --> 
      <div class="clearBoth"> 
       <div id="errorDiv"> 
        <!-- Start displayErrorMessages.jsp START--> 
        <script language="javascript1.2">
		var isError=false;
	</script> 
       </div> 
       <script language="javascript" type="text/javascript">
		var vfmMainURL='http://images.bestwestern.com/bwi/main.html';
		var vfmLanguageCode='';
		var propertyBW='';
		/* AR0850: Create this fucntion to generate new URL for other than occupancy page */
		function submitToProductInfoOtrPg(propertyCode, country, state, city, propName){
			var newUrl ="";		
			if(state == ""){			
				newUrl = country+"/"+city+"-hotels/"+propName+"/Hotel-Overview.do?propertyCode=" + propertyCode;
			}else{
				newUrl = country+"/"+state+"/"+city+"-hotels/"+propName+"/Hotel-Overview.do?propertyCode=" + propertyCode;
			}		
			document.getElementById("otherPageHrefId").href	=newUrl;
		}
		function launchVfmUrl(propCode){
			var	launchURL="<iframe src="+vfmMainURL+"?pid="+propertyBW+propCode+"&lang="+vfmLanguageCode+" height='393' width='694' scrolling='no'></iframe> ";
			document.getElementById("vfmImg").innerHTML=launchURL;
		 }
	</script> 
       <!-- Hotel Name --> 
       <h2 class="tierPlus"> <a id="otherPageHrefId" href="#" onclick="return submitToProductInfoOtrPg('05425', 'US','CA','Carpinteria','BEST-WESTERN-PLUS-Carpinteria-Inn')"> BEST WESTERN PLUS Carpinteria Inn </a> </h2> 
       <div class="header"> 
        <div class="hotelInfo"> 
         <div class="col1"> 
          <img src="http://images.bestwestern.com/05425/05425_b1.jpg" width="150px" height="100px" alt="BEST WESTERN PLUS Carpinteria Inn" border="0"> 
          <br> 
          <a href="/bestwestern/US/CA/Carpinteria-hotels/BEST-WESTERN-PLUS-Carpinteria-Inn/Hotel-Overview.do?propertyCode=05425">More Hotel Information&nbsp;&gt;</a> 
         </div> 
         <div class="col2"> 
          <!-- Hotel Address --> 
          <p> <strong> 4558 Carpinteria Avenue<br> Carpinteria, California, 93013-1863, United States <br> Phone:&nbsp;805/684-0473 </strong> </p> 
         </div> 
         <div class="col3"> 
          <table cellpadding="0" cellspacing="0" width="100%"> 
           <tbody>
            <tr height="50px"> 
             <td valign="top"> 
              <!-- Start $Id: chgCurrency.jsp  --> <script language="javascript" type="text/javascript">
		function changeCurr(){
		    
		    	document.changeCurrencyForm.submit();
		    
		}
	</script> 
              <form name="changeCurrencyForm" method="post" action="/bestwestern/changeCurrencyNew.do;jsessionid=+AKzBAxYqYymWsSsHXIdtg__.h422c"> 
               <input type="hidden" name="resumeSearch" value="true"> 
               <input type="hidden" name="selectRoomPageNum" value="1"> 
               <input type="hidden" name="selectedRimRate" value="XE"> 
               <input type="hidden" name="rimRateSelected" value="false"> 
               <!-- Added for CR-32 currency drop down start --> 
               <table> 
                <tbody>
                 <tr> 
                  <td align="right" width="80%" class="currencyLabelDisplay"> <label>Currency</label> </td> 
                  <td width="1%"> </td> 
                  <td> <select name="currencyCode" onchange="changeCurr()" style="width:165px">
                    <!-- start chgCurrencyLocaleChoice.jsp  --> <option value="USD" selected>U.S. DOLLARS</option> <option value="CAD">CANADIAN DOLLARS</option> <option value="EUR">EURO</option> <option value="ALL"> ALBANIAN LEK </option> <option value="DZD"> ALGERIAN DINAR </option> <option value="ARS"> ARGENTINA PESOS </option> <option value="AMD"> ARMENIAN DRAM </option> <option value="AWG"> ARUBAN FLORIN </option> <option value="AUD"> AUSTRALIA DOLLARS </option> <option value="BSD"> BAHAMAS DOLLAR </option> <option value="BHD"> BAHRAINI DINAR </option> <option value="BDT"> BANGLADESH TAKA </option> <option value="BBD"> BARBADOS DOLLAR </option> <option value="BZD"> BELIZE DOLLAR </option> <option value="BMD"> BERMUDA DOLLAR </option> <option value="BOB"> BOLIVIA BOLIVIANOS </option> <option value="BWP"> BOTSWANA PULA </option> <option value="BRL"> BRAZILIAN REALS </option> <option value="GBP"> BRITISH POUND </option> <option value="BND"> BRUNEI DOLLARS </option> <option value="BGN"> BULGARIA LEVS </option> <option value="MMK"> BURMESE KYAT </option> <option value="KHR"> CAMBODIA RIEL </option> <option value="KYD"> CAYMAN ISL DOLLAR </option> <option value="XOF"> CFA FRANC </option> <option value="CLP"> CHILEAN PESOS </option> <option value="COP"> COLOMBIAN PESOS </option> <option value="CRC"> COSTA RICA COLON </option> <option value="HRK"> CROATIA KUNA </option> <option value="CYP"> CYPRIOT POUND </option> <option value="CZK"> CZECH REPUBLIC KORUNA </option> <option value="DKK"> DANISH KRONES </option> <option value="DOP"> DOMINICAN REPUBLIC </option> <option value="EGP"> EGYPTIAN POUNDS </option> <option value="EEK"> ESTONIAN KROON </option> <option value="FJD"> FIJIAN </option> <option value="XPF"> FR PACIFIC FRANCS </option> <option value="GEL"> GEORGIAN LARI </option> <option value="GHS"> GHANA CEDI </option> <option value="GTQ"> GUATEMALA QUETZAL </option> <option value="GYD"> GUYANA DOLLAR </option> <option value="HTG"> HAITI GOURDES </option> <option value="HNL"> HONDURAN LEMPIRA </option> <option value="HKD"> HONG KONG DOLLARS </option> <option value="HUF"> HUNGARY FORINT </option> <option value="ISK"> ICELANDIC KRONA </option> <option value="INR"> INDIAN RUPEES </option> <option value="IDR"> INDONESIAN RUPIAH </option> <option value="ILS"> ISRAEL SHEKEL N </option> <option value="JMD"> JAMAICA DOLLAR </option> <option value="JPY"> JAPANESE YEN </option> <option value="JOD"> JORDANIAN DINARS </option> <option value="KZT"> KAZAKHSTANI TENGE </option> <option value="KES"> KENYA SCHILLING </option> <option value="KWD"> KUWAITI DINAR </option> <option value="LAK"> LAO KIP </option> <option value="LBP"> LEBANESE POUNDS </option> <option value="LSL"> LESOTHO LOTI </option> <option value="LTL"> LITHUANIA LITA </option> <option value="MOP"> MACAU PATACAS </option> <option value="MKD"> MACEDONIA DENAR </option> <option value="MYR"> MALAYSIAN RINGGIT </option> <option value="MUR"> MAURITIAN RUPEE </option> <option value="MXN"> MEXICAN PESOS </option> <option value="MDL"> MOLDOVAN LEU </option> <option value="MNT"> MONGOLIA TUGHRIK </option> <option value="MAD"> MOROCCO DIRHAM </option> <option value="NZD"> N ZEALAND DOLLARS </option> <option value="NPR"> NEPALESE RUPEE </option> <option value="NIO"> NICARAGUA CORDOBA </option> <option value="NGN"> NIGERIAN NAIRA </option> <option value="NOK"> NORWEGIAN KRONES </option> <option value="OMR"> OMANI RIAL </option> <option value="PKR"> PAKISTANI RUPEES </option> <option value="PAB"> PANAMANIAN BALBOA </option> <option value="PEN"> PERU NUEVO SOL </option> <option value="PHP"> PHILIPPINE PESO </option> <option value="PLN"> POLAND ZLOTYS </option> <option value="QAR"> QATARI RIYAL </option> <option value="RON"> ROMANIA LEUS </option> <option value="RUB"> RUSSIAN RUBLE </option> <option value="ZAR"> S. AFRICAN RANDS </option> <option value="SVC"> SALVADORAN COLON </option> <option value="SAR"> SAUDI RIYALS </option> <option value="RSD"> SERBIAN DINAR </option> <option value="SCR"> SEYCHELLOIS RUPEE </option> <option value="SLL"> SIERRA LEONEAN LEONE </option> <option value="SGD"> SINGAPORE DOLLARS </option> <option value="KRW"> SOUTH KOREAN WONS </option> <option value="LKR"> SRI LANKA RUPEE </option> <option value="SDP"> SUDANESE POUNDS </option> <option value="SRG"> SURINAMESE DOLLAR </option> <option value="SZL"> SWAZI LILANGENI </option> <option value="SEK"> SWEDISH KRONAS </option> <option value="CHF"> SWISS FRANCS </option> <option value="SYP"> SYRIAN POUND </option> <option value="TWD"> TAIWAN NEW DOLLAR </option> <option value="TZS"> TANZANIA SHILLING </option> <option value="THB"> THAI BAHTS </option> <option value="TOP"> TONGAN PA'ANGAS </option> <option value="TTD"> TRINIDAD &amp; TOBAGO </option> <option value="TND"> TUNISIAN DINAR </option> <option value="TRY"> TURKISH LIRA </option> <option value="AED"> UAE DIRHAMS </option> <option value="UAH"> UKRAINIAN HRYVNIA </option> <option value="UYU"> URUGUAYAN PESOS </option> <option value="VUV"> VANUATU VATU </option> <option value="VEF"> VENEZUELA BOLIVARS </option> <option value="VND"> VIET NAM DONG </option> <option value="YER"> YEMENI RIAL </option> <option value="CNY"> YUAN RENMINBIS </option> <option value="ZMK"> ZAMBIAN KWACHA </option> <option value="ZMW"> ZAMBIAN KWACHA </option> <option value="ZWD"> ZIMBABWE DOLLAR </option> 
                    <!-- End  chgCurrencyLocaleChoice.jsp --></select> </td> 
                 </tr> 
                </tbody>
               </table> 
               <!-- Added for CR-32 currency drop down end --> 
              </form> 
              <!-- End $Id: chgCurrency.jsp  --> </td> 
            </tr> 
           </tbody>
          </table> 
          <table width="100%"> 
           <tbody>
            <tr> 
             <td class="viewAdditionlRatesAndRewardstd"> <font class="viewAdditionlRatesAndRewards">View Additional Rates and Rewards</font> </td> 
            </tr> 
            <tr> 
             <!-- Start selectRimOrder.jsp  --> 
             <script language="javascript" type="text/javascript">
		function selectRimSellOrderRate(){
		      	var selectedRimRate = document.rimSellOrderForm.rimRateCode.value;
		  			if(selectedRimRate==""){
						return false;
					}else{
						document.rimSellOrderForm.submit();
					}
			}
	</script> 
             <form name="rimSellOrderForm" method="post" action="/bestwestern/changeRimSellRate.do;jsessionid=+AKzBAxYqYymWsSsHXIdtg__.h422c"></form> 
             <input type="hidden" name="selectRoomPageNum" value="1"> 
             <td class="viewAdditionlRatesAndRewardstd"> <select name="rimRateCode" onchange="selectRimSellOrderRate()" style="width:247px;">
               <!-- start rimSellOrder.jsp  --> <option value="" selected>Select a Rate - AAA, AARP, GOVT</option> <option value="FX"> USE REWARDS POINTS </option> <option value="BW"> BEST WESTERN REWARDS RATE </option> <option value="OI"> BEST VALUE </option> <option value="3A"> AAA/CAA RATE </option> <option value="B"> BREAKFAST RATE </option> <option value="WS"> WEB SPECIAL </option> <option value="RP"> AARP/SENIOR </option> <option value="GM"> GOVERNMENT/MILITARY </option> <option value="9Q"> MULTI NIGHT STAY PROMOTION </option> <option value="2U"> ADVANCE PURCHASE RATE </option> <option value="W1"> WINE TOUR DELUXE EXCURSION 1 NIGHT </option> <option value="W2"> WINE TOUR-SURF UP LIMOS 1 NIGHT </option> <option value="B1"> RINCON BEACH CRUISER PACKAGE 1 NIGHT </option> <option value="E1"> EARLY SPRING COASTAL CRUISE 1 NIGHT </option> <option value="E3"> SPRING-SUMMER ISLAND CRUISE 1 NIGHT </option> <option value="E4"> FALL ISLANDS MARINE LIFE CRUISE 1 NIGHT </option> 
               <!-- End  rimSellOrder.jsp --></select> </td>  
             <!-- End selectRimOrder.jsp  --> 
            </tr> 
           </tbody>
          </table> 
         </div> 
        </div> 
        <div id="ajaxImg" style="display:none" align="center"> 
         <img src="images/ajaxSpinner.gif" alt=""> 
        </div> 
        <!-- All Room Same  --> 
        <div class="headerBottomBar allRoomSameMessageDisplayMargin"> 
        </div> 
        <div class="headerBottomBar possibleRateChangeMessageMargin"> 
         <div class="formField"> 
         </div> 
        </div> 
        <!--Dates of Stay Start--> 
        <div class="headerBottomBar averageRateMessageMargin"> 
         <div class="averageRateMessage">
           Average Nightly Rate Based on Occupancy 
         </div> 
         <strong><span class="selectRoomDatesOfStay">Dates of Stay: March&nbsp;02-03,&nbsp;2015 </span> </strong> 
        </div> 
       </div> 
       <!-- start displayRoom.jsp  --> 
       <link rel="stylesheet" href="css/style.css?v=01262015115721"> 
       <script>
	var blnShowCalendar = false;
	
	var room = 1;
</script> 
       <div id="roomSelectOptions"> 
        <div id="rates" class="clearBoth"> 
         <script type="text/javascript">

function submitSelectRoom()
{	
		//window.location.replace(selectRoomSubmitUrl);	
	submitURL(selectRoomSubmitUrl);	
}
function setUrl(url)
{
	selectRoomSubmitUrl=url;
}


function checkForSecureUrl(url,selectedRatePlanCode,roomDtoCode)
{
	if(document.getElementById("allRoomsSame").value != "" && document.getElementById("allRoomsSame").value == "true" )
	{
		setUrl("https://book.bestwestern.com:443/bestwestern/reservationSummary.do?"+"rateCode="+selectedRatePlanCode+"&sellingComponentCode="+roomDtoCode+"&selectRate=CostPerNight");
	}
	else
	{
		setUrl(url);
	}
	
}


	loginStatusFlag=false;



function submitURL(url)
{
var newURL="";
if(document.getElementById("allRoomCheckBox")){
	if(document.getElementById("allRoomCheckBox").checked)
    {
    	 document.getElementById("allRoomsSame").value=true;
    }
	else
	{
   		 document.getElementById("allRoomsSame").value=false;
   	}	
	newURL = url+"&allRoomsSame="+document.getElementById("allRoomsSame").value;
}
else{
		newURL = url+"&allRoomsSame=false";
	}
window.location.href=newURL;			

}
function validateMaxDatesOfDates(inDates,outDates)
{
var date1=inDates.split("-");
var date2=outDates.split("-");
arrDate = new Date();
depDate = new Date();
arrDate.setFullYear(date1[2],date1[1],date1[0]);
depDate.setFullYear(date2[2],date2[1],date2[0]);
var noOfDays = Math.abs(days_between(arrDate, depDate));
if(noOfDays>30){
	alert("Bestwestern.com cannot process a hotel reservation that exceeds {0} days in length. Please revise your reservation Check In or Check Out dates.");
	return false;
	}
return true;
}

</script> 
         <input type="hidden" name="allRoomsSame" id="allRoomsSame"> 
         <script language="javascript" type="text/javascript">
	var notEnoughPointsMessage="You do not have enough points to book this room.";
	function openRoomDescriptionPopup(eve, theText)
	{		
        var width = 300;
        var height = 150;
        var safety = 60;
        var left = eve.screenX;
        var top = eve.screenY;

        var temp = left + width + safety;
        if (temp > screen.width)
            left = screen.width - width - safety;

        temp = top + height + safety;
        if (temp > screen.height)
            top = screen.height - height - safety;

        if (eve.screenX < left){
            left = eve.screenX;
        }
        if (eve.screenY < top){
            top = eve.screenY;
        }
        		
        var theUrl = "roomDescriptionPopup.do?text=" + theText;
       	document.getElementById("roomDesc").value = theText;	    
        var windowName = "roomDescriptionPopup";
        var features = "scrollbars=no,resizable=no,width=" + width + ",height=" + height + ",left=" + left + ",top=" + top;
        helpPopup = window.open(theUrl, windowName, features);
	}	
    
	 function checkCancelDate(ratePlanCode, roomCategoryCode)
	 {
		
		
		
		
		
		
		
		
		offsetNow = 1425320149958 ;
		
		
			
					 			
			
			
		
		
	 	
		 	if (ratePlanCode == 'RACK')
		 	{	 		
		 		
		 			
		 				if (roomCategoryCode == '2123533')
		 				{	
		 					
		 					
		 					
		 					
		 					var cancellationDate = 'Sun Mar 01 16:00:00 MST 2015';
		 					var nowIsPastCancellationPeriod = 'true';

							if (nowIsPastCancellationPeriod == "true")
				 			{
				 				return confirm('The available rate you selected is non-refundable, non-cancellable and cannot be changed. Click "OK" to proceed with this reservation, or click "Cancel" to select a different rate.');
				 			}					
		 				}
		 			
		 		
		 			
		 				if (roomCategoryCode == '2139632')
		 				{	
		 					
		 					
		 					
		 					
		 					var cancellationDate = 'Sun Mar 01 16:00:00 MST 2015';
		 					var nowIsPastCancellationPeriod = 'true';

							if (nowIsPastCancellationPeriod == "true")
				 			{
				 				return confirm('The available rate you selected is non-refundable, non-cancellable and cannot be changed. Click "OK" to proceed with this reservation, or click "Cancel" to select a different rate.');
				 			}					
		 				}
		 			
		 		
		 			
		 				if (roomCategoryCode == '2123852')
		 				{	
		 					
		 					
		 					
		 					
		 					var cancellationDate = 'Sun Mar 01 16:00:00 MST 2015';
		 					var nowIsPastCancellationPeriod = 'true';

							if (nowIsPastCancellationPeriod == "true")
				 			{
				 				return confirm('The available rate you selected is non-refundable, non-cancellable and cannot be changed. Click "OK" to proceed with this reservation, or click "Cancel" to select a different rate.');
				 			}					
		 				}
		 			
		 		
		 			
		 				if (roomCategoryCode == '2123853')
		 				{	
		 					
		 					
		 					
		 					
		 					var cancellationDate = 'Sun Mar 01 16:00:00 MST 2015';
		 					var nowIsPastCancellationPeriod = 'true';

							if (nowIsPastCancellationPeriod == "true")
				 			{
				 				return confirm('The available rate you selected is non-refundable, non-cancellable and cannot be changed. Click "OK" to proceed with this reservation, or click "Cancel" to select a different rate.');
				 			}					
		 				}
		 			
		 		
		 			
		 				if (roomCategoryCode == '2278514')
		 				{	
		 					
		 					
		 					
		 					
		 					var cancellationDate = 'Sun Mar 01 16:00:00 MST 2015';
		 					var nowIsPastCancellationPeriod = 'true';

							if (nowIsPastCancellationPeriod == "true")
				 			{
				 				return confirm('The available rate you selected is non-refundable, non-cancellable and cannot be changed. Click "OK" to proceed with this reservation, or click "Cancel" to select a different rate.');
				 			}					
		 				}
		 			
		 		
		 			
		 				if (roomCategoryCode == '2278515')
		 				{	
		 					
		 					
		 					
		 					
		 					var cancellationDate = 'Sun Mar 01 16:00:00 MST 2015';
		 					var nowIsPastCancellationPeriod = 'true';

							if (nowIsPastCancellationPeriod == "true")
				 			{
				 				return confirm('The available rate you selected is non-refundable, non-cancellable and cannot be changed. Click "OK" to proceed with this reservation, or click "Cancel" to select a different rate.');
				 			}					
		 				}
		 			
		 		
		 			
		 				if (roomCategoryCode == '2193455')
		 				{	
		 					
		 					
		 					
		 					
		 					var cancellationDate = 'Sun Mar 01 16:00:00 MST 2015';
		 					var nowIsPastCancellationPeriod = 'true';

							if (nowIsPastCancellationPeriod == "true")
				 			{
				 				return confirm('The available rate you selected is non-refundable, non-cancellable and cannot be changed. Click "OK" to proceed with this reservation, or click "Cancel" to select a different rate.');
				 			}					
		 				}
		 			
		 		
		 			
		 				if (roomCategoryCode == '2193456')
		 				{	
		 					
		 					
		 					
		 					
		 					var cancellationDate = 'Sun Mar 01 16:00:00 MST 2015';
		 					var nowIsPastCancellationPeriod = 'true';

							if (nowIsPastCancellationPeriod == "true")
				 			{
				 				return confirm('The available rate you selected is non-refundable, non-cancellable and cannot be changed. Click "OK" to proceed with this reservation, or click "Cancel" to select a different rate.');
				 			}					
		 				}
		 			
		 		
		 			
		 				if (roomCategoryCode == '2193457')
		 				{	
		 					
		 					
		 					
		 					
		 					var cancellationDate = 'Sun Mar 01 16:00:00 MST 2015';
		 					var nowIsPastCancellationPeriod = 'true';

							if (nowIsPastCancellationPeriod == "true")
				 			{
				 				return confirm('The available rate you selected is non-refundable, non-cancellable and cannot be changed. Click "OK" to proceed with this reservation, or click "Cancel" to select a different rate.');
				 			}					
		 				}
		 			
		 		
		 	}
	 	
		 	if (ratePlanCode == 'XE')
		 	{	 		
		 		
		 			
		 				if (roomCategoryCode == '2139632')
		 				{	
		 					
		 					
		 					
		 					
		 					var cancellationDate = 'Sun Mar 01 16:00:00 MST 2015';
		 					var nowIsPastCancellationPeriod = 'true';

							if (nowIsPastCancellationPeriod == "true")
				 			{
				 				return confirm('The available rate you selected is non-refundable, non-cancellable and cannot be changed. Click "OK" to proceed with this reservation, or click "Cancel" to select a different rate.');
				 			}					
		 				}
		 			
		 		
		 	}
	 	
	 	return true;
	 }
</script> 
         <table border="1" class="inner"> 
          <tbody>
           <tr> 
            <th class="selectRoomHeaderOne">ROOM TYPE</th> 
            <th id="false _ Flexible Rate _ Reserve our best and least restrictive publicly available rate.  Changes and Cancellations are generally acceptable, but always check during the booking process for any cancellation fees or policies applicable to your stay dates" class="selectRoomHeaderTwo"> <a href="#" class="forwardLink"><strong>Flexible Rate</strong></a> </th> 
            <th id="false _ Negotiated Rate _ WESTMONT ATHLETICS DEPARTMENT" class="selectRoomHeaderTwo"> <a href="#" class="forwardLink"><strong>Negotiated Rate</strong></a> </th> 
           </tr> 
           <tr> 
           </tr>
           <tr> 
            <td class="description"><a id="2123533_RACK_05425" href="#" class="forwardLink"> 1 Queen Bed -NonSmoking </a> <br> 1 Queen Bed, Non-Smoking, Courtyard, Pillow Top Mattress, Refrigerator </td> 
            <td class="rate selectRoomRestictionMessage"> 
             <div class="columnTwoRestrictionsMessage"> 
             </div> <strong> <span class="currencySign">$</span> <span class="currencyRateDisplay">99.00</span> </strong> <br>
             <div class="rateDtl">
              <a id="2123533_RACK" href="#" class="forwardLinkRateDtl">Rate Details</a>
              <br>
             </div> <a name="&amp;lid=_2123533__SelectLink" href="#" class="buttonCol2" id="https://book.bestwestern.com:443/bestwestern/reservationSummary.do?rateCode=RACK&amp;sellingComponentCode=2123533&amp;selectRate=CostPerNight_RACK_2123533__02-2-2015_03-2-2015"><img class="selectRoomArrowbtnImg" src="images/white-arrow.png">GET THIS RATE</a> </td> 
            <td class="rate notApplicableMessage"> <strong>Rate Not Available for Selected Dates</strong> </td> 
           </tr> 
           <tr> 
           </tr>
           <tr> 
            <td class="description"><a id="2139632_RACK_05425" href="#" class="forwardLink"> 2 Queen Beds -NonSmoking </a> <br> 2 Queen Beds, Non-Smoking, Pillow Top Mattress, Refrigerator, High Speed Internet Access </td> 
            <td class="rate selectRoomRestictionMessage"> 
             <div class="columnTwoRestrictionsMessage"> 
             </div> <strong> <span class="currencySign">$</span> <span class="currencyRateDisplay">99.00</span> </strong> <br>
             <div class="rateDtl">
              <a id="2139632_RACK" href="#" class="forwardLinkRateDtl">Rate Details</a>
              <br>
             </div> <a name="&amp;lid=_2139632__SelectLink" href="#" class="buttonCol2" id="https://book.bestwestern.com:443/bestwestern/reservationSummary.do?rateCode=RACK&amp;sellingComponentCode=2139632&amp;selectRate=CostPerNight_RACK_2139632__02-2-2015_03-2-2015"><img class="selectRoomArrowbtnImg" src="images/white-arrow.png">GET THIS RATE</a> </td> 
            <td class="rate selectRoomRestictionMessage"> 
             <div class="restrictionsMessage">
               Restrictions May Apply 
             </div> <strong> <span class="currencySign">$</span> <span class="currencyRateDisplay">99.00</span> </strong> <br>
             <div class="rateDtl">
              <a id="2139632_XE" href="#" class="forwardLinkRateDtl">Rate Details</a>
              <br>
             </div> <a name="&amp;lid=_2139632__SelectLink" href="#" class="buttonCol3" id="https://book.bestwestern.com:443/bestwestern/reservationSummary.do?rateCode=XE&amp;sellingComponentCode=2139632&amp;selectRate=CostPerNight_XE_2139632__02-2-2015_03-2-2015"><img class="selectRoomArrowbtnImg" src="images/black-arrow.png">GET THIS RATE</a> </td> 
           </tr> 
           <tr> 
           </tr>
           <tr> 
            <td class="description"><a id="2123852_RACK_05425" href="#" class="forwardLink"> 1 King Bed -NonSmoking </a> <br> 1 King Bed, Non-Smoking, Courtyard, Pillow Top Mattress, Refrigerator </td> 
            <td class="rate selectRoomRestictionMessage"> 
             <div class="columnTwoRestrictionsMessage"> 
             </div> <strong> <span class="currencySign">$</span> <span class="currencyRateDisplay">119.00</span> </strong> <br>
             <div class="rateDtl">
              <a id="2123852_RACK" href="#" class="forwardLinkRateDtl">Rate Details</a>
              <br>
             </div> <a name="&amp;lid=_2123852__SelectLink" href="#" class="buttonCol2" id="https://book.bestwestern.com:443/bestwestern/reservationSummary.do?rateCode=RACK&amp;sellingComponentCode=2123852&amp;selectRate=CostPerNight_RACK_2123852__02-2-2015_03-2-2015"><img class="selectRoomArrowbtnImg" src="images/white-arrow.png">GET THIS RATE</a> </td> 
            <td class="rate notApplicableMessage"> <strong>Rate Not Available for Selected Dates</strong> </td> 
           </tr> 
           <tr> 
           </tr>
           <tr> 
            <td class="description"><a id="2123853_RACK_05425" href="#" class="forwardLink"> 2 Queen Beds -NonSmoking </a> <br> 2 Queen Beds, Non-Smoking, Courtyard, Pillow Top Mattress, Refrigerator </td> 
            <td class="rate selectRoomRestictionMessage"> 
             <div class="columnTwoRestrictionsMessage"> 
             </div> <strong> <span class="currencySign">$</span> <span class="currencyRateDisplay">119.00</span> </strong> <br>
             <div class="rateDtl">
              <a id="2123853_RACK" href="#" class="forwardLinkRateDtl">Rate Details</a>
              <br>
             </div> <a name="&amp;lid=_2123853__SelectLink" href="#" class="buttonCol2" id="https://book.bestwestern.com:443/bestwestern/reservationSummary.do?rateCode=RACK&amp;sellingComponentCode=2123853&amp;selectRate=CostPerNight_RACK_2123853__02-2-2015_03-2-2015"><img class="selectRoomArrowbtnImg" src="images/white-arrow.png">GET THIS RATE</a> </td> 
            <td class="rate notApplicableMessage"> <strong>Rate Not Available for Selected Dates</strong> </td> 
           </tr> 
           <tr> 
           </tr>
           <tr class="tableadditionalRow" style="display: none;"> 
            <td class="description"><a id="2278514_RACK_05425" href="#" class="forwardLink"> Suite-1 King Bed -NonSmoking </a> <br> Suite-1 King Bed, Non-Smoking, Wireless High-Speed Internet, Full Kitchen, Living Room, Oversized Room, Sofabed </td> 
            <td class="rate selectRoomRestictionMessage"> 
             <div class="columnTwoRestrictionsMessage"> 
             </div> <strong> <span class="currencySign">$</span> <span class="currencyRateDisplay">309.00</span> </strong> <br>
             <div class="rateDtl">
              <a id="2278514_RACK" href="#" class="forwardLinkRateDtl">Rate Details</a>
              <br>
             </div> <a name="&amp;lid=_2278514__SelectLink" href="#" class="buttonCol2" id="https://book.bestwestern.com:443/bestwestern/reservationSummary.do?rateCode=RACK&amp;sellingComponentCode=2278514&amp;selectRate=CostPerNight_RACK_2278514__02-2-2015_03-2-2015"><img class="selectRoomArrowbtnImg" src="images/white-arrow.png">GET THIS RATE</a> </td> 
            <td class="rate notApplicableMessage"> <strong>Rate Not Available for Selected Dates</strong> </td> 
           </tr> 
           <tr> 
           </tr>
           <tr class="tableadditionalRow" style="display: none;"> 
            <td class="description"><a id="2278515_RACK_05425" href="#" class="forwardLink"> Suite-1 King Bed -NonSmoking </a> <br> Suite-1 King Bed, Non-Smoking, Wireless High-Speed Internet, Microwave And Refrigerator, Sofabed, Oversized Room </td> 
            <td class="rate selectRoomRestictionMessage"> 
             <div class="columnTwoRestrictionsMessage"> 
             </div> <strong> <span class="currencySign">$</span> <span class="currencyRateDisplay">179.00</span> </strong> <br>
             <div class="rateDtl">
              <a id="2278515_RACK" href="#" class="forwardLinkRateDtl">Rate Details</a>
              <br>
             </div> <a name="&amp;lid=_2278515__SelectLink" href="#" class="buttonCol2" id="https://book.bestwestern.com:443/bestwestern/reservationSummary.do?rateCode=RACK&amp;sellingComponentCode=2278515&amp;selectRate=CostPerNight_RACK_2278515__02-2-2015_03-2-2015"><img class="selectRoomArrowbtnImg" src="images/white-arrow.png">GET THIS RATE</a> </td> 
            <td class="rate notApplicableMessage"> <strong>Rate Not Available for Selected Dates</strong> </td> 
           </tr> 
           <tr> 
           </tr>
           <tr class="tableadditionalRow" style="display: none;"> 
            <td class="description"><a id="2193455_RACK_05425" href="#" class="forwardLink"> 1 King Bed -NonSmoking </a> <br> 1 King Bed, Mobility Accessible, Roll In Shower, Non-Smoking </td> 
            <td class="rate selectRoomRestictionMessage"> 
             <div class="columnTwoRestrictionsMessage"> 
             </div> <strong> <span class="currencySign">$</span> <span class="currencyRateDisplay">99.00</span> </strong> <br>
             <div class="rateDtl">
              <a id="2193455_RACK" href="#" class="forwardLinkRateDtl">Rate Details</a>
              <br>
             </div> <a name="&amp;lid=_2193455__SelectLink" href="#" class="buttonCol2" id="https://book.bestwestern.com:443/bestwestern/reservationSummary.do?rateCode=RACK&amp;sellingComponentCode=2193455&amp;selectRate=CostPerNight_RACK_2193455__02-2-2015_03-2-2015"><img class="selectRoomArrowbtnImg" src="images/white-arrow.png">GET THIS RATE</a> </td> 
            <td class="rate notApplicableMessage"> <strong>Rate Not Available for Selected Dates</strong> </td> 
           </tr> 
           <tr> 
           </tr>
           <tr class="tableadditionalRow" style="display: none;"> 
            <td class="description"><a id="2193456_RACK_05425" href="#" class="forwardLink"> 1 King Bed -NonSmoking </a> <br> 1 King Bed, Mobility Accessible, Bathtub, Non-Smoking </td> 
            <td class="rate selectRoomRestictionMessage"> 
             <div class="columnTwoRestrictionsMessage"> 
             </div> <strong> <span class="currencySign">$</span> <span class="currencyRateDisplay">99.00</span> </strong> <br>
             <div class="rateDtl">
              <a id="2193456_RACK" href="#" class="forwardLinkRateDtl">Rate Details</a>
              <br>
             </div> <a name="&amp;lid=_2193456__SelectLink" href="#" class="buttonCol2" id="https://book.bestwestern.com:443/bestwestern/reservationSummary.do?rateCode=RACK&amp;sellingComponentCode=2193456&amp;selectRate=CostPerNight_RACK_2193456__02-2-2015_03-2-2015"><img class="selectRoomArrowbtnImg" src="images/white-arrow.png">GET THIS RATE</a> </td> 
            <td class="rate notApplicableMessage"> <strong>Rate Not Available for Selected Dates</strong> </td> 
           </tr> 
           <tr> 
           </tr>
           <tr class="tableadditionalRow" style="display: none;"> 
            <td class="description"><a id="2193457_RACK_05425" href="#" class="forwardLink"> 2 Queen Beds -NonSmoking </a> <br> 2 Queen Beds, Mobility Accessible, Roll In Shower, Non-Smoking </td> 
            <td class="rate selectRoomRestictionMessage"> 
             <div class="columnTwoRestrictionsMessage"> 
             </div> <strong> <span class="currencySign">$</span> <span class="currencyRateDisplay">119.00</span> </strong> <br>
             <div class="rateDtl">
              <a id="2193457_RACK" href="#" class="forwardLinkRateDtl">Rate Details</a>
              <br>
             </div> <a name="&amp;lid=_2193457__SelectLink" href="#" class="buttonCol2" id="https://book.bestwestern.com:443/bestwestern/reservationSummary.do?rateCode=RACK&amp;sellingComponentCode=2193457&amp;selectRate=CostPerNight_RACK_2193457__02-2-2015_03-2-2015"><img class="selectRoomArrowbtnImg" src="images/white-arrow.png">GET THIS RATE</a> </td> 
            <td class="rate notApplicableMessage"> <strong>Rate Not Available for Selected Dates</strong> </td> 
           </tr> 
          </tbody>
         </table> 
         <a id="See More Rooms_See Fewer Rooms" href=".tableadditionalRow" class="expandLink"> <span id="seeMoreLinkText" class="seeMoreLink">See More Rooms</span> </a> 
         <br>
         <br> 
         <div id="roomhotelbanner" align="center"> 
          <table> 
           <tbody>
            <tr> 
             <td> <img src="http://images.bestwestern.com/05425/Free_Parking_Banner.jpg"> </td> 
             <td> <img src="http://images.bestwestern.com/05425/Free_High_Speed_Internet_Banner.jpg"> </td> 
            </tr> 
            <tr> 
             <td> <img src="http://images.bestwestern.com/05425/Rider_Friendly.jpg"> </td> 
             <td> <img src="http://images.bestwestern.com/05425/Outdoor_Pool.jpg"> </td> 
            </tr> 
           </tbody>
          </table> 
         </div> 
        </div> 
       </div> 
       <div id="offerDetail" class="closeOnSubmit"></div> 
       <div id="rateDetail" class="closeOnSubmit"></div> 
       <div id="roomDetail" class="closeOnSubmit"></div> 
       <!-- End displayRoom.jsp  --> 
      </div> 
     </div> 
     <!-- End: $Workfile$ --> 
    </div> 
    <div id="mainBottomBar"> 
    </div> 
   </div> 
   <div id="footer"> 
    <!-- Start: $Workfile: footer.jsp$ --> 
    <script language="javascript" type="text/javascript">
	function NewWindow(href, name, props)
	{
		var wnd = window.open(href, name, props);
		wnd.focus();
		return false;
	}
	
	var thousand_sep = ",";
	var decimal_point = ".";
	var default_precision = 2;
	
	function formatFloat(aFloat, aPrecision){
		try {
			precision = default_precision;
			if(!isNaN(aPrecision))
				if(Math.abs(aPrecision)<=10)
					precision = aPrecision;
			} catch(e) {
			precision = default_precision;
			}
		try {
			number = parseFloat(aFloat+'');
			if(isNaN(number))
				return "NaN";
			} catch(e) {
			return "NaN";
			}
	
			number = Math.round(number * Math.pow(10, precision)) / Math.pow(10,precision);
			integerpart = '' + ((number<0) ? Math.ceil(number) :
			Math.floor(number));
			decimalpart = Math.abs(Math.round((number - integerpart)*(Math.pow(10,precision))));
			if(decimalpart<10)
				decimalpart="0"+decimalpart;
			if(decimalpart==0)
				decimalpart="00";
				var buff = "";
			for(j=-1, i=integerpart.length; i>=0; i--, j++){
				if((j%3) == 0 && j>1)
					buff = buff;
					buff = integerpart.charAt(i) + buff;
			}
			if(precision>0)
				return buff+decimal_point+decimalpart;
	
			return buff;
    }

	

 
var loyaltyNumber='';
	       var iataNumber='';
	       var corpId='';
</script> 
    <ul class="nav"> 
     <li> <a href="http://www.bestwestern.com/terms.asp?m=1&amp;language=en_US" class="loadDialog">Terms of Use </a></li> 
     <li> <a href="http://www.bestwestern.com/privacy.asp?m=1&amp;language=en_US" class="loadDialog">Privacy Policy</a></li> 
    </ul> 
    <p class="legal">Each Best WesternÂ® branded hotel is independently owned and operated. Â© 2002-2015 Best Western International, Inc. All rights reserved.</p> 
    <p class="legal">Â© 2015 TripAdvisor LLC. All rights reserved.</p> 
    <form name="searchBox" id="searchBox"> 
     <input type="hidden" name="q" id="q"> 
    </form> 
    <!-- This jsp includes the coremetrics tags corresponding to various pages where footer has been included --> 
    <!-- Start: $Workfile: coremetricsTags.jsp$ --> 
    <!-- BEGIN COREMETRICS TAGS --> 
    <!-- Coremetrics javascript library includes --> 
    <script language="javascript1.1" src="/bestwestern/javascript/Best_Western_cm_data/v40/eluminate.js?v=01262015115721"></script> 
    <script language="javascript1.1" src="/bestwestern/javascript/Best_Western_cm_data/cmdatatagutils.js?v=01262015115721"></script> 
    <script language="javascript1.1">

cm_ClientID = '90222831';
var cmPropCode = "";
var cmPropName = "";
var cmPropCity = "";
var cmPropStateAbbreviation = "";
var cmPropCountryCode = "";
var currency = "";

	cmSetProduction();


<!--













	cmPropCode = '05425';
	cmPropName = 'BEST WESTERN PLUS Carpinteria Inn';
	cmPropCity = 'Carpinteria';
	currency = 'USD';
	cmPropStateAbbreviation = 'CA';
	cmPropCountryCode = 'US';

 




	
<!--Select Room -->
	var currentRoom = "";
	
	currentRoom = '1';	
	cmCreatePageviewTag("select room "+currentRoom, "Reservations", null);



















































//-->

</script> 
    <!-- END COREMETRICS --> 
    <!-- begin BW init JavaScript vars --> 
    <script language="javascript" type="text/javascript">

  var bwTrackHotelName='';
  var trackNights='1';
  var bwConfNumber='init1';
  var bwTrackOrderTotal='init1';
  var bwTrackOrderTotalAtlas='init1';
  var bwTrackOrderCurrency='init1';
  var bwTrackItemID='init1';
  var bwTrackItemIDcancel='init1';
  var bwTrackPropertyCity='init1';
  var bwTrackPropertyState='init1';
  var bwTrackPropertyPostal='init1';
  var bwTrackPropertyCountry='init1';
  var bwTrackCheckInDate='init1';
  var bwTrackCheckOutDate='init1';
  var bwGuestAddressLine2='init1';
  var bwCancelConfNumber='init1';
  var bwPropertyCode='init1';
  // init the page mode...

  //if (bwGuestAddressLine2=='chtest') {
    //alert('bwPageMode='+bwPageMode);
  //}
</script> 
    <script language="javascript" type="text/javascript">
        bwTrackHotelName='BEST WESTERN PLUS Carpinteria Inn';
		if (bwTrackHotelName.length > 50) {
			bwTrackHotelName = bwTrackHotelName.substring(0,50);
		}
		bwTrackHotelName = bwTrackHotelName.replace(","," ");
		bwTrackHotelName = bwTrackHotelName.replace(/&amp;#039;/g," ");
      </script> 
    <script language="javascript" type="text/javascript">
        trackNights='1';
      </script> 
    <script language="javascript" type="text/javascript">
        bwTrackOrderCurrency='init2';
      </script> 
    <script language="javascript" type="text/javascript">
        bwTrackOrderCurrency='USD';
      </script> 
    <script language="javascript" type="text/javascript">
	        bwTrackItemID='init2';
	      </script> 
    <script language="javascript" type="text/javascript">
	        bwTrackItemID='05425';
	      </script> 
    <script language="javascript" type="text/javascript">
        bwTrackItemIDcancel='init2';
      </script> 
    <script language="javascript" type="text/javascript">
        bwTrackItemIDcancel='05425';
      </script> 
    <script language="javascript" type="text/javascript">
	  if (bwTrackItemID.indexOf('init') >= 0) {
	    bwTrackItemID = bwTrackItemIDcancel;
	  }
	</script> 
    <script language="javascript" type="text/javascript">
        bwTrackPropertyCity='init2';
      </script> 
    <script language="javascript" type="text/javascript">
        bwTrackPropertyCity='Carpinteria';
      </script> 
    <script language="javascript" type="text/javascript">
	        bwTrackPropertyState='init2';
	      </script> 
    <script language="javascript" type="text/javascript">
	        bwTrackPropertyState='CA';
	      </script> 
    <script language="javascript" type="text/javascript">
	        bwTrackPropertyPostal='init2';
	      </script> 
    <script language="javascript" type="text/javascript">
	        bwTrackPropertyPostal='93013-1863';
	      </script> 
    <script language="javascript" type="text/javascript">
	        bwTrackPropertyCountry='init2';
	      </script> 
    <script language="javascript" type="text/javascript">
	        bwTrackPropertyCountry='United States';
	      </script> 
    <script language="javascript" type="text/javascript">
        bwTrackCheckOutDate='init2';
      </script> 
    <script language="javascript" type="text/javascript">
        bwTrackCheckOutDate='Tue Mar 03 00:00:00 MST 2015';
      </script> 
    <script language="javascript" type="text/javascript">
	        var bwTrackTotalNum=0;
	      </script> 
    <script language="javascript" type="text/javascript">
	        bwTrackTotalNumRooms='0';
			//alert(bwTrackTotalNumRooms);
	      </script> 
    <script language="javascript" type="text/javascript">
	  var bwTrackBookedRate=bwTrackOrderTotal;
	  var bwTrackBookedRateAtlas=bwTrackOrderTotalAtlas;
	</script> 
    <script language="javascript" type="text/javascript">
        bwGuestAddressLine2='';
      </script> 
    <script language="javascript" type="text/javascript">
	    bwPropertyCode='init2';
	  </script> 
    <script language="javascript" type="text/javascript">
	    bwPropertyCode='05425';
	  </script> 
    <script language="JavaScript" type="text/javascript">
  

 //-->

</script> 
    <!-- NG: TR 7121: Removed VFM Pixel tag from Select Room, properties Overview and confirmation pages. --> 
    <!-- End $Id: footer.jsp --> 
   </div> 
  </div> 
  <div align="center" id="interstl" style="display: none; top: 0; left: 0;"> 
   <!-- Start: $Workfile$ --> 
   <div id="interstitialContainer"> 
    <img src="/bestwestern/images/1pxl.gif" width="1" height="200" alt="" border="0"> 
    <object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" codebase="http://fpdownload.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=4,0,0,0" width="550" height="330" id="mov-loading-interstitial" align="middle"> <param name="allowScriptAccess" value="sameDomain"> <param name="movie" value="/bestwestern/images/processing.swf"> <param name="menu" value="false"> <param name="quality" value="high"> <embed src="images/processing.swf" menu="false" quality="high" width="550" height="330" name="loading-interstitial" align="middle" allowscriptaccess="sameDomain" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer"> </object> 
   </div> 
   <!-- End $Id: interstitial.jsp--> 
  </div> 
  <input type="hidden" name="refresh" id="refresh" value="false"> 
  <script>
			validateSSLAction();
			<!--
			var appContext = "/bestwestern"; 
			//Dummy intialization for ASP to handle. Do not remove.
			var appContextASP = "appContextASP";
			var appContextASPSSL = "appContextASPSSL";
    	    var maxUrlLimitRecentlyViewed = "3"; 
            var recentlyViewedAge = "7"; 
            var recentlyViewedCookieName = "recentlyViewed"; 
	    	var currentFailure = "0";
            var maxGroupIdSearchAllowed="5";
	    	var groupIdLengthAllowed="8";
	    	var reCaptchaPublicKey="6LcHvgATAAAAAKUuFu2XMEMfMEtmZd50Th3AttEA";
	    
            //AR1103:01022014:sangalt:Declaring variable for disabling the group id text box when maximum attempts exceeded:Started
            //var currentFailure = "0";
            //var maxGroupIdSearchAllowed="5";
            //AR1103:01022014:sangalt:Declaring variable for disabling the group id text box when maximum attempts exceeded:End
            //AR1103:01022014:sangalt:Declaring variable for having the value of allowed group id length:Started       
           // var groupIdLengthAllowed="8";
            //AR1103:01022014:sangalt:Declaring variable for having the value of allowed group id length:End
            var recentSearchLabel = "Recent Searches";
            var destination = "Carpinteria,California,United States"; 
            var latitude = "34.402015"; 
            var longitude = "-119.525735"; 
            var hotelName = "BEST WESTERN PLUS Carpinteria Inn"; 
            var recentlyViewedCookieName = "recentlyViewed"; 
            var recentSearchCookieName = "recentSearch"; 
            var maxUrlLimitForRecentSearch = "3"; 
            var recentSearchCookieAge = '7'; 
            var cookieDomain = ".bestwestern.com"; 
            var pageType = "SelectRoom"; 
            var closeLabel="CLOSE";
            var okLabel="OK ";
            var jan="Jan";
            var feb="Feb";
            var mar="Mar";
            var apr="Apr";
            var may="May";
            var jun="Jun";
            var jul="Jul";
            var aug="Aug";
            var sep="Sep";
            var oct="Oct";
            var nov="Nov";
            var dec="Dec";
            var january="January";
            var february="February";
            var march="March";
            var april="April";
            var may1="May";
            var june="June";
            var july="July";
            var august="August";
            var september="September";
            var october="October";
            var november="November";
            var december="December";
            var prev="Prev";
            var next="Next";
            var su="Su";
            var mo="Mo";
            var tu="Tu";
            var we="We";
            var th="Th";
            var fr="Fr";
            var sa="Sa";
            var DEFAULT_TEST_DESTINATION="City, Address, Attraction, Airport";
            var more="More";
            var less="Less";
            var seeAll="See All";
            var seeLess="See Less";
            var defaultUsernameText="Email or Member #  ";
            var searchButtonText="Search";
--></script> 
  <script src="/bestwestern/javascript/libs/jquery.min.js?v=01262015115721"></script> 
  <script src="/bestwestern/javascript/libs/jquery-ui-1.8.13.custom.min.js?v=01262015115721"></script> 
  <script src="/bestwestern/javascript/mylibs/jquery.bwtabs.js?v=01262015115721"></script> 
  <script src="/bestwestern/javascript/mylibs/jquery.bwavailabilitycalendar.js?v=01262015115721"></script> 
  <!--[if lt IE 8]>
	<script type="text/javascript" src="/bestwestern/javascript/mylibs/json2.js?v=01262015115721"> </script>
	<![endif]--> 
  <script src="/bestwestern/javascript/script.js?v=01262015115721"></script> 
  <script src="/bestwestern/javascript/mylibs/jquery.bwdatepicker.js?v=01262015115721"></script> 
  <script src="/bestwestern/javascript/mylibs/jquery.bwstaydatepicker.js?v=01262015115721"></script> 
  <script src="/bestwestern/javascript/mylibs/jquery.bwselectlist.js?v=01262015115721"></script> 
  <script src="/bestwestern/javascript/mylibs/jquery.bwroomselect.js?v=01262015115721"></script> 
  <script type="text/javascript" src="/bestwestern/javascript/mylibs/jquery.bwcookie.js?v=01262015115721"> </script> 
  <script type="text/javascript" src="/bestwestern/javascript/smartSearch.js?v=01262015115721"></script> 
  <script type="text/javascript">
	// Configure the max number of City, Airport & Landmark seperated by colon
	
	// MAX_RECORDS_FOR_CITY_AIRPORT_LANDMARK
	SEARCH_PARAMS ='40:3:5';

	SOUNDEX_CALL_TIMEOUT='20';
	CITY_CALL_TIMEOUT='5';
	AIRPORT_CALL_TIMEOUT='5';
	LANDMARK_CALL_TIMEOUT='5';
	CITY_SEARCH_URL='/bestwestern/CitySearch.do?searchval=';
	LANDMARK_SEARCH_URL='/bestwestern/LandmarkSmartSearch.do?searchval=';
	AIRPORT_SEARCH_URL='/bestwestern/AirportSmartSearch.do?searchval=';
	SOUNDEX_SEARCH_URL='/bestwestern/SoundexSearch.do?searchval=';
	ambigutyResultFromAffilatedURL= 'null';

	MIN_LENGTH_TO_INVOKE_SMART_SEARCH='4';
	MIN_LENGTH_TO_INVOKE_AIRPORT_SEARCH='3';
	MIN_LENGTH_TO_INVOKE_ADDRESS_SEARCH='5';
	MIN_LENGTH_TO_INVOKE_ADDRESS_WITH_SOUNDEX_SEARCH='10';
	
	ERR_MSG_ENTER_MORE_CHARACTERS = "???WEBUI.ERROR.smartSearch.enterMoreCharacters???";
</script> 
  <script language="javascript">

	 		/* AR0850: Added By AT start */
			var checkInDateLabel = "Check In";
			var updateButtonLabel = "UPDATE NIGHTS";
			var optionsLabel = "Options";
			var rateAvailableLabel = "View Rates Available ";
			var pointsPerNightLabel = "View Points Per Night ";
			var nightsLabel	 = "Nights";
			var avaiableLabel	= "Available";
		//	var nightsLabel	 = 'Available With';
			var restrictionLabel = "Available with Restrictions";
			var notAvailLabel	 = "Not Available";
			var descriptionLabel= "Additional rates may be available. Final rates may change based upon occupancy, rate plan and the room type selected.";
			var noteLabel	 = "Note:";
			/* AR0850: Added By AT End */
			var CTAmsg = "This date is not available for check in.";
			var LOSmsg;
			var LOSmsg1 = "A minimum stay of";
			var LOSmsg2 = "days is required.";
			var restMsg3 = "You must adjust your travel dates to book on this night.  ";
			var restMsg3MLOSMET = "Early departure fees may apply.";
			var restMsg3CTA = "You must adjust your travel dates to book this night.";
			var restMsg4ADV_BOOK1 = "An advance booking of";
			var restMsg4ADV_BOOK2 = "days is required.";
			var keyClickForRatesMsg = "Click a check-in date to view rates.";
			var keyAvailWithRestrictionTop = "AVAILABLE WITH RESTRICTIONS";
			var keyAvailWithRestriction = "Availability on this date is based on the following restrictions:";
			var keyRestriction3 = "You must adjust your travel dates to book on this night.  ";
			var keyClose = "CLOSE";
			//AY: AR0850:Variables to be used in availability calendar UI (jquery.bwAvailabilityCalendar.js)
			
			var decodedCurrency = $("<div/>").html("&#036;").text();
			//AR0889 : To Store the Property Specific Los
			var propertyLOS="30"
			//AR0889 : To Store the Property Specific Los
			var propertyCode="05425"
			//AR0889 : To Store the Property Specific Los
			var applicationLOS="90"
			//AR0889 : To Store the Application Looging Los
			var applicationLoggingLOS="30"
			// AR0889: To store total rooms
			 var totalRooms="1";
			// AR0889: To store destination
			 var destination=""
			// AR0889: To store checkin Date
			 var checkInDate= 	new Date("Mon Mar 02 00:00:00 MST 2015");
			// AR0889: To store checkout Date				 
			 var checkOutDate= 	new Date("Tue Mar 03 00:00:00 MST 2015");
			 var startDate = new Date(1425279600000);
			 var nights=(((checkOutDate.getTime() - checkInDate.getTime()) / (1000*60*60*24)) );
			 var confirmationMessage="???extendedStay.confirmationMessage???";
			// AR0889: end Message content for confirmation box
			
			var availabilityCalDisplayOption = 'rate';
			
			
			var datePickerImage	 = "/bestwestern/images/icon-calendar.gif";
			//Added for CR-32 View Available rooms start
			var viewAvailableRooms = "VIEW AVAILABLE ROOMS";
			var viewAvailableRoomsLabel = "To update your dates and continue with your booking please click VIEW AVAILABLE ROOMS";
			var datesTooFarAlert = "The Departure Date that you entered is too far in the future. Please enter a valid Date or choose valid Nights.";
			//Added for CR-32 View Available rooms end
			//Added for CR-32 Error Messages start
			var errorMessageUnavailable = "Some of the dates of your desired stay are sold out or have restrictions. Please change your date selections to recheck this hotel's rates and availability.";
			var errorMessageRestricted = "Reservations for this hotel are currently not available through the Best Western central reservation system.";
			var errorMessagemlosNotMet = "Some of the dates of your desired stay are sold out or have restrictions. Please change your date selections to recheck this hotel's rates and availability.";
			var errorMessageCTA = "This date is not available for check in.You must adjust your travel dates to book this night.";
			//Added for CR-32 Error Messages end
			var sessionExpired = "Your session has expired due to inactivity or because your browser does not accept cookies.  If the time away from your search was more than 30 minutes, please start your search again.  If you do not have cookies enabled, you will need to enable them in your internet browser before continuing.";
			var checkinTooFar = "Best Western accepts reservations up to 50 weeks in advance. Please select a date within a 50-week window.";
					
			var errorMessageExceedsPropertyMLOS = "This hotel does not accept online reservations exceeding "+propertyLOS+" days. Please modify the number of nights to recheck this hotel's availability.";
			var exceedsPropertyLOS = "false";
			//AR0889:Mitendra:10/23:Compairing and use lower one beetween applicationLOS and propertyLOS to Fix QC#4129
			var valueToBeUsedOnCalendar;
			if(parseInt(applicationLOS)> parseInt(propertyLOS) ){
				valueToBeUsedOnCalendar=propertyLOS;
			}else{
				valueToBeUsedOnCalendar=applicationLOS;
			}
			//AR0889:Mitendra:10/23:Fix QC#4129 Start
			
	</script> 
  <script type="text/javascript">
	var loadExternal_ajax = "/bestwestern/loadExternalData.do?";
	
	
	function renderCaptcha(name, counter) {
		if (counter <= 15) {
			if (typeof grecaptcha != "undefined" && $('#' + name).length) {
				if ($('#' + name).is(':empty')) {
					grecaptcha.render(name, {'sitekey' : reCaptchaPublicKey});
				}
			} else {
				setTimeout(function() {renderCaptcha(name, counter + 1);}, 1000);
			}
		}
	}
	

	jQuery(document).ready(function() {
		
		renderCaptcha('loginRecaptcha', 1);
		renderCaptcha('loginReserveRecaptcha', 1);
		
		
		
			setupSmartSearch();
			displayAmbigiousResults();
			jQuery("#smartsearch div").live("click",function(){
			    jQuery("#hotelLocation").val(jQuery(this).text());
			    setLatitudeLongitudeFields(jQuery(this).attr("id"));
			    jQuery("#smartsearch").css({"visibility" : "hidden"});
			    return false;
			});
			BW.initializeRecentSearch();
			
				BW.initializeGetRecentlyViewed();
			
			BW.initializeBindFormFields();
		
		

		BW.initializeCommonBindings();
		

			

			

			
           
			
           
			

			
				BW.initializeSelectRoom();
			

			
			
			
			
			

			

			

			

			
			
						
			

			
			

			
			

			
		

	});

	function loadSecureLoginData(objDiv, isModal){
		BW.initializeHttpsLoginHandler(objDiv, isModal);
	}

	function closeLoginModal(){
		var signInOverlay = jQuery('#headerSignInModal');
		signInOverlay.dialog("close");
	}

	function refreshError(){
		jQuery("#errorSecond").remove();
	}

	/**
	    * AR0889 Returns the difference between two dates.
	    */
		function days_between(date1, date2)
		{
	    	// The number of milliseconds in one day
		    var ONE_DAY = 1000 * 60 * 60 * 24;

	    	// Convert both dates to milliseconds
		    var date1_ms = date1.getTime();
		    var date2_ms = date2.getTime();
		    // Calculate the difference in milliseconds
	    	var difference_ms = date1_ms - date2_ms;
		    diff=Math.round(difference_ms/ONE_DAY);
		    return diff;
	   }

		Date.prototype.getWholeDays = function () { 
		    return Math.floor(new Date() / 1000*60*60*24); 
		}; 

		/**
		    * AR0889 Returns the rows in availbility Cal.
		    */	
		    function monthsToShowInCalendar(){
				var monthDifference=0;
				var endDate = new Date();
				var endDate = new Date(startDate.getTime()+(parseInt(valueToBeUsedOnCalendar)*24*60*60*1000));//AR0889:Mitendra:10/23:Changing applicationLOS with valueToBeUsedOnCalendar to Fix QC#4129
				startMonth=startDate.getMonth();
		    	endMonth= endDate.getMonth();
		    	startYear=startDate.getYear();
		    	endYear= endDate.getYear();
		    	
		    	if(endYear== startYear){
		    		monthDifference= endMonth- startMonth;
		    	}else{
		    		monthDifference=12- startMonth;
		    		monthDifference= monthDifference+ endMonth;
		    	}
		    	monthDifference= monthDifference+1;
		    	if (monthDifference %2!=0){
		    		monthDifference= monthDifference+1;
		    	}
		    	monthDifference= monthDifference/2;
		    	return  monthDifference;
		    }

			function prepareConfirmationMessage(noOfNights){
				confirmationMessage="You have requested "+noOfNights+" nights, are you sure?";
				return confirmationMessage;
			}
</script>  
  <div id="TMAN_BOTTOM_BODY"></div> 
  <script>
		TMAN.doTags(TMAN.position.BOTTOM_BODY);
	</script>  
  <!-- End $Id: shellContentRight.jsp Release Revision: WBE JBoss 5.1.1 Ver 2.4.2.3.6466, Date: MON JAN 26 11:53:00:00 AM MST 2015 --> 
 </body>
</html>